{
  "{\"filename\":\"/app/app.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/app.js",
      "filenameRelative": "/app/app.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "app.js",
      "sourceFileName": "app.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "app"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar bodyParser = require('body-parser');\nvar client = require('./client');\nvar cookieParser = require('cookie-parser');\nvar config = require('./config');\nvar db = require('./db');\nvar express = require('express');\nvar expressSession = require('express-session');\nvar fs = require('fs');\nvar oauth2 = require('./oauth2');\nvar passport = require('passport');\nvar path = require('path');\nvar site = require('./site');\nvar token = require('./token');\nvar user = require('./user');\n\nconsole.log('Using MemoryStore for the data store');\nconsole.log('Using MemoryStore for the Session');\nvar MemoryStore = expressSession.MemoryStore;\n\n// Express configuration\nvar app = express();\napp.set('view engine', 'ejs');\napp.use(cookieParser());\n\n// Session Configuration\napp.use(expressSession({\n  saveUninitialized: true,\n  resave: true,\n  secret: config.session.secret,\n  store: new MemoryStore(),\n  key: 'authorization.sid',\n  cookie: { maxAge: config.session.maxAge }\n}));\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Passport configuration\nrequire('./auth');\n\napp.get('/', site.index);\napp.get('/login', site.loginForm);\napp.post('/login', site.login);\napp.get('/logout', site.logout);\napp.get('/account', site.account);\n\napp.get('/dialog/authorize', oauth2.authorization);\napp.post('/dialog/authorize/decision', oauth2.decision);\napp.post('/oauth/token', oauth2.token);\n\napp.get('/api/userinfo', user.info);\napp.get('/api/clientinfo', client.info);\n\n// Mimicking google's token info endpoint from\n// https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\napp.get('/api/tokeninfo', token.info);\n\n// Mimicking google's token revoke endpoint from\n// https://developers.google.com/identity/protocols/OAuth2WebServer\napp.get('/api/revoke', token.revoke);\n\n// static resources for stylesheets, images, javascript files\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Catch all for error messages.  Instead of a stack\n// trace, this will log the json of the error message\n// to the browser and pass along the status with it\napp.use(function (err, req, res, next) {\n  if (err) {\n    if (err.status == null) {\n      console.error('Internal unexpected error from:', err.stack);\n      res.status(500);\n      res.json(err);\n    } else {\n      res.status(err.status);\n      res.json(err);\n    }\n  } else {\n    next();\n  }\n});\n\n// From time to time we need to clean up any expired tokens\n// in the database\nsetInterval(function () {\n  db.accessTokens.removeExpired().catch(function (err) {\n    return console.error('Error trying to remove expired tokens:', err.stack);\n  });\n}, config.db.timeToCheckExpiredTokens * 1000);\n\n// TODO: Change these for your own certificates.  This was generated through the commands:\n// openssl genrsa -out privatekey.pem 2048\n// openssl req -new -key privatekey.pem -out certrequest.csr\n// openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\nvar options = {\n  key: fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem')),\n  cert: fs.readFileSync(path.join(__dirname, 'certs/certificate.pem'))\n};\n\n// Create our HTTPS server listening on port 3000.\nvar port = process.env.PORT || 80;\napp.listen(port);\n// https.createServer(options, app).listen(3000);\nconsole.log('OAuth 2.0 Authorization Server started on port' + port);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "client",
        "cookieParser",
        "config",
        "db",
        "express",
        "expressSession",
        "fs",
        "oauth2",
        "passport",
        "path",
        "site",
        "token",
        "user",
        "console",
        "log",
        "MemoryStore",
        "app",
        "set",
        "use",
        "saveUninitialized",
        "resave",
        "secret",
        "session",
        "store",
        "key",
        "cookie",
        "maxAge",
        "urlencoded",
        "extended",
        "json",
        "initialize",
        "get",
        "index",
        "loginForm",
        "post",
        "login",
        "logout",
        "account",
        "authorization",
        "decision",
        "info",
        "revoke",
        "static",
        "join",
        "__dirname",
        "err",
        "req",
        "res",
        "next",
        "status",
        "error",
        "stack",
        "setInterval",
        "accessTokens",
        "removeExpired",
        "catch",
        "timeToCheckExpiredTokens",
        "options",
        "readFileSync",
        "cert",
        "port",
        "process",
        "env",
        "PORT",
        "listen"
      ],
      "mappings": "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",
      "file": "app.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst bodyParser     = require('body-parser');\nconst client         = require('./client');\nconst cookieParser   = require('cookie-parser');\nconst config         = require('./config');\nconst db             = require('./db');\nconst express        = require('express');\nconst expressSession = require('express-session');\nconst fs             = require('fs');\nconst oauth2         = require('./oauth2');\nconst passport       = require('passport');\nconst path           = require('path');\nconst site           = require('./site');\nconst token          = require('./token');\nconst user           = require('./user');\n\nconsole.log('Using MemoryStore for the data store');\nconsole.log('Using MemoryStore for the Session');\nconst MemoryStore = expressSession.MemoryStore;\n\n// Express configuration\nconst app = express();\napp.set('view engine', 'ejs');\napp.use(cookieParser());\n\n// Session Configuration\napp.use(expressSession({\n  saveUninitialized : true,\n  resave            : true,\n  secret            : config.session.secret,\n  store             : new MemoryStore(),\n  key               : 'authorization.sid',\n  cookie            : { maxAge: config.session.maxAge },\n}));\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Passport configuration\nrequire('./auth');\n\napp.get('/',        site.index);\napp.get('/login',   site.loginForm);\napp.post('/login',  site.login);\napp.get('/logout',  site.logout);\napp.get('/account', site.account);\n\napp.get('/dialog/authorize',           oauth2.authorization);\napp.post('/dialog/authorize/decision', oauth2.decision);\napp.post('/oauth/token',               oauth2.token);\n\napp.get('/api/userinfo',   user.info);\napp.get('/api/clientinfo', client.info);\n\n// Mimicking google's token info endpoint from\n// https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\napp.get('/api/tokeninfo', token.info);\n\n// Mimicking google's token revoke endpoint from\n// https://developers.google.com/identity/protocols/OAuth2WebServer\napp.get('/api/revoke', token.revoke);\n\n// static resources for stylesheets, images, javascript files\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Catch all for error messages.  Instead of a stack\n// trace, this will log the json of the error message\n// to the browser and pass along the status with it\napp.use((err, req, res, next) => {\n  if (err) {\n    if (err.status == null) {\n      console.error('Internal unexpected error from:', err.stack);\n      res.status(500);\n      res.json(err);\n    } else {\n      res.status(err.status);\n      res.json(err);\n    }\n  } else {\n    next();\n  }\n});\n\n// From time to time we need to clean up any expired tokens\n// in the database\nsetInterval(() => {\n  db.accessTokens.removeExpired()\n  .catch(err => console.error('Error trying to remove expired tokens:', err.stack));\n}, config.db.timeToCheckExpiredTokens * 1000);\n\n// TODO: Change these for your own certificates.  This was generated through the commands:\n// openssl genrsa -out privatekey.pem 2048\n// openssl req -new -key privatekey.pem -out certrequest.csr\n// openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\nconst options = {\n  key  : fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem')),\n  cert : fs.readFileSync(path.join(__dirname, 'certs/certificate.pem')),\n};\n\n\n// Create our HTTPS server listening on port 3000.\nconst port = process.env.PORT || 80\napp.listen(port)\n// https.createServer(options, app).listen(3000);\nconsole.log('OAuth 2.0 Authorization Server started on port' + port);\n"
      ]
    },
    "mtime": 1517575929000
  },
  "{\"filename\":\"/app/client.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/client.js",
      "filenameRelative": "/app/client.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "client.js",
      "sourceFileName": "client.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "client"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar passport = require('passport');\n\n/*\n * Simple informational end point, if you want to get information\n * about a particular client.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n */\nexports.info = [passport.authenticate('bearer', { session: false }), function (req, res) {\n  // req.authInfo is set using the `info` argument supplied by\n  // `BearerStrategy`.  It is typically used to indicate scope of the token,\n  // and used in access control checks.  For illustrative purposes, this\n  // example simply returns the scope in the response.\n  res.json({ client_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC5qcyJdLCJuYW1lcyI6WyJwYXNzcG9ydCIsInJlcXVpcmUiLCJleHBvcnRzIiwiaW5mbyIsImF1dGhlbnRpY2F0ZSIsInNlc3Npb24iLCJyZXEiLCJyZXMiLCJqc29uIiwiY2xpZW50X2lkIiwidXNlciIsImlkIiwibmFtZSIsInNjb3BlIiwiYXV0aEluZm8iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFdBQVdDLFFBQVEsVUFBUixDQUFqQjs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFjQUMsUUFBUUMsSUFBUixHQUFlLENBQ2JILFNBQVNJLFlBQVQsQ0FBc0IsUUFBdEIsRUFBZ0MsRUFBRUMsU0FBUyxLQUFYLEVBQWhDLENBRGEsRUFDd0MsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsTUFBSUMsSUFBSixDQUFTLEVBQUVDLFdBQVdILElBQUlJLElBQUosQ0FBU0MsRUFBdEIsRUFBMEJDLE1BQU1OLElBQUlJLElBQUosQ0FBU0UsSUFBekMsRUFBK0NDLE9BQU9QLElBQUlRLFFBQUosQ0FBYUQsS0FBbkUsRUFBVDtBQUNELENBUFksQ0FBZiIsImZpbGUiOiJjbGllbnQuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgcGFzc3BvcnQgPSByZXF1aXJlKCdwYXNzcG9ydCcpO1xuXG4vKlxuICogU2ltcGxlIGluZm9ybWF0aW9uYWwgZW5kIHBvaW50LCBpZiB5b3Ugd2FudCB0byBnZXQgaW5mb3JtYXRpb25cbiAqIGFib3V0IGEgcGFydGljdWxhciBjbGllbnQuICBZb3Ugd291bGQgY2FsbCB0aGlzIHdpdGggYW4gYWNjZXNzIHRva2VuXG4gKiBpbiB0aGUgYm9keSBvZiB0aGUgbWVzc2FnZSBhY2NvcmRpbmcgdG8gT0F1dGggMi4wIHN0YW5kYXJkc1xuICogaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc1MCNzZWN0aW9uLTIuMVxuICpcbiAqIEV4YW1wbGUgd291bGQgYmUgdXNpbmcgdGhlIGVuZHBvaW50IG9mXG4gKiBodHRwczovL2xvY2FsaG9zdDozMDAwL2FwaS91c2VyaW5mb1xuICpcbiAqIFdpdGggYSBHRVQgdXNpbmcgYW4gQXV0aG9yaXphdGlvbiBCZWFyZXIgdG9rZW4gc2ltaWxhciB0b1xuICogR0VUIC9hcGkvdXNlcmluZm9cbiAqIEhvc3Q6IGh0dHBzOi8vbG9jYWxob3N0OjMwMDBcbiAqIEF1dGhvcml6YXRpb246IEJlYXJlciBzb21lQWNjZXNzVG9rZW5IZXJlXG4gKi9cbmV4cG9ydHMuaW5mbyA9IFtcbiAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdiZWFyZXInLCB7IHNlc3Npb246IGZhbHNlIH0pLCAocmVxLCByZXMpID0+IHtcbiAgICAvLyByZXEuYXV0aEluZm8gaXMgc2V0IHVzaW5nIHRoZSBgaW5mb2AgYXJndW1lbnQgc3VwcGxpZWQgYnlcbiAgICAvLyBgQmVhcmVyU3RyYXRlZ3lgLiAgSXQgaXMgdHlwaWNhbGx5IHVzZWQgdG8gaW5kaWNhdGUgc2NvcGUgb2YgdGhlIHRva2VuLFxuICAgIC8vIGFuZCB1c2VkIGluIGFjY2VzcyBjb250cm9sIGNoZWNrcy4gIEZvciBpbGx1c3RyYXRpdmUgcHVycG9zZXMsIHRoaXNcbiAgICAvLyBleGFtcGxlIHNpbXBseSByZXR1cm5zIHRoZSBzY29wZSBpbiB0aGUgcmVzcG9uc2UuXG4gICAgcmVzLmpzb24oeyBjbGllbnRfaWQ6IHJlcS51c2VyLmlkLCBuYW1lOiByZXEudXNlci5uYW1lLCBzY29wZTogcmVxLmF1dGhJbmZvLnNjb3BlIH0pO1xuICB9LFxuXTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "passport",
        "require",
        "exports",
        "info",
        "authenticate",
        "session",
        "req",
        "res",
        "json",
        "client_id",
        "user",
        "id",
        "name",
        "scope",
        "authInfo"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;;;;;;;;;;;;;;AAcAC,QAAQC,IAAR,GAAe,CACbH,SAASI,YAAT,CAAsB,QAAtB,EAAgC,EAAEC,SAAS,KAAX,EAAhC,CADa,EACwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjE;AACA;AACA;AACA;AACAA,MAAIC,IAAJ,CAAS,EAAEC,WAAWH,IAAII,IAAJ,CAASC,EAAtB,EAA0BC,MAAMN,IAAII,IAAJ,CAASE,IAAzC,EAA+CC,OAAOP,IAAIQ,QAAJ,CAAaD,KAAnE,EAAT;AACD,CAPY,CAAf",
      "file": "client.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst passport = require('passport');\n\n/*\n * Simple informational end point, if you want to get information\n * about a particular client.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n */\nexports.info = [\n  passport.authenticate('bearer', { session: false }), (req, res) => {\n    // req.authInfo is set using the `info` argument supplied by\n    // `BearerStrategy`.  It is typically used to indicate scope of the token,\n    // and used in access control checks.  For illustrative purposes, this\n    // example simply returns the scope in the response.\n    res.json({ client_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n  },\n];\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/config/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/config\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/config/index.js",
      "filenameRelative": "/app/config/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/config",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/config",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\n//\n// The configuration options of the server\n//\n\n/**\n * Configuration of access tokens.\n *\n * expiresIn               - The time in minutes before the access token expires. Default is 60\n *                           minutes\n * calculateExpirationDate - A simple function to calculate the absolute time that the token is\n *                           going to expire in.\n */\n\nexports.token = {\n  expiresIn: 60 * 60,\n  calculateExpirationDate: function calculateExpirationDate() {\n    console.log('0000000000');\n    console.log(undefined);\n    new Date(Date.now() + undefined.token.expiresIn * 1000);\n  }\n};\n\n/**\n * Configuration of code token.\n * expiresIn - The time in minutes before the code token expires.  Default is 5 minutes.\n */\nexports.codeToken = {\n  expiresIn: 5 * 60\n};\n\n/**\n * Configuration of refresh token.\n * expiresIn - The time in minutes before the code token expires.  Default is 100 years.  Most if\n *             all refresh tokens are expected to not expire.  However, I give it a very long shelf\n *             life instead.\n */\nexports.refreshToken = {\n  expiresIn: 52560000\n};\n\n/**\n * Database configuration for access and refresh tokens.\n *\n * timeToCheckExpiredTokens - The time in seconds to check the database for expired access tokens.\n *                            For example, if it's set to 3600, then that's one hour to check for\n *                            expired access tokens.\n */\nexports.db = {\n  timeToCheckExpiredTokens: 3600\n};\n\n/**\n * Session configuration\n *\n * maxAge - The maximum age in milliseconds of the session.  Use null for web browser session only.\n *          Use something else large like 3600000 * 24 * 7 * 52 for a year.\n * secret - The session secret that you should change to what you want\n */\nexports.session = {\n  maxAge: 3600000 * 24 * 7 * 52,\n  secret: 'A Secret That Should Be Changed' // TODO: You need to change this secret to something that you choose for your secret\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJ0b2tlbiIsImV4cGlyZXNJbiIsImNhbGN1bGF0ZUV4cGlyYXRpb25EYXRlIiwiY29uc29sZSIsImxvZyIsIkRhdGUiLCJub3ciLCJjb2RlVG9rZW4iLCJyZWZyZXNoVG9rZW4iLCJkYiIsInRpbWVUb0NoZWNrRXhwaXJlZFRva2VucyIsInNlc3Npb24iLCJtYXhBZ2UiLCJzZWNyZXQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7O0FBUUFBLFFBQVFDLEtBQVIsR0FBZ0I7QUFDZEMsYUFBMEIsS0FBSyxFQURqQjtBQUVkQywyQkFBMEIsbUNBQU07QUFDOUJDLFlBQVFDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FELFlBQVFDLEdBQVI7QUFDQSxRQUFJQyxJQUFKLENBQVNBLEtBQUtDLEdBQUwsS0FBYyxVQUFLTixLQUFMLENBQVdDLFNBQVgsR0FBdUIsSUFBOUM7QUFDQztBQU5XLENBQWhCOztBQVNBOzs7O0FBSUFGLFFBQVFRLFNBQVIsR0FBb0I7QUFDbEJOLGFBQVksSUFBSTtBQURFLENBQXBCOztBQUlBOzs7Ozs7QUFNQUYsUUFBUVMsWUFBUixHQUF1QjtBQUNyQlAsYUFBWTtBQURTLENBQXZCOztBQUlBOzs7Ozs7O0FBT0FGLFFBQVFVLEVBQVIsR0FBYTtBQUNYQyw0QkFBMkI7QUFEaEIsQ0FBYjs7QUFJQTs7Ozs7OztBQU9BWCxRQUFRWSxPQUFSLEdBQWtCO0FBQ2hCQyxVQUFTLFVBQVUsRUFBVixHQUFlLENBQWYsR0FBbUIsRUFEWjtBQUVoQkMsVUFBUyxpQ0FGTyxDQUU0QjtBQUY1QixDQUFsQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2NvbmZpZyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy9cbi8vIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgb2YgdGhlIHNlcnZlclxuLy9cblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIG9mIGFjY2VzcyB0b2tlbnMuXG4gKlxuICogZXhwaXJlc0luICAgICAgICAgICAgICAgLSBUaGUgdGltZSBpbiBtaW51dGVzIGJlZm9yZSB0aGUgYWNjZXNzIHRva2VuIGV4cGlyZXMuIERlZmF1bHQgaXMgNjBcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgbWludXRlc1xuICogY2FsY3VsYXRlRXhwaXJhdGlvbkRhdGUgLSBBIHNpbXBsZSBmdW5jdGlvbiB0byBjYWxjdWxhdGUgdGhlIGFic29sdXRlIHRpbWUgdGhhdCB0aGUgdG9rZW4gaXNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgZ29pbmcgdG8gZXhwaXJlIGluLlxuICovXG5leHBvcnRzLnRva2VuID0ge1xuICBleHBpcmVzSW4gICAgICAgICAgICAgICA6IDYwICogNjAsXG4gIGNhbGN1bGF0ZUV4cGlyYXRpb25EYXRlIDogKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCcwMDAwMDAwMDAwJylcbiAgICBjb25zb2xlLmxvZyh0aGlzKVxuICAgIG5ldyBEYXRlKERhdGUubm93KCkgKyAodGhpcy50b2tlbi5leHBpcmVzSW4gKiAxMDAwKSlcbiAgICB9XG59O1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gb2YgY29kZSB0b2tlbi5cbiAqIGV4cGlyZXNJbiAtIFRoZSB0aW1lIGluIG1pbnV0ZXMgYmVmb3JlIHRoZSBjb2RlIHRva2VuIGV4cGlyZXMuICBEZWZhdWx0IGlzIDUgbWludXRlcy5cbiAqL1xuZXhwb3J0cy5jb2RlVG9rZW4gPSB7XG4gIGV4cGlyZXNJbiA6IDUgKiA2MCxcbn07XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBvZiByZWZyZXNoIHRva2VuLlxuICogZXhwaXJlc0luIC0gVGhlIHRpbWUgaW4gbWludXRlcyBiZWZvcmUgdGhlIGNvZGUgdG9rZW4gZXhwaXJlcy4gIERlZmF1bHQgaXMgMTAwIHllYXJzLiAgTW9zdCBpZlxuICogICAgICAgICAgICAgYWxsIHJlZnJlc2ggdG9rZW5zIGFyZSBleHBlY3RlZCB0byBub3QgZXhwaXJlLiAgSG93ZXZlciwgSSBnaXZlIGl0IGEgdmVyeSBsb25nIHNoZWxmXG4gKiAgICAgICAgICAgICBsaWZlIGluc3RlYWQuXG4gKi9cbmV4cG9ydHMucmVmcmVzaFRva2VuID0ge1xuICBleHBpcmVzSW4gOiA1MjU2MDAwMCxcbn07XG5cbi8qKlxuICogRGF0YWJhc2UgY29uZmlndXJhdGlvbiBmb3IgYWNjZXNzIGFuZCByZWZyZXNoIHRva2Vucy5cbiAqXG4gKiB0aW1lVG9DaGVja0V4cGlyZWRUb2tlbnMgLSBUaGUgdGltZSBpbiBzZWNvbmRzIHRvIGNoZWNrIHRoZSBkYXRhYmFzZSBmb3IgZXhwaXJlZCBhY2Nlc3MgdG9rZW5zLlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yIGV4YW1wbGUsIGlmIGl0J3Mgc2V0IHRvIDM2MDAsIHRoZW4gdGhhdCdzIG9uZSBob3VyIHRvIGNoZWNrIGZvclxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlZCBhY2Nlc3MgdG9rZW5zLlxuICovXG5leHBvcnRzLmRiID0ge1xuICB0aW1lVG9DaGVja0V4cGlyZWRUb2tlbnMgOiAzNjAwLFxufTtcblxuLyoqXG4gKiBTZXNzaW9uIGNvbmZpZ3VyYXRpb25cbiAqXG4gKiBtYXhBZ2UgLSBUaGUgbWF4aW11bSBhZ2UgaW4gbWlsbGlzZWNvbmRzIG9mIHRoZSBzZXNzaW9uLiAgVXNlIG51bGwgZm9yIHdlYiBicm93c2VyIHNlc3Npb24gb25seS5cbiAqICAgICAgICAgIFVzZSBzb21ldGhpbmcgZWxzZSBsYXJnZSBsaWtlIDM2MDAwMDAgKiAyNCAqIDcgKiA1MiBmb3IgYSB5ZWFyLlxuICogc2VjcmV0IC0gVGhlIHNlc3Npb24gc2VjcmV0IHRoYXQgeW91IHNob3VsZCBjaGFuZ2UgdG8gd2hhdCB5b3Ugd2FudFxuICovXG5leHBvcnRzLnNlc3Npb24gPSB7XG4gIG1heEFnZSA6IDM2MDAwMDAgKiAyNCAqIDcgKiA1MixcbiAgc2VjcmV0IDogJ0EgU2VjcmV0IFRoYXQgU2hvdWxkIEJlIENoYW5nZWQnLCAvLyBUT0RPOiBZb3UgbmVlZCB0byBjaGFuZ2UgdGhpcyBzZWNyZXQgdG8gc29tZXRoaW5nIHRoYXQgeW91IGNob29zZSBmb3IgeW91ciBzZWNyZXRcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "exports",
        "token",
        "expiresIn",
        "calculateExpirationDate",
        "console",
        "log",
        "Date",
        "now",
        "codeToken",
        "refreshToken",
        "db",
        "timeToCheckExpiredTokens",
        "session",
        "maxAge",
        "secret"
      ],
      "mappings": "AAAA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;AAQAA,QAAQC,KAAR,GAAgB;AACdC,aAA0B,KAAK,EADjB;AAEdC,2BAA0B,mCAAM;AAC9BC,YAAQC,GAAR,CAAY,YAAZ;AACAD,YAAQC,GAAR;AACA,QAAIC,IAAJ,CAASA,KAAKC,GAAL,KAAc,UAAKN,KAAL,CAAWC,SAAX,GAAuB,IAA9C;AACC;AANW,CAAhB;;AASA;;;;AAIAF,QAAQQ,SAAR,GAAoB;AAClBN,aAAY,IAAI;AADE,CAApB;;AAIA;;;;;;AAMAF,QAAQS,YAAR,GAAuB;AACrBP,aAAY;AADS,CAAvB;;AAIA;;;;;;;AAOAF,QAAQU,EAAR,GAAa;AACXC,4BAA2B;AADhB,CAAb;;AAIA;;;;;;;AAOAX,QAAQY,OAAR,GAAkB;AAChBC,UAAS,UAAU,EAAV,GAAe,CAAf,GAAmB,EADZ;AAEhBC,UAAS,iCAFO,CAE4B;AAF5B,CAAlB",
      "file": "index.js",
      "sourceRoot": "/app/config",
      "sourcesContent": [
        "'use strict';\n\n//\n// The configuration options of the server\n//\n\n/**\n * Configuration of access tokens.\n *\n * expiresIn               - The time in minutes before the access token expires. Default is 60\n *                           minutes\n * calculateExpirationDate - A simple function to calculate the absolute time that the token is\n *                           going to expire in.\n */\nexports.token = {\n  expiresIn               : 60 * 60,\n  calculateExpirationDate : () => {\n    console.log('0000000000')\n    console.log(this)\n    new Date(Date.now() + (this.token.expiresIn * 1000))\n    }\n};\n\n/**\n * Configuration of code token.\n * expiresIn - The time in minutes before the code token expires.  Default is 5 minutes.\n */\nexports.codeToken = {\n  expiresIn : 5 * 60,\n};\n\n/**\n * Configuration of refresh token.\n * expiresIn - The time in minutes before the code token expires.  Default is 100 years.  Most if\n *             all refresh tokens are expected to not expire.  However, I give it a very long shelf\n *             life instead.\n */\nexports.refreshToken = {\n  expiresIn : 52560000,\n};\n\n/**\n * Database configuration for access and refresh tokens.\n *\n * timeToCheckExpiredTokens - The time in seconds to check the database for expired access tokens.\n *                            For example, if it's set to 3600, then that's one hour to check for\n *                            expired access tokens.\n */\nexports.db = {\n  timeToCheckExpiredTokens : 3600,\n};\n\n/**\n * Session configuration\n *\n * maxAge - The maximum age in milliseconds of the session.  Use null for web browser session only.\n *          Use something else large like 3600000 * 24 * 7 * 52 for a year.\n * secret - The session secret that you should change to what you want\n */\nexports.session = {\n  maxAge : 3600000 * 24 * 7 * 52,\n  secret : 'A Secret That Should Be Changed', // TODO: You need to change this secret to something that you choose for your secret\n};\n"
      ]
    },
    "mtime": 1517849643000
  },
  "{\"filename\":\"/app/db/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/index.js",
      "filenameRelative": "/app/db/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose');\nvar databaseUrl = process.env.MONGO_URL || 'mongodb://mongodb/arasaac';\nmongoose.connect(databaseUrl);\nmongoose.connection.on('connected', function () {\n  return console.log('Connected to database: ' + databaseUrl);\n});\nmongoose.connection.on('error', function (err) {\n  return console.log('Database connection error: ' + err);\n});\nmongoose.connection.on('disconnected', function () {\n  return console.log('Disconnected from database');\n});\n\nprocess.on('SIGINT', function () {\n  return mongoose.connection.close(function () {\n    console.log('Finished App and disconnected from database');\n    process.exit(0);\n  });\n});\n\nexports.accessTokens = require('./accesstokens');\nexports.authorizationCodes = require('./authorizationcodes');\nexports.clients = require('./clients');\nexports.refreshTokens = require('./refreshtokens');\nexports.users = require('./users');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImRhdGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk1PTkdPX1VSTCIsImNvbm5lY3QiLCJjb25uZWN0aW9uIiwib24iLCJjb25zb2xlIiwibG9nIiwiZXJyIiwiY2xvc2UiLCJleGl0IiwiZXhwb3J0cyIsImFjY2Vzc1Rva2VucyIsImF1dGhvcml6YXRpb25Db2RlcyIsImNsaWVudHMiLCJyZWZyZXNoVG9rZW5zIiwidXNlcnMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFdBQVdDLFFBQVEsVUFBUixDQUFqQjtBQUNBLElBQU1DLGNBQWNDLFFBQVFDLEdBQVIsQ0FBWUMsU0FBWixJQUF5QiwyQkFBN0M7QUFDQUwsU0FBU00sT0FBVCxDQUFpQkosV0FBakI7QUFDQUYsU0FBU08sVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsV0FBdkIsRUFBb0M7QUFBQSxTQUFNQyxRQUFRQyxHQUFSLENBQVksNEJBQTRCUixXQUF4QyxDQUFOO0FBQUEsQ0FBcEM7QUFDQUYsU0FBU08sVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsT0FBdkIsRUFBK0IsVUFBQ0csR0FBRDtBQUFBLFNBQVNGLFFBQVFDLEdBQVIsQ0FBWSxnQ0FBZ0NDLEdBQTVDLENBQVQ7QUFBQSxDQUEvQjtBQUNBWCxTQUFTTyxVQUFULENBQW9CQyxFQUFwQixDQUF1QixjQUF2QixFQUF1QztBQUFBLFNBQU1DLFFBQVFDLEdBQVIsQ0FBWSw0QkFBWixDQUFOO0FBQUEsQ0FBdkM7O0FBRUFQLFFBQVFLLEVBQVIsQ0FBVyxRQUFYLEVBQXFCO0FBQUEsU0FBTVIsU0FBU08sVUFBVCxDQUFvQkssS0FBcEIsQ0FBMkIsWUFBTTtBQUMxREgsWUFBUUMsR0FBUixDQUFZLDZDQUFaO0FBQ0FQLFlBQVFVLElBQVIsQ0FBYSxDQUFiO0FBQ0QsR0FIMEIsQ0FBTjtBQUFBLENBQXJCOztBQUtBQyxRQUFRQyxZQUFSLEdBQTZCZCxRQUFRLGdCQUFSLENBQTdCO0FBQ0FhLFFBQVFFLGtCQUFSLEdBQTZCZixRQUFRLHNCQUFSLENBQTdCO0FBQ0FhLFFBQVFHLE9BQVIsR0FBNkJoQixRQUFRLFdBQVIsQ0FBN0I7QUFDQWEsUUFBUUksYUFBUixHQUE2QmpCLFFBQVEsaUJBQVIsQ0FBN0I7QUFDQWEsUUFBUUssS0FBUixHQUE2QmxCLFFBQVEsU0FBUixDQUE3QiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2RiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCBkYXRhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk1PTkdPX1VSTCB8fCAnbW9uZ29kYjovL21vbmdvZGIvYXJhc2FhYyc7XG5tb25nb29zZS5jb25uZWN0KGRhdGFiYXNlVXJsKTtcbm1vbmdvb3NlLmNvbm5lY3Rpb24ub24oJ2Nvbm5lY3RlZCcsICgpID0+IGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gZGF0YWJhc2U6ICcgKyBkYXRhYmFzZVVybCkpXG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdlcnJvcicsKGVycikgPT4gY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3I6ICcgKyBlcnIpKVxubW9uZ29vc2UuY29ubmVjdGlvbi5vbignZGlzY29ubmVjdGVkJywgKCkgPT4gY29uc29sZS5sb2coJ0Rpc2Nvbm5lY3RlZCBmcm9tIGRhdGFiYXNlJykpXG5cbnByb2Nlc3Mub24oJ1NJR0lOVCcsICgpID0+IG1vbmdvb3NlLmNvbm5lY3Rpb24uY2xvc2UoICgpID0+IHtcbiAgY29uc29sZS5sb2coJ0ZpbmlzaGVkIEFwcCBhbmQgZGlzY29ubmVjdGVkIGZyb20gZGF0YWJhc2UnKVxuICBwcm9jZXNzLmV4aXQoMClcbn0pKVxuXG5leHBvcnRzLmFjY2Vzc1Rva2VucyAgICAgICA9IHJlcXVpcmUoJy4vYWNjZXNzdG9rZW5zJyk7XG5leHBvcnRzLmF1dGhvcml6YXRpb25Db2RlcyA9IHJlcXVpcmUoJy4vYXV0aG9yaXphdGlvbmNvZGVzJyk7XG5leHBvcnRzLmNsaWVudHMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vY2xpZW50cycpO1xuZXhwb3J0cy5yZWZyZXNoVG9rZW5zICAgICAgPSByZXF1aXJlKCcuL3JlZnJlc2h0b2tlbnMnKTtcbmV4cG9ydHMudXNlcnMgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi91c2VycycpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "require",
        "databaseUrl",
        "process",
        "env",
        "MONGO_URL",
        "connect",
        "connection",
        "on",
        "console",
        "log",
        "err",
        "close",
        "exit",
        "exports",
        "accessTokens",
        "authorizationCodes",
        "clients",
        "refreshTokens",
        "users"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,cAAcC,QAAQC,GAAR,CAAYC,SAAZ,IAAyB,2BAA7C;AACAL,SAASM,OAAT,CAAiBJ,WAAjB;AACAF,SAASO,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC;AAAA,SAAMC,QAAQC,GAAR,CAAY,4BAA4BR,WAAxC,CAAN;AAAA,CAApC;AACAF,SAASO,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAA+B,UAACG,GAAD;AAAA,SAASF,QAAQC,GAAR,CAAY,gCAAgCC,GAA5C,CAAT;AAAA,CAA/B;AACAX,SAASO,UAAT,CAAoBC,EAApB,CAAuB,cAAvB,EAAuC;AAAA,SAAMC,QAAQC,GAAR,CAAY,4BAAZ,CAAN;AAAA,CAAvC;;AAEAP,QAAQK,EAAR,CAAW,QAAX,EAAqB;AAAA,SAAMR,SAASO,UAAT,CAAoBK,KAApB,CAA2B,YAAM;AAC1DH,YAAQC,GAAR,CAAY,6CAAZ;AACAP,YAAQU,IAAR,CAAa,CAAb;AACD,GAH0B,CAAN;AAAA,CAArB;;AAKAC,QAAQC,YAAR,GAA6Bd,QAAQ,gBAAR,CAA7B;AACAa,QAAQE,kBAAR,GAA6Bf,QAAQ,sBAAR,CAA7B;AACAa,QAAQG,OAAR,GAA6BhB,QAAQ,WAAR,CAA7B;AACAa,QAAQI,aAAR,GAA6BjB,QAAQ,iBAAR,CAA7B;AACAa,QAAQK,KAAR,GAA6BlB,QAAQ,SAAR,CAA7B",
      "file": "index.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst mongoose = require('mongoose');\nconst databaseUrl = process.env.MONGO_URL || 'mongodb://mongodb/arasaac';\nmongoose.connect(databaseUrl);\nmongoose.connection.on('connected', () => console.log('Connected to database: ' + databaseUrl))\nmongoose.connection.on('error',(err) => console.log('Database connection error: ' + err))\nmongoose.connection.on('disconnected', () => console.log('Disconnected from database'))\n\nprocess.on('SIGINT', () => mongoose.connection.close( () => {\n  console.log('Finished App and disconnected from database')\n  process.exit(0)\n}))\n\nexports.accessTokens       = require('./accesstokens');\nexports.authorizationCodes = require('./authorizationcodes');\nexports.clients            = require('./clients');\nexports.refreshTokens      = require('./refreshtokens');\nexports.users              = require('./users');\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/db/accesstokens.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/accesstokens.js",
      "filenameRelative": "/app/db/accesstokens.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "accesstokens.js",
      "sourceFileName": "accesstokens.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "accesstokens"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar jwt = require('jsonwebtoken');\n\n// The access tokens.\n// You will use these to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the access tokens\n */\nvar tokens = Object.create(null);\n\n/**\n * Returns an access token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the access token to find.\n * @returns {Promise} resolved with the token if found, otherwise resolved with undefined\n */\nexports.find = function (token) {\n  try {\n    var id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a access token, expiration date, user id, client id, and scope. Note: The actual full\n * access token is never saved.  Instead just the ID of the token is saved.  In case of a database\n * breach this prevents anyone from stealing the live tokens.\n * @param   {Object}  token          - The access token (required)\n * @param   {Date}    expirationDate - The expiration of the access token (required)\n * @param   {String}  userID         - The user ID (required)\n * @param   {String}  clientID       - The client ID (required)\n * @param   {String}  scope          - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = function (token, expirationDate, userID, clientID, scope) {\n  console.log('enter saving tokens...');\n  var id = jwt.decode(token).jti;\n  tokens[id] = { userID: userID, expirationDate: expirationDate, clientID: clientID, scope: scope };\n  console.log('+++++++++++++++++++');\n  console.log(tokens);\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes/Revokes an access token by getting the ID and removing it from the storage.\n * @param   {String}  token - The token to decode to get the id of the access token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = function (token) {\n  try {\n    var id = jwt.decode(token).jti;\n    var deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes expired access tokens. It does this by looping through them all and then removing the\n * expired ones it finds.\n * @returns {Promise} resolved with an associative of tokens that were expired\n */\nexports.removeExpired = function () {\n  var keys = Object.keys(tokens);\n  var expired = keys.reduce(function (accumulator, key) {\n    if (new Date() > tokens[key].expirationDate) {\n      var expiredToken = tokens[key];\n      delete tokens[key];\n      accumulator[key] = expiredToken; // eslint-disable-line no-param-reassign\n    }\n    return accumulator;\n  }, Object.create(null));\n  return Promise.resolve(expired);\n};\n\n/**\n * Removes all access tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = function () {\n  var deletedTokens = tokens;\n  tokens = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY2Vzc3Rva2Vucy5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwidG9rZW5zIiwiT2JqZWN0IiwiY3JlYXRlIiwiZXhwb3J0cyIsImZpbmQiLCJ0b2tlbiIsImlkIiwiZGVjb2RlIiwianRpIiwiUHJvbWlzZSIsInJlc29sdmUiLCJlcnJvciIsInVuZGVmaW5lZCIsInNhdmUiLCJleHBpcmF0aW9uRGF0ZSIsInVzZXJJRCIsImNsaWVudElEIiwic2NvcGUiLCJjb25zb2xlIiwibG9nIiwiZGVsZXRlIiwiZGVsZXRlZFRva2VuIiwicmVtb3ZlRXhwaXJlZCIsImtleXMiLCJleHBpcmVkIiwicmVkdWNlIiwiYWNjdW11bGF0b3IiLCJrZXkiLCJEYXRlIiwiZXhwaXJlZFRva2VuIiwicmVtb3ZlQWxsIiwiZGVsZXRlZFRva2VucyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsTUFBTUMsUUFBUSxjQUFSLENBQVo7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUlDLFNBQVNDLE9BQU9DLE1BQVAsQ0FBYyxJQUFkLENBQWI7O0FBRUE7Ozs7O0FBS0FDLFFBQVFDLElBQVIsR0FBZSxVQUFDQyxLQUFELEVBQVc7QUFDeEIsTUFBSTtBQUNGLFFBQU1DLEtBQUtSLElBQUlTLE1BQUosQ0FBV0YsS0FBWCxFQUFrQkcsR0FBN0I7QUFDQSxXQUFPQyxRQUFRQyxPQUFSLENBQWdCVixPQUFPTSxFQUFQLENBQWhCLENBQVA7QUFDRCxHQUhELENBR0UsT0FBT0ssS0FBUCxFQUFjO0FBQ2QsV0FBT0YsUUFBUUMsT0FBUixDQUFnQkUsU0FBaEIsQ0FBUDtBQUNEO0FBQ0YsQ0FQRDs7QUFTQTs7Ozs7Ozs7Ozs7QUFXQVQsUUFBUVUsSUFBUixHQUFlLFVBQUNSLEtBQUQsRUFBUVMsY0FBUixFQUF3QkMsTUFBeEIsRUFBZ0NDLFFBQWhDLEVBQTBDQyxLQUExQyxFQUFvRDtBQUNqRUMsVUFBUUMsR0FBUixDQUFhLHdCQUFiO0FBQ0EsTUFBTWIsS0FBS1IsSUFBSVMsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxHQUE3QjtBQUNBUixTQUFPTSxFQUFQLElBQWEsRUFBRVMsY0FBRixFQUFVRCw4QkFBVixFQUEwQkUsa0JBQTFCLEVBQW9DQyxZQUFwQyxFQUFiO0FBQ0FDLFVBQVFDLEdBQVIsQ0FBWSxxQkFBWjtBQUNBRCxVQUFRQyxHQUFSLENBQVluQixNQUFaO0FBQ0EsU0FBT1MsUUFBUUMsT0FBUixDQUFnQlYsT0FBT00sRUFBUCxDQUFoQixDQUFQO0FBQ0QsQ0FQRDs7QUFTQTs7Ozs7QUFLQUgsUUFBUWlCLE1BQVIsR0FBaUIsVUFBQ2YsS0FBRCxFQUFXO0FBQzFCLE1BQUk7QUFDRixRQUFNQyxLQUFLUixJQUFJUyxNQUFKLENBQVdGLEtBQVgsRUFBa0JHLEdBQTdCO0FBQ0EsUUFBTWEsZUFBZXJCLE9BQU9NLEVBQVAsQ0FBckI7QUFDQSxXQUFPTixPQUFPTSxFQUFQLENBQVA7QUFDQSxXQUFPRyxRQUFRQyxPQUFSLENBQWdCVyxZQUFoQixDQUFQO0FBQ0QsR0FMRCxDQUtFLE9BQU9WLEtBQVAsRUFBYztBQUNkLFdBQU9GLFFBQVFDLE9BQVIsQ0FBZ0JFLFNBQWhCLENBQVA7QUFDRDtBQUNGLENBVEQ7O0FBV0E7Ozs7O0FBS0FULFFBQVFtQixhQUFSLEdBQXdCLFlBQU07QUFDNUIsTUFBTUMsT0FBVXRCLE9BQU9zQixJQUFQLENBQVl2QixNQUFaLENBQWhCO0FBQ0EsTUFBTXdCLFVBQVVELEtBQUtFLE1BQUwsQ0FBWSxVQUFDQyxXQUFELEVBQWNDLEdBQWQsRUFBc0I7QUFDaEQsUUFBSSxJQUFJQyxJQUFKLEtBQWE1QixPQUFPMkIsR0FBUCxFQUFZYixjQUE3QixFQUE2QztBQUMzQyxVQUFNZSxlQUFlN0IsT0FBTzJCLEdBQVAsQ0FBckI7QUFDQSxhQUFPM0IsT0FBTzJCLEdBQVAsQ0FBUDtBQUNBRCxrQkFBWUMsR0FBWixJQUFtQkUsWUFBbkIsQ0FIMkMsQ0FHVjtBQUNsQztBQUNELFdBQU9ILFdBQVA7QUFDRCxHQVBlLEVBT2J6QixPQUFPQyxNQUFQLENBQWMsSUFBZCxDQVBhLENBQWhCO0FBUUEsU0FBT08sUUFBUUMsT0FBUixDQUFnQmMsT0FBaEIsQ0FBUDtBQUNELENBWEQ7O0FBYUE7Ozs7QUFJQXJCLFFBQVEyQixTQUFSLEdBQW9CLFlBQU07QUFDeEIsTUFBTUMsZ0JBQWdCL0IsTUFBdEI7QUFDQUEsV0FBc0JDLE9BQU9DLE1BQVAsQ0FBYyxJQUFkLENBQXRCO0FBQ0EsU0FBT08sUUFBUUMsT0FBUixDQUFnQnFCLGFBQWhCLENBQVA7QUFDRCxDQUpEIiwiZmlsZSI6ImFjY2Vzc3Rva2Vucy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2RiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcblxuLy8gVGhlIGFjY2VzcyB0b2tlbnMuXG4vLyBZb3Ugd2lsbCB1c2UgdGhlc2UgdG8gYWNjZXNzIHlvdXIgZW5kIHBvaW50IGRhdGEgdGhyb3VnaCB0aGUgbWVhbnMgb3V0bGluZWRcbi8vIGluIHRoZSBSRkMgVGhlIE9BdXRoIDIuMCBBdXRob3JpemF0aW9uIEZyYW1ld29yazogQmVhcmVyIFRva2VuIFVzYWdlXG4vLyAoaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc1MClcblxuLyoqXG4gKiBUb2tlbnMgaW4tbWVtb3J5IGRhdGEgc3RydWN0dXJlIHdoaWNoIHN0b3JlcyBhbGwgb2YgdGhlIGFjY2VzcyB0b2tlbnNcbiAqL1xubGV0IHRva2VucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbi8qKlxuICogUmV0dXJucyBhbiBhY2Nlc3MgdG9rZW4gaWYgaXQgZmluZHMgb25lLCBvdGhlcndpc2UgcmV0dXJucyBudWxsIGlmIG9uZSBpcyBub3QgZm91bmQuXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgdG9rZW4gLSBUaGUgdG9rZW4gdG8gZGVjb2RlIHRvIGdldCB0aGUgaWQgb2YgdGhlIGFjY2VzcyB0b2tlbiB0byBmaW5kLlxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggdGhlIHRva2VuIGlmIGZvdW5kLCBvdGhlcndpc2UgcmVzb2x2ZWQgd2l0aCB1bmRlZmluZWRcbiAqL1xuZXhwb3J0cy5maW5kID0gKHRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaWQgPSBqd3QuZGVjb2RlKHRva2VuKS5qdGk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0b2tlbnNbaWRdKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gIH1cbn07XG5cbi8qKlxuICogU2F2ZXMgYSBhY2Nlc3MgdG9rZW4sIGV4cGlyYXRpb24gZGF0ZSwgdXNlciBpZCwgY2xpZW50IGlkLCBhbmQgc2NvcGUuIE5vdGU6IFRoZSBhY3R1YWwgZnVsbFxuICogYWNjZXNzIHRva2VuIGlzIG5ldmVyIHNhdmVkLiAgSW5zdGVhZCBqdXN0IHRoZSBJRCBvZiB0aGUgdG9rZW4gaXMgc2F2ZWQuICBJbiBjYXNlIG9mIGEgZGF0YWJhc2VcbiAqIGJyZWFjaCB0aGlzIHByZXZlbnRzIGFueW9uZSBmcm9tIHN0ZWFsaW5nIHRoZSBsaXZlIHRva2Vucy5cbiAqIEBwYXJhbSAgIHtPYmplY3R9ICB0b2tlbiAgICAgICAgICAtIFRoZSBhY2Nlc3MgdG9rZW4gKHJlcXVpcmVkKVxuICogQHBhcmFtICAge0RhdGV9ICAgIGV4cGlyYXRpb25EYXRlIC0gVGhlIGV4cGlyYXRpb24gb2YgdGhlIGFjY2VzcyB0b2tlbiAocmVxdWlyZWQpXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgdXNlcklEICAgICAgICAgLSBUaGUgdXNlciBJRCAocmVxdWlyZWQpXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgY2xpZW50SUQgICAgICAgLSBUaGUgY2xpZW50IElEIChyZXF1aXJlZClcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICBzY29wZSAgICAgICAgICAtIFRoZSBzY29wZSAob3B0aW9uYWwpXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCB0aGUgc2F2ZWQgdG9rZW5cbiAqL1xuZXhwb3J0cy5zYXZlID0gKHRva2VuLCBleHBpcmF0aW9uRGF0ZSwgdXNlcklELCBjbGllbnRJRCwgc2NvcGUpID0+IHtcbiAgY29uc29sZS5sb2cgKCdlbnRlciBzYXZpbmcgdG9rZW5zLi4uJylcbiAgY29uc3QgaWQgPSBqd3QuZGVjb2RlKHRva2VuKS5qdGk7XG4gIHRva2Vuc1tpZF0gPSB7IHVzZXJJRCwgZXhwaXJhdGlvbkRhdGUsIGNsaWVudElELCBzY29wZSB9O1xuICBjb25zb2xlLmxvZygnKysrKysrKysrKysrKysrKysrKycpXG4gIGNvbnNvbGUubG9nKHRva2VucylcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0b2tlbnNbaWRdKTtcbn07XG5cbi8qKlxuICogRGVsZXRlcy9SZXZva2VzIGFuIGFjY2VzcyB0b2tlbiBieSBnZXR0aW5nIHRoZSBJRCBhbmQgcmVtb3ZpbmcgaXQgZnJvbSB0aGUgc3RvcmFnZS5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICB0b2tlbiAtIFRoZSB0b2tlbiB0byBkZWNvZGUgdG8gZ2V0IHRoZSBpZCBvZiB0aGUgYWNjZXNzIHRva2VuIHRvIGRlbGV0ZS5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIHRoZSBkZWxldGVkIHRva2VuXG4gKi9cbmV4cG9ydHMuZGVsZXRlID0gKHRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaWQgPSBqd3QuZGVjb2RlKHRva2VuKS5qdGk7XG4gICAgY29uc3QgZGVsZXRlZFRva2VuID0gdG9rZW5zW2lkXTtcbiAgICBkZWxldGUgdG9rZW5zW2lkXTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRlbGV0ZWRUb2tlbik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICB9XG59O1xuXG4vKipcbiAqIFJlbW92ZXMgZXhwaXJlZCBhY2Nlc3MgdG9rZW5zLiBJdCBkb2VzIHRoaXMgYnkgbG9vcGluZyB0aHJvdWdoIHRoZW0gYWxsIGFuZCB0aGVuIHJlbW92aW5nIHRoZVxuICogZXhwaXJlZCBvbmVzIGl0IGZpbmRzLlxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggYW4gYXNzb2NpYXRpdmUgb2YgdG9rZW5zIHRoYXQgd2VyZSBleHBpcmVkXG4gKi9cbmV4cG9ydHMucmVtb3ZlRXhwaXJlZCA9ICgpID0+IHtcbiAgY29uc3Qga2V5cyAgICA9IE9iamVjdC5rZXlzKHRva2Vucyk7XG4gIGNvbnN0IGV4cGlyZWQgPSBrZXlzLnJlZHVjZSgoYWNjdW11bGF0b3IsIGtleSkgPT4ge1xuICAgIGlmIChuZXcgRGF0ZSgpID4gdG9rZW5zW2tleV0uZXhwaXJhdGlvbkRhdGUpIHtcbiAgICAgIGNvbnN0IGV4cGlyZWRUb2tlbiA9IHRva2Vuc1trZXldO1xuICAgICAgZGVsZXRlIHRva2Vuc1trZXldO1xuICAgICAgYWNjdW11bGF0b3Jba2V5XSA9IGV4cGlyZWRUb2tlbjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIH1cbiAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gIH0sIE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGV4cGlyZWQpO1xufTtcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBhY2Nlc3MgdG9rZW5zLlxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggYWxsIHJlbW92ZWQgdG9rZW5zIHJldHVybmVkXG4gKi9cbmV4cG9ydHMucmVtb3ZlQWxsID0gKCkgPT4ge1xuICBjb25zdCBkZWxldGVkVG9rZW5zID0gdG9rZW5zO1xuICB0b2tlbnMgICAgICAgICAgICAgID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShkZWxldGVkVG9rZW5zKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "accesstokens.js"
      ],
      "names": [
        "jwt",
        "require",
        "tokens",
        "Object",
        "create",
        "exports",
        "find",
        "token",
        "id",
        "decode",
        "jti",
        "Promise",
        "resolve",
        "error",
        "undefined",
        "save",
        "expirationDate",
        "userID",
        "clientID",
        "scope",
        "console",
        "log",
        "delete",
        "deletedToken",
        "removeExpired",
        "keys",
        "expired",
        "reduce",
        "accumulator",
        "key",
        "Date",
        "expiredToken",
        "removeAll",
        "deletedTokens"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,MAAMC,QAAQ,cAAR,CAAZ;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA,IAAIC,SAASC,OAAOC,MAAP,CAAc,IAAd,CAAb;;AAEA;;;;;AAKAC,QAAQC,IAAR,GAAe,UAACC,KAAD,EAAW;AACxB,MAAI;AACF,QAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,WAAOC,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CAPD;;AASA;;;;;;;;;;;AAWAT,QAAQU,IAAR,GAAe,UAACR,KAAD,EAAQS,cAAR,EAAwBC,MAAxB,EAAgCC,QAAhC,EAA0CC,KAA1C,EAAoD;AACjEC,UAAQC,GAAR,CAAa,wBAAb;AACA,MAAMb,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACAR,SAAOM,EAAP,IAAa,EAAES,cAAF,EAAUD,8BAAV,EAA0BE,kBAA1B,EAAoCC,YAApC,EAAb;AACAC,UAAQC,GAAR,CAAY,qBAAZ;AACAD,UAAQC,GAAR,CAAYnB,MAAZ;AACA,SAAOS,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,CAPD;;AASA;;;;;AAKAH,QAAQiB,MAAR,GAAiB,UAACf,KAAD,EAAW;AAC1B,MAAI;AACF,QAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,QAAMa,eAAerB,OAAOM,EAAP,CAArB;AACA,WAAON,OAAOM,EAAP,CAAP;AACA,WAAOG,QAAQC,OAAR,CAAgBW,YAAhB,CAAP;AACD,GALD,CAKE,OAAOV,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CATD;;AAWA;;;;;AAKAT,QAAQmB,aAAR,GAAwB,YAAM;AAC5B,MAAMC,OAAUtB,OAAOsB,IAAP,CAAYvB,MAAZ,CAAhB;AACA,MAAMwB,UAAUD,KAAKE,MAAL,CAAY,UAACC,WAAD,EAAcC,GAAd,EAAsB;AAChD,QAAI,IAAIC,IAAJ,KAAa5B,OAAO2B,GAAP,EAAYb,cAA7B,EAA6C;AAC3C,UAAMe,eAAe7B,OAAO2B,GAAP,CAArB;AACA,aAAO3B,OAAO2B,GAAP,CAAP;AACAD,kBAAYC,GAAZ,IAAmBE,YAAnB,CAH2C,CAGV;AAClC;AACD,WAAOH,WAAP;AACD,GAPe,EAObzB,OAAOC,MAAP,CAAc,IAAd,CAPa,CAAhB;AAQA,SAAOO,QAAQC,OAAR,CAAgBc,OAAhB,CAAP;AACD,CAXD;;AAaA;;;;AAIArB,QAAQ2B,SAAR,GAAoB,YAAM;AACxB,MAAMC,gBAAgB/B,MAAtB;AACAA,WAAsBC,OAAOC,MAAP,CAAc,IAAd,CAAtB;AACA,SAAOO,QAAQC,OAAR,CAAgBqB,aAAhB,CAAP;AACD,CAJD",
      "file": "accesstokens.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The access tokens.\n// You will use these to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the access tokens\n */\nlet tokens = Object.create(null);\n\n/**\n * Returns an access token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the access token to find.\n * @returns {Promise} resolved with the token if found, otherwise resolved with undefined\n */\nexports.find = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a access token, expiration date, user id, client id, and scope. Note: The actual full\n * access token is never saved.  Instead just the ID of the token is saved.  In case of a database\n * breach this prevents anyone from stealing the live tokens.\n * @param   {Object}  token          - The access token (required)\n * @param   {Date}    expirationDate - The expiration of the access token (required)\n * @param   {String}  userID         - The user ID (required)\n * @param   {String}  clientID       - The client ID (required)\n * @param   {String}  scope          - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (token, expirationDate, userID, clientID, scope) => {\n  console.log ('enter saving tokens...')\n  const id = jwt.decode(token).jti;\n  tokens[id] = { userID, expirationDate, clientID, scope };\n  console.log('+++++++++++++++++++')\n  console.log(tokens)\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes/Revokes an access token by getting the ID and removing it from the storage.\n * @param   {String}  token - The token to decode to get the id of the access token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes expired access tokens. It does this by looping through them all and then removing the\n * expired ones it finds.\n * @returns {Promise} resolved with an associative of tokens that were expired\n */\nexports.removeExpired = () => {\n  const keys    = Object.keys(tokens);\n  const expired = keys.reduce((accumulator, key) => {\n    if (new Date() > tokens[key].expirationDate) {\n      const expiredToken = tokens[key];\n      delete tokens[key];\n      accumulator[key] = expiredToken; // eslint-disable-line no-param-reassign\n    }\n    return accumulator;\n  }, Object.create(null));\n  return Promise.resolve(expired);\n};\n\n/**\n * Removes all access tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = () => {\n  const deletedTokens = tokens;\n  tokens              = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n"
      ]
    },
    "mtime": 1517849267000
  },
  "{\"filename\":\"/app/db/authorizationcodes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/authorizationcodes.js",
      "filenameRelative": "/app/db/authorizationcodes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "authorizationcodes.js",
      "sourceFileName": "authorizationcodes.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "authorizationcodes"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar jwt = require('jsonwebtoken');\n\n// The authorization codes.\n// You will use these to get the access codes to get to the data in your endpoints as outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Authorization codes in-memory data structure which stores all of the authorization codes\n */\nvar codes = Object.create(null);\n\n/**\n * Returns an authorization code if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the authorization token to find.\n * @returns {Promise} resolved with the authorization code if found, otherwise undefined\n */\nexports.find = function (token) {\n  try {\n    var id = jwt.decode(token).jti;\n    return Promise.resolve(codes[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a authorization code, client id, redirect uri, user id, and scope. Note: The actual full\n * authorization token is never saved.  Instead just the ID of the token is saved.  In case of a\n * database breach this prevents anyone from stealing the live tokens.\n * @param   {String}  code        - The authorization code (required)\n * @param   {String}  clientID    - The client ID (required)\n * @param   {String}  redirectURI - The redirect URI of where to send access tokens once exchanged\n * @param   {String}  userID      - The user ID (required)\n * @param   {String}  scope       - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = function (code, clientID, redirectURI, userID, scope) {\n  var id = jwt.decode(code).jti;\n  codes[id] = { clientID: clientID, redirectURI: redirectURI, userID: userID, scope: scope };\n  return Promise.resolve(codes[id]);\n};\n\n/**\n * Deletes an authorization code\n * @param   {String}  token - The authorization code to delete\n * @returns {Promise} resolved with the deleted value\n */\nexports.delete = function (token) {\n  try {\n    var id = jwt.decode(token).jti;\n    var deletedToken = codes[id];\n    delete codes[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all authorization codes.\n * @returns {Promise} resolved with all removed authorization codes returned\n */\nexports.removeAll = function () {\n  var deletedTokens = codes;\n  codes = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhvcml6YXRpb25jb2Rlcy5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiY29kZXMiLCJPYmplY3QiLCJjcmVhdGUiLCJleHBvcnRzIiwiZmluZCIsInRva2VuIiwiaWQiLCJkZWNvZGUiLCJqdGkiLCJQcm9taXNlIiwicmVzb2x2ZSIsImVycm9yIiwidW5kZWZpbmVkIiwic2F2ZSIsImNvZGUiLCJjbGllbnRJRCIsInJlZGlyZWN0VVJJIiwidXNlcklEIiwic2NvcGUiLCJkZWxldGUiLCJkZWxldGVkVG9rZW4iLCJyZW1vdmVBbGwiLCJkZWxldGVkVG9rZW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxNQUFNQyxRQUFRLGNBQVIsQ0FBWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSUMsUUFBUUMsT0FBT0MsTUFBUCxDQUFjLElBQWQsQ0FBWjs7QUFFQTs7Ozs7QUFLQUMsUUFBUUMsSUFBUixHQUFlLFVBQUNDLEtBQUQsRUFBVztBQUN4QixNQUFJO0FBQ0YsUUFBTUMsS0FBS1IsSUFBSVMsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxHQUE3QjtBQUNBLFdBQU9DLFFBQVFDLE9BQVIsQ0FBZ0JWLE1BQU1NLEVBQU4sQ0FBaEIsQ0FBUDtBQUNELEdBSEQsQ0FHRSxPQUFPSyxLQUFQLEVBQWM7QUFDZCxXQUFPRixRQUFRQyxPQUFSLENBQWdCRSxTQUFoQixDQUFQO0FBQ0Q7QUFDRixDQVBEOztBQVNBOzs7Ozs7Ozs7OztBQVdBVCxRQUFRVSxJQUFSLEdBQWUsVUFBQ0MsSUFBRCxFQUFPQyxRQUFQLEVBQWlCQyxXQUFqQixFQUE4QkMsTUFBOUIsRUFBc0NDLEtBQXRDLEVBQWdEO0FBQzdELE1BQU1aLEtBQUtSLElBQUlTLE1BQUosQ0FBV08sSUFBWCxFQUFpQk4sR0FBNUI7QUFDQVIsUUFBTU0sRUFBTixJQUFZLEVBQUVTLGtCQUFGLEVBQVlDLHdCQUFaLEVBQXlCQyxjQUF6QixFQUFpQ0MsWUFBakMsRUFBWjtBQUNBLFNBQU9ULFFBQVFDLE9BQVIsQ0FBZ0JWLE1BQU1NLEVBQU4sQ0FBaEIsQ0FBUDtBQUNELENBSkQ7O0FBTUE7Ozs7O0FBS0FILFFBQVFnQixNQUFSLEdBQWlCLFVBQUNkLEtBQUQsRUFBVztBQUMxQixNQUFJO0FBQ0YsUUFBTUMsS0FBS1IsSUFBSVMsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxHQUE3QjtBQUNBLFFBQU1ZLGVBQWVwQixNQUFNTSxFQUFOLENBQXJCO0FBQ0EsV0FBT04sTUFBTU0sRUFBTixDQUFQO0FBQ0EsV0FBT0csUUFBUUMsT0FBUixDQUFnQlUsWUFBaEIsQ0FBUDtBQUNELEdBTEQsQ0FLRSxPQUFPVCxLQUFQLEVBQWM7QUFDZCxXQUFPRixRQUFRQyxPQUFSLENBQWdCRSxTQUFoQixDQUFQO0FBQ0Q7QUFDRixDQVREOztBQVdBOzs7O0FBSUFULFFBQVFrQixTQUFSLEdBQW9CLFlBQU07QUFDeEIsTUFBTUMsZ0JBQWdCdEIsS0FBdEI7QUFDQUEsVUFBc0JDLE9BQU9DLE1BQVAsQ0FBYyxJQUFkLENBQXRCO0FBQ0EsU0FBT08sUUFBUUMsT0FBUixDQUFnQlksYUFBaEIsQ0FBUDtBQUNELENBSkQiLCJmaWxlIjoiYXV0aG9yaXphdGlvbmNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvZGIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xuXG4vLyBUaGUgYXV0aG9yaXphdGlvbiBjb2Rlcy5cbi8vIFlvdSB3aWxsIHVzZSB0aGVzZSB0byBnZXQgdGhlIGFjY2VzcyBjb2RlcyB0byBnZXQgdG8gdGhlIGRhdGEgaW4geW91ciBlbmRwb2ludHMgYXMgb3V0bGluZWRcbi8vIGluIHRoZSBSRkMgVGhlIE9BdXRoIDIuMCBBdXRob3JpemF0aW9uIEZyYW1ld29yazogQmVhcmVyIFRva2VuIFVzYWdlXG4vLyAoaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc1MClcblxuLyoqXG4gKiBBdXRob3JpemF0aW9uIGNvZGVzIGluLW1lbW9yeSBkYXRhIHN0cnVjdHVyZSB3aGljaCBzdG9yZXMgYWxsIG9mIHRoZSBhdXRob3JpemF0aW9uIGNvZGVzXG4gKi9cbmxldCBjb2RlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbi8qKlxuICogUmV0dXJucyBhbiBhdXRob3JpemF0aW9uIGNvZGUgaWYgaXQgZmluZHMgb25lLCBvdGhlcndpc2UgcmV0dXJucyBudWxsIGlmIG9uZSBpcyBub3QgZm91bmQuXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgdG9rZW4gLSBUaGUgdG9rZW4gdG8gZGVjb2RlIHRvIGdldCB0aGUgaWQgb2YgdGhlIGF1dGhvcml6YXRpb24gdG9rZW4gdG8gZmluZC5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIHRoZSBhdXRob3JpemF0aW9uIGNvZGUgaWYgZm91bmQsIG90aGVyd2lzZSB1bmRlZmluZWRcbiAqL1xuZXhwb3J0cy5maW5kID0gKHRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaWQgPSBqd3QuZGVjb2RlKHRva2VuKS5qdGk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShjb2Rlc1tpZF0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgfVxufTtcblxuLyoqXG4gKiBTYXZlcyBhIGF1dGhvcml6YXRpb24gY29kZSwgY2xpZW50IGlkLCByZWRpcmVjdCB1cmksIHVzZXIgaWQsIGFuZCBzY29wZS4gTm90ZTogVGhlIGFjdHVhbCBmdWxsXG4gKiBhdXRob3JpemF0aW9uIHRva2VuIGlzIG5ldmVyIHNhdmVkLiAgSW5zdGVhZCBqdXN0IHRoZSBJRCBvZiB0aGUgdG9rZW4gaXMgc2F2ZWQuICBJbiBjYXNlIG9mIGFcbiAqIGRhdGFiYXNlIGJyZWFjaCB0aGlzIHByZXZlbnRzIGFueW9uZSBmcm9tIHN0ZWFsaW5nIHRoZSBsaXZlIHRva2Vucy5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICBjb2RlICAgICAgICAtIFRoZSBhdXRob3JpemF0aW9uIGNvZGUgKHJlcXVpcmVkKVxuICogQHBhcmFtICAge1N0cmluZ30gIGNsaWVudElEICAgIC0gVGhlIGNsaWVudCBJRCAocmVxdWlyZWQpXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgcmVkaXJlY3RVUkkgLSBUaGUgcmVkaXJlY3QgVVJJIG9mIHdoZXJlIHRvIHNlbmQgYWNjZXNzIHRva2VucyBvbmNlIGV4Y2hhbmdlZFxuICogQHBhcmFtICAge1N0cmluZ30gIHVzZXJJRCAgICAgIC0gVGhlIHVzZXIgSUQgKHJlcXVpcmVkKVxuICogQHBhcmFtICAge1N0cmluZ30gIHNjb3BlICAgICAgIC0gVGhlIHNjb3BlIChvcHRpb25hbClcbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIHRoZSBzYXZlZCB0b2tlblxuICovXG5leHBvcnRzLnNhdmUgPSAoY29kZSwgY2xpZW50SUQsIHJlZGlyZWN0VVJJLCB1c2VySUQsIHNjb3BlKSA9PiB7XG4gIGNvbnN0IGlkID0gand0LmRlY29kZShjb2RlKS5qdGk7XG4gIGNvZGVzW2lkXSA9IHsgY2xpZW50SUQsIHJlZGlyZWN0VVJJLCB1c2VySUQsIHNjb3BlIH07XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoY29kZXNbaWRdKTtcbn07XG5cbi8qKlxuICogRGVsZXRlcyBhbiBhdXRob3JpemF0aW9uIGNvZGVcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICB0b2tlbiAtIFRoZSBhdXRob3JpemF0aW9uIGNvZGUgdG8gZGVsZXRlXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCB0aGUgZGVsZXRlZCB2YWx1ZVxuICovXG5leHBvcnRzLmRlbGV0ZSA9ICh0b2tlbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGlkID0gand0LmRlY29kZSh0b2tlbikuanRpO1xuICAgIGNvbnN0IGRlbGV0ZWRUb2tlbiA9IGNvZGVzW2lkXTtcbiAgICBkZWxldGUgY29kZXNbaWRdO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZGVsZXRlZFRva2VuKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gIH1cbn07XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwgYXV0aG9yaXphdGlvbiBjb2Rlcy5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIGFsbCByZW1vdmVkIGF1dGhvcml6YXRpb24gY29kZXMgcmV0dXJuZWRcbiAqL1xuZXhwb3J0cy5yZW1vdmVBbGwgPSAoKSA9PiB7XG4gIGNvbnN0IGRlbGV0ZWRUb2tlbnMgPSBjb2RlcztcbiAgY29kZXMgICAgICAgICAgICAgICA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoZGVsZXRlZFRva2Vucyk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "authorizationcodes.js"
      ],
      "names": [
        "jwt",
        "require",
        "codes",
        "Object",
        "create",
        "exports",
        "find",
        "token",
        "id",
        "decode",
        "jti",
        "Promise",
        "resolve",
        "error",
        "undefined",
        "save",
        "code",
        "clientID",
        "redirectURI",
        "userID",
        "scope",
        "delete",
        "deletedToken",
        "removeAll",
        "deletedTokens"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,MAAMC,QAAQ,cAAR,CAAZ;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA,IAAIC,QAAQC,OAAOC,MAAP,CAAc,IAAd,CAAZ;;AAEA;;;;;AAKAC,QAAQC,IAAR,GAAe,UAACC,KAAD,EAAW;AACxB,MAAI;AACF,QAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,WAAOC,QAAQC,OAAR,CAAgBV,MAAMM,EAAN,CAAhB,CAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CAPD;;AASA;;;;;;;;;;;AAWAT,QAAQU,IAAR,GAAe,UAACC,IAAD,EAAOC,QAAP,EAAiBC,WAAjB,EAA8BC,MAA9B,EAAsCC,KAAtC,EAAgD;AAC7D,MAAMZ,KAAKR,IAAIS,MAAJ,CAAWO,IAAX,EAAiBN,GAA5B;AACAR,QAAMM,EAAN,IAAY,EAAES,kBAAF,EAAYC,wBAAZ,EAAyBC,cAAzB,EAAiCC,YAAjC,EAAZ;AACA,SAAOT,QAAQC,OAAR,CAAgBV,MAAMM,EAAN,CAAhB,CAAP;AACD,CAJD;;AAMA;;;;;AAKAH,QAAQgB,MAAR,GAAiB,UAACd,KAAD,EAAW;AAC1B,MAAI;AACF,QAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,QAAMY,eAAepB,MAAMM,EAAN,CAArB;AACA,WAAON,MAAMM,EAAN,CAAP;AACA,WAAOG,QAAQC,OAAR,CAAgBU,YAAhB,CAAP;AACD,GALD,CAKE,OAAOT,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CATD;;AAWA;;;;AAIAT,QAAQkB,SAAR,GAAoB,YAAM;AACxB,MAAMC,gBAAgBtB,KAAtB;AACAA,UAAsBC,OAAOC,MAAP,CAAc,IAAd,CAAtB;AACA,SAAOO,QAAQC,OAAR,CAAgBY,aAAhB,CAAP;AACD,CAJD",
      "file": "authorizationcodes.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The authorization codes.\n// You will use these to get the access codes to get to the data in your endpoints as outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Authorization codes in-memory data structure which stores all of the authorization codes\n */\nlet codes = Object.create(null);\n\n/**\n * Returns an authorization code if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the authorization token to find.\n * @returns {Promise} resolved with the authorization code if found, otherwise undefined\n */\nexports.find = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(codes[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a authorization code, client id, redirect uri, user id, and scope. Note: The actual full\n * authorization token is never saved.  Instead just the ID of the token is saved.  In case of a\n * database breach this prevents anyone from stealing the live tokens.\n * @param   {String}  code        - The authorization code (required)\n * @param   {String}  clientID    - The client ID (required)\n * @param   {String}  redirectURI - The redirect URI of where to send access tokens once exchanged\n * @param   {String}  userID      - The user ID (required)\n * @param   {String}  scope       - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (code, clientID, redirectURI, userID, scope) => {\n  const id = jwt.decode(code).jti;\n  codes[id] = { clientID, redirectURI, userID, scope };\n  return Promise.resolve(codes[id]);\n};\n\n/**\n * Deletes an authorization code\n * @param   {String}  token - The authorization code to delete\n * @returns {Promise} resolved with the deleted value\n */\nexports.delete = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = codes[id];\n    delete codes[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all authorization codes.\n * @returns {Promise} resolved with all removed authorization codes returned\n */\nexports.removeAll = () => {\n  const deletedTokens = codes;\n  codes               = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/db/clients.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/clients.js",
      "filenameRelative": "/app/db/clients.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "clients.js",
      "sourceFileName": "clients.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "clients"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose');\nvar bcrypt = require('bcrypt');\n\nvar ClientSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientId: {\n    type: Number,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientSecret: {\n    type: String,\n    required: true\n  }\n});\n\nClientSchema.methods = {\n  validate: function validate(clientSecret) {\n    if (clientSecret === this.clientSecret) return this;\n    // if (bcrypt.compareSync(clientSecret, this.clientSecret)) return this\n    logAndThrow('Wrong secret for client ' + this.name);\n  }\n};\n\nvar Client = mongoose.model('Client', ClientSchema);\n\n/**\n * This is the configuration of the clients that are allowed to connected to your authorization\n * server. These represent client applications that can connect. At a minimum you need the required\n * properties of\n *\n * id:           A unique numeric id of your client application\n * name:         The name of your client application\n * clientId:     A unique id of your client application\n * clientSecret: A unique password(ish) secret that is _best not_ shared with anyone but your\n *               client application and the authorization server.\n *\n * Optionally you can set these properties which are\n *\n * trustedClient: default if missing is false. If this is set to true then the client is regarded\n * as a trusted client and not a 3rd party application. That means that the user will not be\n * presented with a decision dialog with the trusted application and that the trusted application\n * gets full scope access without the user having to make a decision to allow or disallow the scope\n * access.\n */\nvar clients = [{\n  id: '1',\n  name: 'Samplr',\n  clientId: 'abc123',\n  clientSecret: 'ssh-secret'\n}, {\n  id: '2',\n  name: 'Samplr2',\n  clientId: 'xyz123',\n  clientSecret: 'ssh-password'\n}, {\n  id: '3',\n  name: 'Samplr3',\n  clientId: 'trustedClient',\n  clientSecret: 'ssh-otherpassword',\n  trustedClient: true\n}];\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   id   - The unique id of the client to find\n * @returns {Promise}  resolved promise with the client if found, otherwise undefined\n */\nexports.find = function (id) {\n  return Promise.resolve(clients.find(function (client) {\n    return client.id === id;\n  }));\n};\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   clientId - The unique client id of the client to find\n * @param   {Function} done     - The client if found, otherwise returns undefined\n * @returns {Promise} resolved promise with the client if found, otherwise undefined\n */\nexports.findByClientId = function (clientId) {\n  return Promise.resolve(clients.find(function (client) {\n    return client.clientId === clientId;\n  }));\n};\n\nmodule.exports = Client;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudHMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiYmNyeXB0IiwiQ2xpZW50U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJ1bmlxdWUiLCJyZXF1aXJlZCIsInRyaW0iLCJjbGllbnRJZCIsIk51bWJlciIsImNsaWVudFNlY3JldCIsIm1ldGhvZHMiLCJ2YWxpZGF0ZSIsImxvZ0FuZFRocm93IiwiQ2xpZW50IiwibW9kZWwiLCJjbGllbnRzIiwiaWQiLCJ0cnVzdGVkQ2xpZW50IiwiZXhwb3J0cyIsImZpbmQiLCJQcm9taXNlIiwicmVzb2x2ZSIsImNsaWVudCIsImZpbmRCeUNsaWVudElkIiwibW9kdWxlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFdBQVdDLFFBQVEsVUFBUixDQUFmO0FBQ0EsSUFBSUMsU0FBU0QsUUFBUSxRQUFSLENBQWI7O0FBRUEsSUFBSUUsZUFBZSxJQUFJSCxTQUFTSSxNQUFiLENBQW9CO0FBQ3JDQyxRQUFNO0FBQ0pDLFVBQU1DLE1BREY7QUFFSkMsWUFBUSxJQUZKO0FBR0pDLGNBQVUsSUFITjtBQUlKQyxVQUFNO0FBSkYsR0FEK0I7QUFPckNDLFlBQVU7QUFDUkwsVUFBTU0sTUFERTtBQUVSSixZQUFRLElBRkE7QUFHUkMsY0FBVSxJQUhGO0FBSVJDLFVBQU07QUFKRSxHQVAyQjtBQWFyQ0csZ0JBQWM7QUFDWlAsVUFBTUMsTUFETTtBQUVaRSxjQUFVO0FBRkU7QUFidUIsQ0FBcEIsQ0FBbkI7O0FBb0JBTixhQUFhVyxPQUFiLEdBQXVCO0FBQ3JCQyxZQUFVLGtCQUFVRixZQUFWLEVBQXdCO0FBQ2hDLFFBQUlBLGlCQUFpQixLQUFLQSxZQUExQixFQUF3QyxPQUFPLElBQVA7QUFDeEM7QUFDQUcsNkNBQXVDLEtBQUtYLElBQTVDO0FBQ0Q7QUFMb0IsQ0FBdkI7O0FBUUEsSUFBSVksU0FBU2pCLFNBQVNrQixLQUFULENBQWUsUUFBZixFQUF5QmYsWUFBekIsQ0FBYjs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxJQUFNZ0IsVUFBVSxDQUFDO0FBQ2ZDLE1BQWdCLEdBREQ7QUFFZmYsUUFBZ0IsUUFGRDtBQUdmTSxZQUFnQixRQUhEO0FBSWZFLGdCQUFnQjtBQUpELENBQUQsRUFLYjtBQUNETyxNQUFnQixHQURmO0FBRURmLFFBQWdCLFNBRmY7QUFHRE0sWUFBZ0IsUUFIZjtBQUlERSxnQkFBZ0I7QUFKZixDQUxhLEVBVWI7QUFDRE8sTUFBZ0IsR0FEZjtBQUVEZixRQUFnQixTQUZmO0FBR0RNLFlBQWdCLGVBSGY7QUFJREUsZ0JBQWdCLG1CQUpmO0FBS0RRLGlCQUFnQjtBQUxmLENBVmEsQ0FBaEI7O0FBa0JBOzs7OztBQUtBQyxRQUFRQyxJQUFSLEdBQWU7QUFBQSxTQUFNQyxRQUFRQyxPQUFSLENBQWdCTixRQUFRSSxJQUFSLENBQWE7QUFBQSxXQUFVRyxPQUFPTixFQUFQLEtBQWNBLEVBQXhCO0FBQUEsR0FBYixDQUFoQixDQUFOO0FBQUEsQ0FBZjs7QUFFQTs7Ozs7O0FBTUFFLFFBQVFLLGNBQVIsR0FBeUI7QUFBQSxTQUN2QkgsUUFBUUMsT0FBUixDQUFnQk4sUUFBUUksSUFBUixDQUFhO0FBQUEsV0FBVUcsT0FBT2YsUUFBUCxLQUFvQkEsUUFBOUI7QUFBQSxHQUFiLENBQWhCLENBRHVCO0FBQUEsQ0FBekI7O0FBR0FpQixPQUFPTixPQUFQLEdBQWlCTCxNQUFqQiIsImZpbGUiOiJjbGllbnRzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xudmFyIGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xuXG52YXIgQ2xpZW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgY2xpZW50SWQ6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgY2xpZW50U2VjcmV0OiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICB9XG59KTtcblxuXG5DbGllbnRTY2hlbWEubWV0aG9kcyA9IHtcbiAgdmFsaWRhdGU6IGZ1bmN0aW9uIChjbGllbnRTZWNyZXQpIHtcbiAgICBpZiAoY2xpZW50U2VjcmV0ID09PSB0aGlzLmNsaWVudFNlY3JldCkgcmV0dXJuIHRoaXNcbiAgICAvLyBpZiAoYmNyeXB0LmNvbXBhcmVTeW5jKGNsaWVudFNlY3JldCwgdGhpcy5jbGllbnRTZWNyZXQpKSByZXR1cm4gdGhpc1xuICAgIGxvZ0FuZFRocm93KGBXcm9uZyBzZWNyZXQgZm9yIGNsaWVudCAke3RoaXMubmFtZX1gKVxuICB9XG59XG5cbnZhciBDbGllbnQgPSBtb25nb29zZS5tb2RlbCgnQ2xpZW50JywgQ2xpZW50U2NoZW1hKTtcblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBjbGllbnRzIHRoYXQgYXJlIGFsbG93ZWQgdG8gY29ubmVjdGVkIHRvIHlvdXIgYXV0aG9yaXphdGlvblxuICogc2VydmVyLiBUaGVzZSByZXByZXNlbnQgY2xpZW50IGFwcGxpY2F0aW9ucyB0aGF0IGNhbiBjb25uZWN0LiBBdCBhIG1pbmltdW0geW91IG5lZWQgdGhlIHJlcXVpcmVkXG4gKiBwcm9wZXJ0aWVzIG9mXG4gKlxuICogaWQ6ICAgICAgICAgICBBIHVuaXF1ZSBudW1lcmljIGlkIG9mIHlvdXIgY2xpZW50IGFwcGxpY2F0aW9uXG4gKiBuYW1lOiAgICAgICAgIFRoZSBuYW1lIG9mIHlvdXIgY2xpZW50IGFwcGxpY2F0aW9uXG4gKiBjbGllbnRJZDogICAgIEEgdW5pcXVlIGlkIG9mIHlvdXIgY2xpZW50IGFwcGxpY2F0aW9uXG4gKiBjbGllbnRTZWNyZXQ6IEEgdW5pcXVlIHBhc3N3b3JkKGlzaCkgc2VjcmV0IHRoYXQgaXMgX2Jlc3Qgbm90XyBzaGFyZWQgd2l0aCBhbnlvbmUgYnV0IHlvdXJcbiAqICAgICAgICAgICAgICAgY2xpZW50IGFwcGxpY2F0aW9uIGFuZCB0aGUgYXV0aG9yaXphdGlvbiBzZXJ2ZXIuXG4gKlxuICogT3B0aW9uYWxseSB5b3UgY2FuIHNldCB0aGVzZSBwcm9wZXJ0aWVzIHdoaWNoIGFyZVxuICpcbiAqIHRydXN0ZWRDbGllbnQ6IGRlZmF1bHQgaWYgbWlzc2luZyBpcyBmYWxzZS4gSWYgdGhpcyBpcyBzZXQgdG8gdHJ1ZSB0aGVuIHRoZSBjbGllbnQgaXMgcmVnYXJkZWRcbiAqIGFzIGEgdHJ1c3RlZCBjbGllbnQgYW5kIG5vdCBhIDNyZCBwYXJ0eSBhcHBsaWNhdGlvbi4gVGhhdCBtZWFucyB0aGF0IHRoZSB1c2VyIHdpbGwgbm90IGJlXG4gKiBwcmVzZW50ZWQgd2l0aCBhIGRlY2lzaW9uIGRpYWxvZyB3aXRoIHRoZSB0cnVzdGVkIGFwcGxpY2F0aW9uIGFuZCB0aGF0IHRoZSB0cnVzdGVkIGFwcGxpY2F0aW9uXG4gKiBnZXRzIGZ1bGwgc2NvcGUgYWNjZXNzIHdpdGhvdXQgdGhlIHVzZXIgaGF2aW5nIHRvIG1ha2UgYSBkZWNpc2lvbiB0byBhbGxvdyBvciBkaXNhbGxvdyB0aGUgc2NvcGVcbiAqIGFjY2Vzcy5cbiAqL1xuY29uc3QgY2xpZW50cyA9IFt7XG4gIGlkICAgICAgICAgICAgOiAnMScsXG4gIG5hbWUgICAgICAgICAgOiAnU2FtcGxyJyxcbiAgY2xpZW50SWQgICAgICA6ICdhYmMxMjMnLFxuICBjbGllbnRTZWNyZXQgIDogJ3NzaC1zZWNyZXQnLFxufSwge1xuICBpZCAgICAgICAgICAgIDogJzInLFxuICBuYW1lICAgICAgICAgIDogJ1NhbXBscjInLFxuICBjbGllbnRJZCAgICAgIDogJ3h5ejEyMycsXG4gIGNsaWVudFNlY3JldCAgOiAnc3NoLXBhc3N3b3JkJyxcbn0sIHtcbiAgaWQgICAgICAgICAgICA6ICczJyxcbiAgbmFtZSAgICAgICAgICA6ICdTYW1wbHIzJyxcbiAgY2xpZW50SWQgICAgICA6ICd0cnVzdGVkQ2xpZW50JyxcbiAgY2xpZW50U2VjcmV0ICA6ICdzc2gtb3RoZXJwYXNzd29yZCcsXG4gIHRydXN0ZWRDbGllbnQgOiB0cnVlLFxufV07XG5cbi8qKlxuICogUmV0dXJucyBhIGNsaWVudCBpZiBpdCBmaW5kcyBvbmUsIG90aGVyd2lzZSByZXR1cm5zIG51bGwgaWYgYSBjbGllbnQgaXMgbm90IGZvdW5kLlxuICogQHBhcmFtICAge1N0cmluZ30gICBpZCAgIC0gVGhlIHVuaXF1ZSBpZCBvZiB0aGUgY2xpZW50IHRvIGZpbmRcbiAqIEByZXR1cm5zIHtQcm9taXNlfSAgcmVzb2x2ZWQgcHJvbWlzZSB3aXRoIHRoZSBjbGllbnQgaWYgZm91bmQsIG90aGVyd2lzZSB1bmRlZmluZWRcbiAqL1xuZXhwb3J0cy5maW5kID0gaWQgPT4gUHJvbWlzZS5yZXNvbHZlKGNsaWVudHMuZmluZChjbGllbnQgPT4gY2xpZW50LmlkID09PSBpZCkpO1xuXG4vKipcbiAqIFJldHVybnMgYSBjbGllbnQgaWYgaXQgZmluZHMgb25lLCBvdGhlcndpc2UgcmV0dXJucyBudWxsIGlmIGEgY2xpZW50IGlzIG5vdCBmb3VuZC5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICAgY2xpZW50SWQgLSBUaGUgdW5pcXVlIGNsaWVudCBpZCBvZiB0aGUgY2xpZW50IHRvIGZpbmRcbiAqIEBwYXJhbSAgIHtGdW5jdGlvbn0gZG9uZSAgICAgLSBUaGUgY2xpZW50IGlmIGZvdW5kLCBvdGhlcndpc2UgcmV0dXJucyB1bmRlZmluZWRcbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCBwcm9taXNlIHdpdGggdGhlIGNsaWVudCBpZiBmb3VuZCwgb3RoZXJ3aXNlIHVuZGVmaW5lZFxuICovXG5leHBvcnRzLmZpbmRCeUNsaWVudElkID0gY2xpZW50SWQgPT5cbiAgUHJvbWlzZS5yZXNvbHZlKGNsaWVudHMuZmluZChjbGllbnQgPT4gY2xpZW50LmNsaWVudElkID09PSBjbGllbnRJZCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENsaWVudFxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "clients.js"
      ],
      "names": [
        "mongoose",
        "require",
        "bcrypt",
        "ClientSchema",
        "Schema",
        "name",
        "type",
        "String",
        "unique",
        "required",
        "trim",
        "clientId",
        "Number",
        "clientSecret",
        "methods",
        "validate",
        "logAndThrow",
        "Client",
        "model",
        "clients",
        "id",
        "trustedClient",
        "exports",
        "find",
        "Promise",
        "resolve",
        "client",
        "findByClientId",
        "module"
      ],
      "mappings": ";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;;AAEA,IAAIE,eAAe,IAAIH,SAASI,MAAb,CAAoB;AACrCC,QAAM;AACJC,UAAMC,MADF;AAEJC,YAAQ,IAFJ;AAGJC,cAAU,IAHN;AAIJC,UAAM;AAJF,GAD+B;AAOrCC,YAAU;AACRL,UAAMM,MADE;AAERJ,YAAQ,IAFA;AAGRC,cAAU,IAHF;AAIRC,UAAM;AAJE,GAP2B;AAarCG,gBAAc;AACZP,UAAMC,MADM;AAEZE,cAAU;AAFE;AAbuB,CAApB,CAAnB;;AAoBAN,aAAaW,OAAb,GAAuB;AACrBC,YAAU,kBAAUF,YAAV,EAAwB;AAChC,QAAIA,iBAAiB,KAAKA,YAA1B,EAAwC,OAAO,IAAP;AACxC;AACAG,6CAAuC,KAAKX,IAA5C;AACD;AALoB,CAAvB;;AAQA,IAAIY,SAASjB,SAASkB,KAAT,CAAe,QAAf,EAAyBf,YAAzB,CAAb;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,IAAMgB,UAAU,CAAC;AACfC,MAAgB,GADD;AAEff,QAAgB,QAFD;AAGfM,YAAgB,QAHD;AAIfE,gBAAgB;AAJD,CAAD,EAKb;AACDO,MAAgB,GADf;AAEDf,QAAgB,SAFf;AAGDM,YAAgB,QAHf;AAIDE,gBAAgB;AAJf,CALa,EAUb;AACDO,MAAgB,GADf;AAEDf,QAAgB,SAFf;AAGDM,YAAgB,eAHf;AAIDE,gBAAgB,mBAJf;AAKDQ,iBAAgB;AALf,CAVa,CAAhB;;AAkBA;;;;;AAKAC,QAAQC,IAAR,GAAe;AAAA,SAAMC,QAAQC,OAAR,CAAgBN,QAAQI,IAAR,CAAa;AAAA,WAAUG,OAAON,EAAP,KAAcA,EAAxB;AAAA,GAAb,CAAhB,CAAN;AAAA,CAAf;;AAEA;;;;;;AAMAE,QAAQK,cAAR,GAAyB;AAAA,SACvBH,QAAQC,OAAR,CAAgBN,QAAQI,IAAR,CAAa;AAAA,WAAUG,OAAOf,QAAP,KAAoBA,QAA9B;AAAA,GAAb,CAAhB,CADuB;AAAA,CAAzB;;AAGAiB,OAAON,OAAP,GAAiBL,MAAjB",
      "file": "clients.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "var mongoose = require('mongoose');\nvar bcrypt = require('bcrypt');\n\nvar ClientSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientId: {\n    type: Number,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientSecret: {\n    type: String,\n    required: true,\n  }\n});\n\n\nClientSchema.methods = {\n  validate: function (clientSecret) {\n    if (clientSecret === this.clientSecret) return this\n    // if (bcrypt.compareSync(clientSecret, this.clientSecret)) return this\n    logAndThrow(`Wrong secret for client ${this.name}`)\n  }\n}\n\nvar Client = mongoose.model('Client', ClientSchema);\n\n/**\n * This is the configuration of the clients that are allowed to connected to your authorization\n * server. These represent client applications that can connect. At a minimum you need the required\n * properties of\n *\n * id:           A unique numeric id of your client application\n * name:         The name of your client application\n * clientId:     A unique id of your client application\n * clientSecret: A unique password(ish) secret that is _best not_ shared with anyone but your\n *               client application and the authorization server.\n *\n * Optionally you can set these properties which are\n *\n * trustedClient: default if missing is false. If this is set to true then the client is regarded\n * as a trusted client and not a 3rd party application. That means that the user will not be\n * presented with a decision dialog with the trusted application and that the trusted application\n * gets full scope access without the user having to make a decision to allow or disallow the scope\n * access.\n */\nconst clients = [{\n  id            : '1',\n  name          : 'Samplr',\n  clientId      : 'abc123',\n  clientSecret  : 'ssh-secret',\n}, {\n  id            : '2',\n  name          : 'Samplr2',\n  clientId      : 'xyz123',\n  clientSecret  : 'ssh-password',\n}, {\n  id            : '3',\n  name          : 'Samplr3',\n  clientId      : 'trustedClient',\n  clientSecret  : 'ssh-otherpassword',\n  trustedClient : true,\n}];\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   id   - The unique id of the client to find\n * @returns {Promise}  resolved promise with the client if found, otherwise undefined\n */\nexports.find = id => Promise.resolve(clients.find(client => client.id === id));\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   clientId - The unique client id of the client to find\n * @param   {Function} done     - The client if found, otherwise returns undefined\n * @returns {Promise} resolved promise with the client if found, otherwise undefined\n */\nexports.findByClientId = clientId =>\n  Promise.resolve(clients.find(client => client.clientId === clientId));\n\nmodule.exports = Client\n"
      ]
    },
    "mtime": 1517837309000
  },
  "{\"filename\":\"/app/db/refreshtokens.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/refreshtokens.js",
      "filenameRelative": "/app/db/refreshtokens.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "refreshtokens.js",
      "sourceFileName": "refreshtokens.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "refreshtokens"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar jwt = require('jsonwebtoken');\n\n// The refresh tokens.\n// You will use these to get access tokens to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the refresh tokens\n */\nvar tokens = Object.create(null);\n\n/**\n * Returns a refresh token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the refresh token to find.\n * @returns {Promise} resolved with the token\n */\nexports.find = function (token) {\n  try {\n    var id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a refresh token, user id, client id, and scope. Note: The actual full refresh token is\n * never saved.  Instead just the ID of the token is saved.  In case of a database breach this\n * prevents anyone from stealing the live tokens.\n * @param   {Object}  token    - The refresh token (required)\n * @param   {String}  userID   - The user ID (required)\n * @param   {String}  clientID - The client ID (required)\n * @param   {String}  scope    - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = function (token, userID, clientID, scope) {\n  var id = jwt.decode(token).jti;\n  tokens[id] = { userID: userID, clientID: clientID, scope: scope };\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes a refresh token\n * @param   {String}  token - The token to decode to get the id of the refresh token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = function (token) {\n  try {\n    var id = jwt.decode(token).jti;\n    var deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all refresh tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = function () {\n  var deletedTokens = tokens;\n  tokens = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZnJlc2h0b2tlbnMuanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsInRva2VucyIsIk9iamVjdCIsImNyZWF0ZSIsImV4cG9ydHMiLCJmaW5kIiwidG9rZW4iLCJpZCIsImRlY29kZSIsImp0aSIsIlByb21pc2UiLCJyZXNvbHZlIiwiZXJyb3IiLCJ1bmRlZmluZWQiLCJzYXZlIiwidXNlcklEIiwiY2xpZW50SUQiLCJzY29wZSIsImRlbGV0ZSIsImRlbGV0ZWRUb2tlbiIsInJlbW92ZUFsbCIsImRlbGV0ZWRUb2tlbnMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE1BQU1DLFFBQVEsY0FBUixDQUFaOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJQyxTQUFTQyxPQUFPQyxNQUFQLENBQWMsSUFBZCxDQUFiOztBQUVBOzs7OztBQUtBQyxRQUFRQyxJQUFSLEdBQWUsVUFBQ0MsS0FBRCxFQUFXO0FBQ3hCLE1BQUk7QUFDRixRQUFNQyxLQUFLUixJQUFJUyxNQUFKLENBQVdGLEtBQVgsRUFBa0JHLEdBQTdCO0FBQ0EsV0FBT0MsUUFBUUMsT0FBUixDQUFnQlYsT0FBT00sRUFBUCxDQUFoQixDQUFQO0FBQ0QsR0FIRCxDQUdFLE9BQU9LLEtBQVAsRUFBYztBQUNkLFdBQU9GLFFBQVFDLE9BQVIsQ0FBZ0JFLFNBQWhCLENBQVA7QUFDRDtBQUNGLENBUEQ7O0FBU0E7Ozs7Ozs7Ozs7QUFVQVQsUUFBUVUsSUFBUixHQUFlLFVBQUNSLEtBQUQsRUFBUVMsTUFBUixFQUFnQkMsUUFBaEIsRUFBMEJDLEtBQTFCLEVBQW9DO0FBQ2pELE1BQU1WLEtBQUtSLElBQUlTLE1BQUosQ0FBV0YsS0FBWCxFQUFrQkcsR0FBN0I7QUFDQVIsU0FBT00sRUFBUCxJQUFhLEVBQUVRLGNBQUYsRUFBVUMsa0JBQVYsRUFBb0JDLFlBQXBCLEVBQWI7QUFDQSxTQUFPUCxRQUFRQyxPQUFSLENBQWdCVixPQUFPTSxFQUFQLENBQWhCLENBQVA7QUFDRCxDQUpEOztBQU1BOzs7OztBQUtBSCxRQUFRYyxNQUFSLEdBQWlCLFVBQUNaLEtBQUQsRUFBVztBQUMxQixNQUFJO0FBQ0YsUUFBTUMsS0FBS1IsSUFBSVMsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxHQUE3QjtBQUNBLFFBQU1VLGVBQWVsQixPQUFPTSxFQUFQLENBQXJCO0FBQ0EsV0FBT04sT0FBT00sRUFBUCxDQUFQO0FBQ0EsV0FBT0csUUFBUUMsT0FBUixDQUFnQlEsWUFBaEIsQ0FBUDtBQUNELEdBTEQsQ0FLRSxPQUFPUCxLQUFQLEVBQWM7QUFDZCxXQUFPRixRQUFRQyxPQUFSLENBQWdCRSxTQUFoQixDQUFQO0FBQ0Q7QUFDRixDQVREOztBQVdBOzs7O0FBSUFULFFBQVFnQixTQUFSLEdBQW9CLFlBQU07QUFDeEIsTUFBTUMsZ0JBQWdCcEIsTUFBdEI7QUFDQUEsV0FBc0JDLE9BQU9DLE1BQVAsQ0FBYyxJQUFkLENBQXRCO0FBQ0EsU0FBT08sUUFBUUMsT0FBUixDQUFnQlUsYUFBaEIsQ0FBUDtBQUNELENBSkQiLCJmaWxlIjoicmVmcmVzaHRva2Vucy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2RiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcblxuLy8gVGhlIHJlZnJlc2ggdG9rZW5zLlxuLy8gWW91IHdpbGwgdXNlIHRoZXNlIHRvIGdldCBhY2Nlc3MgdG9rZW5zIHRvIGFjY2VzcyB5b3VyIGVuZCBwb2ludCBkYXRhIHRocm91Z2ggdGhlIG1lYW5zIG91dGxpbmVkXG4vLyBpbiB0aGUgUkZDIFRoZSBPQXV0aCAyLjAgQXV0aG9yaXphdGlvbiBGcmFtZXdvcms6IEJlYXJlciBUb2tlbiBVc2FnZVxuLy8gKGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NTApXG5cbi8qKlxuICogVG9rZW5zIGluLW1lbW9yeSBkYXRhIHN0cnVjdHVyZSB3aGljaCBzdG9yZXMgYWxsIG9mIHRoZSByZWZyZXNoIHRva2Vuc1xuICovXG5sZXQgdG9rZW5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuLyoqXG4gKiBSZXR1cm5zIGEgcmVmcmVzaCB0b2tlbiBpZiBpdCBmaW5kcyBvbmUsIG90aGVyd2lzZSByZXR1cm5zIG51bGwgaWYgb25lIGlzIG5vdCBmb3VuZC5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICB0b2tlbiAtIFRoZSB0b2tlbiB0byBkZWNvZGUgdG8gZ2V0IHRoZSBpZCBvZiB0aGUgcmVmcmVzaCB0b2tlbiB0byBmaW5kLlxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggdGhlIHRva2VuXG4gKi9cbmV4cG9ydHMuZmluZCA9ICh0b2tlbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGlkID0gand0LmRlY29kZSh0b2tlbikuanRpO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodG9rZW5zW2lkXSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICB9XG59O1xuXG4vKipcbiAqIFNhdmVzIGEgcmVmcmVzaCB0b2tlbiwgdXNlciBpZCwgY2xpZW50IGlkLCBhbmQgc2NvcGUuIE5vdGU6IFRoZSBhY3R1YWwgZnVsbCByZWZyZXNoIHRva2VuIGlzXG4gKiBuZXZlciBzYXZlZC4gIEluc3RlYWQganVzdCB0aGUgSUQgb2YgdGhlIHRva2VuIGlzIHNhdmVkLiAgSW4gY2FzZSBvZiBhIGRhdGFiYXNlIGJyZWFjaCB0aGlzXG4gKiBwcmV2ZW50cyBhbnlvbmUgZnJvbSBzdGVhbGluZyB0aGUgbGl2ZSB0b2tlbnMuXG4gKiBAcGFyYW0gICB7T2JqZWN0fSAgdG9rZW4gICAgLSBUaGUgcmVmcmVzaCB0b2tlbiAocmVxdWlyZWQpXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgdXNlcklEICAgLSBUaGUgdXNlciBJRCAocmVxdWlyZWQpXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgY2xpZW50SUQgLSBUaGUgY2xpZW50IElEIChyZXF1aXJlZClcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICBzY29wZSAgICAtIFRoZSBzY29wZSAob3B0aW9uYWwpXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCB0aGUgc2F2ZWQgdG9rZW5cbiAqL1xuZXhwb3J0cy5zYXZlID0gKHRva2VuLCB1c2VySUQsIGNsaWVudElELCBzY29wZSkgPT4ge1xuICBjb25zdCBpZCA9IGp3dC5kZWNvZGUodG9rZW4pLmp0aTtcbiAgdG9rZW5zW2lkXSA9IHsgdXNlcklELCBjbGllbnRJRCwgc2NvcGUgfTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0b2tlbnNbaWRdKTtcbn07XG5cbi8qKlxuICogRGVsZXRlcyBhIHJlZnJlc2ggdG9rZW5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICB0b2tlbiAtIFRoZSB0b2tlbiB0byBkZWNvZGUgdG8gZ2V0IHRoZSBpZCBvZiB0aGUgcmVmcmVzaCB0b2tlbiB0byBkZWxldGUuXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCB0aGUgZGVsZXRlZCB0b2tlblxuICovXG5leHBvcnRzLmRlbGV0ZSA9ICh0b2tlbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGlkID0gand0LmRlY29kZSh0b2tlbikuanRpO1xuICAgIGNvbnN0IGRlbGV0ZWRUb2tlbiA9IHRva2Vuc1tpZF07XG4gICAgZGVsZXRlIHRva2Vuc1tpZF07XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShkZWxldGVkVG9rZW4pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCByZWZyZXNoIHRva2Vucy5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIGFsbCByZW1vdmVkIHRva2VucyByZXR1cm5lZFxuICovXG5leHBvcnRzLnJlbW92ZUFsbCA9ICgpID0+IHtcbiAgY29uc3QgZGVsZXRlZFRva2VucyA9IHRva2VucztcbiAgdG9rZW5zICAgICAgICAgICAgICA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoZGVsZXRlZFRva2Vucyk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "refreshtokens.js"
      ],
      "names": [
        "jwt",
        "require",
        "tokens",
        "Object",
        "create",
        "exports",
        "find",
        "token",
        "id",
        "decode",
        "jti",
        "Promise",
        "resolve",
        "error",
        "undefined",
        "save",
        "userID",
        "clientID",
        "scope",
        "delete",
        "deletedToken",
        "removeAll",
        "deletedTokens"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,MAAMC,QAAQ,cAAR,CAAZ;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA,IAAIC,SAASC,OAAOC,MAAP,CAAc,IAAd,CAAb;;AAEA;;;;;AAKAC,QAAQC,IAAR,GAAe,UAACC,KAAD,EAAW;AACxB,MAAI;AACF,QAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,WAAOC,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CAPD;;AASA;;;;;;;;;;AAUAT,QAAQU,IAAR,GAAe,UAACR,KAAD,EAAQS,MAAR,EAAgBC,QAAhB,EAA0BC,KAA1B,EAAoC;AACjD,MAAMV,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACAR,SAAOM,EAAP,IAAa,EAAEQ,cAAF,EAAUC,kBAAV,EAAoBC,YAApB,EAAb;AACA,SAAOP,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,CAJD;;AAMA;;;;;AAKAH,QAAQc,MAAR,GAAiB,UAACZ,KAAD,EAAW;AAC1B,MAAI;AACF,QAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,QAAMU,eAAelB,OAAOM,EAAP,CAArB;AACA,WAAON,OAAOM,EAAP,CAAP;AACA,WAAOG,QAAQC,OAAR,CAAgBQ,YAAhB,CAAP;AACD,GALD,CAKE,OAAOP,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CATD;;AAWA;;;;AAIAT,QAAQgB,SAAR,GAAoB,YAAM;AACxB,MAAMC,gBAAgBpB,MAAtB;AACAA,WAAsBC,OAAOC,MAAP,CAAc,IAAd,CAAtB;AACA,SAAOO,QAAQC,OAAR,CAAgBU,aAAhB,CAAP;AACD,CAJD",
      "file": "refreshtokens.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The refresh tokens.\n// You will use these to get access tokens to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the refresh tokens\n */\nlet tokens = Object.create(null);\n\n/**\n * Returns a refresh token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the refresh token to find.\n * @returns {Promise} resolved with the token\n */\nexports.find = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a refresh token, user id, client id, and scope. Note: The actual full refresh token is\n * never saved.  Instead just the ID of the token is saved.  In case of a database breach this\n * prevents anyone from stealing the live tokens.\n * @param   {Object}  token    - The refresh token (required)\n * @param   {String}  userID   - The user ID (required)\n * @param   {String}  clientID - The client ID (required)\n * @param   {String}  scope    - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (token, userID, clientID, scope) => {\n  const id = jwt.decode(token).jti;\n  tokens[id] = { userID, clientID, scope };\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes a refresh token\n * @param   {String}  token - The token to decode to get the id of the refresh token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all refresh tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = () => {\n  const deletedTokens = tokens;\n  tokens              = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/db/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/users.js",
      "filenameRelative": "/app/db/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose');\nvar bcrypt = require('bcrypt');\n\nvar _require = require('../utils'),\n    logAndThrow = _require.logAndThrow;\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  id: {\n    type: Number,\n    unique: true,\n    required: true\n  },\n  username: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true\n  }\n});\n\n/* Do not declare methods using ES6 arrow functions (=>). Arrow functions explicitly prevent binding this, \nso your method will not have access to the document */\nUserSchema.methods = {\n  validate: function validate(password) {\n    if (bcrypt.compareSync(password, this.password)) return this;\n    logAndThrow('Wrong password for user ' + this.username);\n  }\n};\n\nvar User = mongoose.model('User', UserSchema);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImJjcnlwdCIsImxvZ0FuZFRocm93IiwiVXNlclNjaGVtYSIsIlNjaGVtYSIsImVtYWlsIiwidHlwZSIsIlN0cmluZyIsInVuaXF1ZSIsInJlcXVpcmVkIiwidHJpbSIsImlkIiwiTnVtYmVyIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsIm1ldGhvZHMiLCJ2YWxpZGF0ZSIsImNvbXBhcmVTeW5jIiwiVXNlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxXQUFXQyxRQUFRLFVBQVIsQ0FBZjtBQUNBLElBQUlDLFNBQVNELFFBQVEsUUFBUixDQUFiOztlQUN3QkEsUUFBUSxVQUFSLEM7SUFBaEJFLFcsWUFBQUEsVzs7QUFFUixJQUFJQyxhQUFhLElBQUlKLFNBQVNLLE1BQWIsQ0FBb0I7QUFDbkNDLFNBQU87QUFDTEMsVUFBTUMsTUFERDtBQUVMQyxZQUFRLElBRkg7QUFHTEMsY0FBVSxJQUhMO0FBSUxDLFVBQU07QUFKRCxHQUQ0QjtBQU9uQ0MsTUFBSTtBQUNGTCxVQUFNTSxNQURKO0FBRUZKLFlBQVEsSUFGTjtBQUdGQyxjQUFVO0FBSFIsR0FQK0I7QUFZbkNJLFlBQVU7QUFDUlAsVUFBTUMsTUFERTtBQUVSQyxZQUFRLElBRkE7QUFHUkMsY0FBVSxJQUhGO0FBSVJDLFVBQU07QUFKRSxHQVp5QjtBQWtCbkNJLFlBQVU7QUFDUlIsVUFBTUMsTUFERTtBQUVSRSxjQUFVO0FBRkY7QUFsQnlCLENBQXBCLENBQWpCOztBQXdCQTs7QUFFQU4sV0FBV1ksT0FBWCxHQUFxQjtBQUNuQkMsWUFBVSxrQkFBVUYsUUFBVixFQUFvQjtBQUM1QixRQUFJYixPQUFPZ0IsV0FBUCxDQUFtQkgsUUFBbkIsRUFBNkIsS0FBS0EsUUFBbEMsQ0FBSixFQUFpRCxPQUFPLElBQVA7QUFDakRaLDZDQUF1QyxLQUFLVyxRQUE1QztBQUNEO0FBSmtCLENBQXJCOztBQU9BLElBQUlLLE9BQU9uQixTQUFTb0IsS0FBVCxDQUFlLE1BQWYsRUFBdUJoQixVQUF2QixDQUFYO0FBQ0FpQixPQUFPQyxPQUFQLEdBQWlCSCxJQUFqQiIsImZpbGUiOiJ1c2Vycy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2RiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxudmFyIGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpXG5jb25zdCB7IGxvZ0FuZFRocm93IH0gPSByZXF1aXJlKCcuLi91dGlscycpXG5cbnZhciBVc2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIGVtYWlsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB0cmltOiB0cnVlXG4gIH0sXG4gIGlkOiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICB1c2VybmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgdHJpbTogdHJ1ZVxuICB9LFxuICBwYXNzd29yZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9XG59KVxuXG4vKiBEbyBub3QgZGVjbGFyZSBtZXRob2RzIHVzaW5nIEVTNiBhcnJvdyBmdW5jdGlvbnMgKD0+KS4gQXJyb3cgZnVuY3Rpb25zIGV4cGxpY2l0bHkgcHJldmVudCBiaW5kaW5nIHRoaXMsIFxuc28geW91ciBtZXRob2Qgd2lsbCBub3QgaGF2ZSBhY2Nlc3MgdG8gdGhlIGRvY3VtZW50ICovXG5Vc2VyU2NoZW1hLm1ldGhvZHMgPSB7XG4gIHZhbGlkYXRlOiBmdW5jdGlvbiAocGFzc3dvcmQpIHtcbiAgICBpZiAoYmNyeXB0LmNvbXBhcmVTeW5jKHBhc3N3b3JkLCB0aGlzLnBhc3N3b3JkKSkgcmV0dXJuIHRoaXNcbiAgICBsb2dBbmRUaHJvdyhgV3JvbmcgcGFzc3dvcmQgZm9yIHVzZXIgJHt0aGlzLnVzZXJuYW1lfWApXG4gIH1cbn1cblxudmFyIFVzZXIgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIFVzZXJTY2hlbWEpO1xubW9kdWxlLmV4cG9ydHMgPSBVc2VyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "mongoose",
        "require",
        "bcrypt",
        "logAndThrow",
        "UserSchema",
        "Schema",
        "email",
        "type",
        "String",
        "unique",
        "required",
        "trim",
        "id",
        "Number",
        "username",
        "password",
        "methods",
        "validate",
        "compareSync",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;;eACwBA,QAAQ,UAAR,C;IAAhBE,W,YAAAA,W;;AAER,IAAIC,aAAa,IAAIJ,SAASK,MAAb,CAAoB;AACnCC,SAAO;AACLC,UAAMC,MADD;AAELC,YAAQ,IAFH;AAGLC,cAAU,IAHL;AAILC,UAAM;AAJD,GAD4B;AAOnCC,MAAI;AACFL,UAAMM,MADJ;AAEFJ,YAAQ,IAFN;AAGFC,cAAU;AAHR,GAP+B;AAYnCI,YAAU;AACRP,UAAMC,MADE;AAERC,YAAQ,IAFA;AAGRC,cAAU,IAHF;AAIRC,UAAM;AAJE,GAZyB;AAkBnCI,YAAU;AACRR,UAAMC,MADE;AAERE,cAAU;AAFF;AAlByB,CAApB,CAAjB;;AAwBA;;AAEAN,WAAWY,OAAX,GAAqB;AACnBC,YAAU,kBAAUF,QAAV,EAAoB;AAC5B,QAAIb,OAAOgB,WAAP,CAAmBH,QAAnB,EAA6B,KAAKA,QAAlC,CAAJ,EAAiD,OAAO,IAAP;AACjDZ,6CAAuC,KAAKW,QAA5C;AACD;AAJkB,CAArB;;AAOA,IAAIK,OAAOnB,SAASoB,KAAT,CAAe,MAAf,EAAuBhB,UAAvB,CAAX;AACAiB,OAAOC,OAAP,GAAiBH,IAAjB",
      "file": "users.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "var mongoose = require('mongoose')\nvar bcrypt = require('bcrypt')\nconst { logAndThrow } = require('../utils')\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  id: {\n    type: Number,\n    unique: true,\n    required: true\n  },\n  username: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true\n  }\n})\n\n/* Do not declare methods using ES6 arrow functions (=>). Arrow functions explicitly prevent binding this, \nso your method will not have access to the document */\nUserSchema.methods = {\n  validate: function (password) {\n    if (bcrypt.compareSync(password, this.password)) return this\n    logAndThrow(`Wrong password for user ${this.username}`)\n  }\n}\n\nvar User = mongoose.model('User', UserSchema);\nmodule.exports = User;\n"
      ]
    },
    "mtime": 1517828837000
  },
  "{\"filename\":\"/app/oauth2.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/oauth2.js",
      "filenameRelative": "/app/oauth2.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "oauth2.js",
      "sourceFileName": "oauth2.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "oauth2"
    },
    "ignored": false,
    "code": "'use strict';\n\n// Register supported grant types.\n//\n// OAuth 2.0 specifies a framework that allows users to grant client\n// applications limited access to their protected resources.  It does this\n// through a process of the user granting access, and the client exchanging\n// the grant for an access token.\n\nvar config = require('./config');\nvar db = require('./db');\nvar User = require('./db/users');\nvar Client = require('./db/clients');\nvar login = require('connect-ensure-login');\nvar oauth2orize = require('oauth2orize');\nvar passport = require('passport');\nvar utils = require('./utils');\nvar validate = require('./validate');\n\n// create OAuth 2.0 server\nvar server = oauth2orize.createServer();\n\n// Configured expiresIn\nvar expiresIn = { expires_in: config.token.expiresIn };\n\n/**\n * Grant authorization codes\n *\n * The callback takes the `client` requesting authorization, the `redirectURI`\n * (which is used as a verifier in the subseq++uent exchange), the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a code,\n * which is bound to these values, and will be exchanged for an access token.\n */\nserver.grant(oauth2orize.grant.code(function (client, redirectURI, user, ares, done) {\n  var code = utils.createToken({ sub: user.id, exp: config.codeToken.expiresIn });\n  db.authorizationCodes.save(code, client.id, redirectURI, user.id, client.scope).then(function () {\n    return done(null, code);\n  }).catch(function (err) {\n    return done(err);\n  });\n}));\n\n/**\n * Grant implicit authorization.\n *\n * The callback takes the `client` requesting authorization, the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a token,\n * which is bound to these values.\n */\nserver.grant(oauth2orize.grant.token(function (client, user, ares, done) {\n  var token = utils.createToken({ sub: user.id, exp: config.token.expiresIn });\n  var expiration = config.token.calculateExpirationDate();\n\n  db.accessTokens.save(token, expiration, user.id, client.id, client.scope).then(function () {\n    return done(null, token, expiresIn);\n  }).catch(function (err) {\n    return done(err);\n  });\n}));\n\n/**\n * Exchange authorization codes for access tokens.\n *\n * The callback accepts the `client`, which is exchanging `code` and any\n * `redirectURI` from the authorization request for verification.  If these values\n * are validated, the application issues an access token on behalf of the user who\n * authorized the code.\n */\nserver.exchange(oauth2orize.exchange.code(function (client, code, redirectURI, done) {\n  db.authorizationCodes.delete(code).then(function (authCode) {\n    return validate.authCode(code, authCode, client, redirectURI);\n  }).then(function (authCode) {\n    return validate.generateTokens(authCode);\n  }).then(function (tokens) {\n    if (tokens.length === 1) {\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging auth code for tokens');\n  }).catch(function () {\n    return done(null, false);\n  });\n}));\n\n/**\n * Exchange user id and password for access tokens.\n *\n * The callback accepts the `client`, which is exchanging the user's name and password\n * from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the user who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.password(function (client, username, password, scope, done) {\n  console.log(client);\n  console.log(username);\n  console.log(password);\n  console.log('----------');\n  User.findOne({ username: username }).then(function (user) {\n    return user ? user.validate(password) : logAndThrow('User ' + username + ' not found');\n  }).then(function (user) {\n    return validate.generateTokens({ scope: scope, userID: user.id, clientID: client.clientId });\n  }).then(function (tokens) {\n    console.log('**********' + tokens + '******');\n    if (tokens === false) {\n      console.log('1');\n      return done(null, false);\n    }\n    if (tokens.length === 1) {\n      console.log('2');\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      console.log('3');\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging password for tokens');\n  }).catch(function () {\n    return done(null, false);\n  });\n}));\n\n/**\n * Exchange the client id and password/secret for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id and\n * password/secret from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the client who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.clientCredentials(function (client, scope, done) {\n  var token = utils.createToken({ sub: client.id, exp: config.token.expiresIn });\n  var expiration = config.token.calculateExpirationDate();\n  // Pass in a null for user id since there is no user when using this grant type\n  db.accessTokens.save(token, expiration, null, client.id, scope).then(function () {\n    return done(null, token, null, expiresIn);\n  }).catch(function (err) {\n    return done(err);\n  });\n}));\n\n/**\n * Exchange the refresh token for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id from the token\n * request for verification.  If this value is validated, the application issues an access\n * token on behalf of the client who authorized the code\n */\nserver.exchange(oauth2orize.exchange.refreshToken(function (client, refreshToken, scope, done) {\n  db.refreshTokens.find(refreshToken).then(function (foundRefreshToken) {\n    return validate.refreshToken(foundRefreshToken, refreshToken, client);\n  }).then(function (foundRefreshToken) {\n    return validate.generateToken(foundRefreshToken);\n  }).then(function (token) {\n    return done(null, token, null, expiresIn);\n  }).catch(function () {\n    return done(null, false);\n  });\n}));\n\n/*\n * User authorization endpoint\n *\n * `authorization` middleware accepts a `validate` callback which is\n * responsible for validating the client making the authorization request.  In\n * doing so, is recommended that the `redirectURI` be checked against a\n * registered value, although security requirements may vary accross\n * implementations.  Once validated, the `done` callback must be invoked with\n * a `client` instance, as well as the `redirectURI` to which the user will be\n * redirected after an authorization decision is obtained.\n *\n * This middleware simply initializes a new authorization transaction.  It is\n * the application's responsibility to authenticate the user and render a dialog\n * to obtain their approval (displaying details about the client requesting\n * authorization).  We accomplish that here by routing through `ensureLoggedIn()`\n * first, and rendering the `dialog` view.\n */\nexports.authorization = [login.ensureLoggedIn(), server.authorization(function (clientID, redirectURI, scope, done) {\n  db.clients.findByClientId(clientID).then(function (client) {\n    if (client) {\n      client.scope = scope; // eslint-disable-line no-param-reassign\n    }\n    // WARNING: For security purposes, it is highly advisable to check that\n    //          redirectURI provided by the client matches one registered with\n    //          the server.  For simplicity, this example does not.  You have\n    //          been warned.\n    return done(null, client, redirectURI);\n  }).catch(function (err) {\n    return done(err);\n  });\n}), function (req, res, next) {\n  // Render the decision dialog if the client isn't a trusted client\n  // TODO:  Make a mechanism so that if this isn't a trusted client, the user can record that\n  // they have consented but also make a mechanism so that if the user revokes access to any of\n  // the clients then they will have to re-consent.\n  db.clients.findByClientId(req.query.client_id).then(function (client) {\n    if (client != null && client.trustedClient && client.trustedClient === true) {\n      // This is how we short call the decision like the dialog below does\n      server.decision({ loadTransaction: false }, function (serverReq, callback) {\n        callback(null, { allow: true });\n      })(req, res, next);\n    } else {\n      res.render('dialog', { transactionID: req.oauth2.transactionID, user: req.user, client: req.oauth2.client });\n    }\n  }).catch(function () {\n    return res.render('dialog', { transactionID: req.oauth2.transactionID, user: req.user, client: req.oauth2.client });\n  });\n}];\n\n/**\n * User decision endpoint\n *\n * `decision` middleware processes a user's decision to allow or deny access\n * requested by a client application.  Based on the grant type requested by the\n * client, the above grant middleware configured above will be invoked to send\n * a response.\n */\nexports.decision = [login.ensureLoggedIn(), server.decision()];\n\n/**\n * Token endpoint\n *\n * `token` middleware handles client requests to exchange authorization grants\n * for access tokens.  Based on the grant type being exchanged, the above\n * exchange middleware will be invoked to handle the request.  Clients must\n * authenticate when making requests to this endpoint.\n */\nexports.token = [passport.authenticate(['basic', 'oauth2-client-password'], { session: false }), server.token(), server.errorHandler()];\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\nserver.serializeClient(function (client, done) {\n  return done(null, client.id);\n});\n\nserver.deserializeClient(function (id, done) {\n  db.clients.find(id).then(function (client) {\n    return done(null, client);\n  }).catch(function (err) {\n    return done(err);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "oauth2.js"
      ],
      "names": [
        "config",
        "require",
        "db",
        "User",
        "Client",
        "login",
        "oauth2orize",
        "passport",
        "utils",
        "validate",
        "server",
        "createServer",
        "expiresIn",
        "expires_in",
        "token",
        "grant",
        "code",
        "client",
        "redirectURI",
        "user",
        "ares",
        "done",
        "createToken",
        "sub",
        "id",
        "exp",
        "codeToken",
        "authorizationCodes",
        "save",
        "scope",
        "then",
        "catch",
        "err",
        "expiration",
        "calculateExpirationDate",
        "accessTokens",
        "exchange",
        "delete",
        "authCode",
        "generateTokens",
        "tokens",
        "length",
        "Error",
        "password",
        "username",
        "console",
        "log",
        "findOne",
        "logAndThrow",
        "userID",
        "clientID",
        "clientId",
        "clientCredentials",
        "refreshToken",
        "refreshTokens",
        "find",
        "foundRefreshToken",
        "generateToken",
        "exports",
        "authorization",
        "ensureLoggedIn",
        "clients",
        "findByClientId",
        "req",
        "res",
        "next",
        "query",
        "client_id",
        "trustedClient",
        "decision",
        "loadTransaction",
        "serverReq",
        "callback",
        "allow",
        "render",
        "transactionID",
        "oauth2",
        "authenticate",
        "session",
        "errorHandler",
        "serializeClient",
        "deserializeClient"
      ],
      "mappings": "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",
      "file": "oauth2.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\n// Register supported grant types.\n//\n// OAuth 2.0 specifies a framework that allows users to grant client\n// applications limited access to their protected resources.  It does this\n// through a process of the user granting access, and the client exchanging\n// the grant for an access token.\n\nconst config      = require('./config');\nconst db          = require('./db');\nconst User = require('./db/users')\nconst Client = require('./db/clients')\nconst login       = require('connect-ensure-login');\nconst oauth2orize = require('oauth2orize');\nconst passport    = require('passport');\nconst utils       = require('./utils');\nconst validate    = require('./validate');\n\n// create OAuth 2.0 server\nconst server = oauth2orize.createServer();\n\n// Configured expiresIn\nconst expiresIn = { expires_in : config.token.expiresIn };\n\n/**\n * Grant authorization codes\n *\n * The callback takes the `client` requesting authorization, the `redirectURI`\n * (which is used as a verifier in the subseq++uent exchange), the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a code,\n * which is bound to these values, and will be exchanged for an access token.\n */\nserver.grant(oauth2orize.grant.code((client, redirectURI, user, ares, done) => {\n  const code = utils.createToken({ sub : user.id, exp : config.codeToken.expiresIn });\n  db.authorizationCodes.save(code, client.id, redirectURI, user.id, client.scope)\n  .then(() => done(null, code))\n  .catch(err => done(err));\n}));\n\n/**\n * Grant implicit authorization.\n *\n * The callback takes the `client` requesting authorization, the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a token,\n * which is bound to these values.\n */\nserver.grant(oauth2orize.grant.token((client, user, ares, done) => {\n  const token      = utils.createToken({ sub : user.id, exp : config.token.expiresIn });\n  const expiration = config.token.calculateExpirationDate();\n\n  db.accessTokens.save(token, expiration, user.id, client.id, client.scope)\n  .then(() => done(null, token, expiresIn))\n  .catch(err => done(err));\n}));\n\n/**\n * Exchange authorization codes for access tokens.\n *\n * The callback accepts the `client`, which is exchanging `code` and any\n * `redirectURI` from the authorization request for verification.  If these values\n * are validated, the application issues an access token on behalf of the user who\n * authorized the code.\n */\nserver.exchange(oauth2orize.exchange.code((client, code, redirectURI, done) => {\n  db.authorizationCodes.delete(code)\n  .then(authCode => validate.authCode(code, authCode, client, redirectURI))\n  .then(authCode => validate.generateTokens(authCode))\n  .then((tokens) => {\n    if (tokens.length === 1) {\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging auth code for tokens');\n  })\n  .catch(() => done(null, false));\n}));\n\n/**\n * Exchange user id and password for access tokens.\n *\n * The callback accepts the `client`, which is exchanging the user's name and password\n * from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the user who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.password((client, username, password, scope, done) => {\n  console.log(client);\n  console.log(username);\n  console.log(password);\n  console.log('----------');\n  User.findOne({ username: username })\n  .then(user => user ? user.validate(password) : logAndThrow(`User ${username} not found`))\n  .then(user => validate.generateTokens({ scope, userID: user.id, clientID: client.clientId }))\n  .then((tokens) => {\n    console.log(`**********${tokens}******`)\n    if (tokens === false) {\n      console.log('1')\n      return done(null, false);\n    }\n    if (tokens.length === 1) {\n      console.log('2')\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      console.log('3')\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging password for tokens');\n  })\n  .catch(() => done(null, false));\n}));\n\n/**\n * Exchange the client id and password/secret for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id and\n * password/secret from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the client who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.clientCredentials((client, scope, done) => {\n  const token      = utils.createToken({ sub : client.id, exp : config.token.expiresIn });\n  const expiration = config.token.calculateExpirationDate();\n  // Pass in a null for user id since there is no user when using this grant type\n  db.accessTokens.save(token, expiration, null, client.id, scope)\n  .then(() => done(null, token, null, expiresIn))\n  .catch(err => done(err));\n}));\n\n/**\n * Exchange the refresh token for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id from the token\n * request for verification.  If this value is validated, the application issues an access\n * token on behalf of the client who authorized the code\n */\nserver.exchange(oauth2orize.exchange.refreshToken((client, refreshToken, scope, done) => {\n  db.refreshTokens.find(refreshToken)\n  .then(foundRefreshToken => validate.refreshToken(foundRefreshToken, refreshToken, client))\n  .then(foundRefreshToken => validate.generateToken(foundRefreshToken))\n  .then(token => done(null, token, null, expiresIn))\n  .catch(() => done(null, false));\n}));\n\n/*\n * User authorization endpoint\n *\n * `authorization` middleware accepts a `validate` callback which is\n * responsible for validating the client making the authorization request.  In\n * doing so, is recommended that the `redirectURI` be checked against a\n * registered value, although security requirements may vary accross\n * implementations.  Once validated, the `done` callback must be invoked with\n * a `client` instance, as well as the `redirectURI` to which the user will be\n * redirected after an authorization decision is obtained.\n *\n * This middleware simply initializes a new authorization transaction.  It is\n * the application's responsibility to authenticate the user and render a dialog\n * to obtain their approval (displaying details about the client requesting\n * authorization).  We accomplish that here by routing through `ensureLoggedIn()`\n * first, and rendering the `dialog` view.\n */\nexports.authorization = [\n  login.ensureLoggedIn(),\n  server.authorization((clientID, redirectURI, scope, done) => {\n    db.clients.findByClientId(clientID)\n    .then((client) => {\n      if (client) {\n        client.scope = scope; // eslint-disable-line no-param-reassign\n      }\n      // WARNING: For security purposes, it is highly advisable to check that\n      //          redirectURI provided by the client matches one registered with\n      //          the server.  For simplicity, this example does not.  You have\n      //          been warned.\n      return done(null, client, redirectURI);\n    })\n    .catch(err => done(err));\n  }), (req, res, next) => {\n    // Render the decision dialog if the client isn't a trusted client\n    // TODO:  Make a mechanism so that if this isn't a trusted client, the user can record that\n    // they have consented but also make a mechanism so that if the user revokes access to any of\n    // the clients then they will have to re-consent.\n    db.clients.findByClientId(req.query.client_id)\n    .then((client) => {\n      if (client != null && client.trustedClient && client.trustedClient === true) {\n        // This is how we short call the decision like the dialog below does\n        server.decision({ loadTransaction: false }, (serverReq, callback) => {\n          callback(null, { allow: true });\n        })(req, res, next);\n      } else {\n        res.render('dialog', { transactionID: req.oauth2.transactionID, user: req.user, client: req.oauth2.client });\n      }\n    })\n    .catch(() =>\n      res.render('dialog', { transactionID: req.oauth2.transactionID, user: req.user, client: req.oauth2.client }));\n  }];\n\n/**\n * User decision endpoint\n *\n * `decision` middleware processes a user's decision to allow or deny access\n * requested by a client application.  Based on the grant type requested by the\n * client, the above grant middleware configured above will be invoked to send\n * a response.\n */\nexports.decision = [\n  login.ensureLoggedIn(),\n  server.decision(),\n];\n\n/**\n * Token endpoint\n *\n * `token` middleware handles client requests to exchange authorization grants\n * for access tokens.  Based on the grant type being exchanged, the above\n * exchange middleware will be invoked to handle the request.  Clients must\n * authenticate when making requests to this endpoint.\n */\nexports.token = [\n  passport.authenticate(['basic', 'oauth2-client-password'], { session: false }),\n  server.token(),\n  server.errorHandler(),\n];\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\nserver.serializeClient((client, done) => done(null, client.id));\n\nserver.deserializeClient((id, done) => {\n  db.clients.find(id)\n  .then(client => done(null, client))\n  .catch(err => done(err));\n});\n\n"
      ]
    },
    "mtime": 1517907607000
  },
  "{\"filename\":\"/app/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/utils.js",
      "filenameRelative": "/app/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar uuid = require('uuid/v4');\nvar jwt = require('jsonwebtoken');\n\nvar PrettyError = require('pretty-error');\nvar pe = new PrettyError();\n\n/** Suppress tracing for things like unit testing */\nvar DEBUG = process.env.DEBUG === true;\n\n/** Private certificate used for signing JSON WebTokens */\nvar privateKey = fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem'));\n\n/** Public certificate used for verification.  Note: you could also use the private key */\nvar publicKey = fs.readFileSync(path.join(__dirname, 'certs/certificate.pem'));\n\n/**\n * Creates a signed JSON WebToken and returns it.  Utilizes the private certificate to create\n * the signed JWT.  For more options and other things you can change this to, please see:\n * https://github.com/auth0/node-jsonwebtoken\n *\n * @param  {Number} exp - The number of seconds for this token to expire.  By default it will be 60\n *                        minutes (3600 seconds) if nothing is passed in.\n * @param  {String} sub - The subject or identity of the token.\n * @return {String} The JWT Token\n */\nexports.createToken = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$exp = _ref.exp,\n      exp = _ref$exp === undefined ? 3600 : _ref$exp,\n      _ref$sub = _ref.sub,\n      sub = _ref$sub === undefined ? '' : _ref$sub;\n\n  var token = jwt.sign({\n    jti: uuid(),\n    sub: sub,\n    exp: Math.floor(Date.now() / 1000) + exp\n  }, privateKey, {\n    algorithm: 'RS256'\n  });\n  return token;\n};\n\n/**\n * Verifies the token through the jwt library using the public certificate.\n * @param   {String} token - The token to verify\n * @throws  {Error} Error if the token could not be verified\n * @returns {Object} The token decoded and verified\n */\nexports.verifyToken = function (token) {\n  return jwt.verify(token, publicKey);\n};\n\nexports.logAndThrow = function (msg) {\n  // if (DEBUG) console.trace(msg)\n  throw new Error(msg);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJ1dWlkIiwiand0IiwiUHJldHR5RXJyb3IiLCJwZSIsIkRFQlVHIiwicHJvY2VzcyIsImVudiIsInByaXZhdGVLZXkiLCJyZWFkRmlsZVN5bmMiLCJqb2luIiwiX19kaXJuYW1lIiwicHVibGljS2V5IiwiZXhwb3J0cyIsImNyZWF0ZVRva2VuIiwiZXhwIiwic3ViIiwidG9rZW4iLCJzaWduIiwianRpIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImFsZ29yaXRobSIsInZlcmlmeVRva2VuIiwidmVyaWZ5IiwibG9nQW5kVGhyb3ciLCJtc2ciLCJFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsS0FBT0MsUUFBUSxJQUFSLENBQWI7QUFDQSxJQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjtBQUNBLElBQU1FLE9BQU9GLFFBQVEsU0FBUixDQUFiO0FBQ0EsSUFBTUcsTUFBT0gsUUFBUSxjQUFSLENBQWI7O0FBRUEsSUFBSUksY0FBY0osUUFBUSxjQUFSLENBQWxCO0FBQ0EsSUFBSUssS0FBSyxJQUFJRCxXQUFKLEVBQVQ7O0FBRUE7QUFDQSxJQUFNRSxRQUFRQyxRQUFRQyxHQUFSLENBQVlGLEtBQVosS0FBc0IsSUFBcEM7O0FBRUE7QUFDQSxJQUFNRyxhQUFhVixHQUFHVyxZQUFILENBQWdCVCxLQUFLVSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsc0JBQXJCLENBQWhCLENBQW5COztBQUVBO0FBQ0EsSUFBTUMsWUFBWWQsR0FBR1csWUFBSCxDQUFnQlQsS0FBS1UsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLHVCQUFyQixDQUFoQixDQUFsQjs7QUFFQTs7Ozs7Ozs7OztBQVVBRSxRQUFRQyxXQUFSLEdBQXNCLFlBQW1DO0FBQUEsaUZBQVAsRUFBTztBQUFBLHNCQUFoQ0MsR0FBZ0M7QUFBQSxNQUFoQ0EsR0FBZ0MsNEJBQTFCLElBQTBCO0FBQUEsc0JBQXBCQyxHQUFvQjtBQUFBLE1BQXBCQSxHQUFvQiw0QkFBZCxFQUFjOztBQUN2RCxNQUFNQyxRQUFRZixJQUFJZ0IsSUFBSixDQUFTO0FBQ3JCQyxTQUFNbEIsTUFEZTtBQUVyQmUsWUFGcUI7QUFHckJELFNBQU1LLEtBQUtDLEtBQUwsQ0FBV0MsS0FBS0MsR0FBTCxLQUFhLElBQXhCLElBQWdDUjtBQUhqQixHQUFULEVBSVhQLFVBSlcsRUFJQztBQUNiZ0IsZUFBVztBQURFLEdBSkQsQ0FBZDtBQU9BLFNBQU9QLEtBQVA7QUFDRCxDQVREOztBQVdBOzs7Ozs7QUFNQUosUUFBUVksV0FBUixHQUFzQjtBQUFBLFNBQVN2QixJQUFJd0IsTUFBSixDQUFXVCxLQUFYLEVBQWtCTCxTQUFsQixDQUFUO0FBQUEsQ0FBdEI7O0FBRUFDLFFBQVFjLFdBQVIsR0FBc0IsVUFBQ0MsR0FBRCxFQUFTO0FBQzdCO0FBQ0EsUUFBTSxJQUFJQyxLQUFKLENBQVVELEdBQVYsQ0FBTjtBQUNELENBSEQiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZnMgICA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgdXVpZCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcbmNvbnN0IGp3dCAgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcblxudmFyIFByZXR0eUVycm9yID0gcmVxdWlyZSgncHJldHR5LWVycm9yJyk7XG52YXIgcGUgPSBuZXcgUHJldHR5RXJyb3IoKTtcblxuLyoqIFN1cHByZXNzIHRyYWNpbmcgZm9yIHRoaW5ncyBsaWtlIHVuaXQgdGVzdGluZyAqL1xuY29uc3QgREVCVUcgPSBwcm9jZXNzLmVudi5ERUJVRyA9PT0gdHJ1ZVxuXG4vKiogUHJpdmF0ZSBjZXJ0aWZpY2F0ZSB1c2VkIGZvciBzaWduaW5nIEpTT04gV2ViVG9rZW5zICovXG5jb25zdCBwcml2YXRlS2V5ID0gZnMucmVhZEZpbGVTeW5jKHBhdGguam9pbihfX2Rpcm5hbWUsICdjZXJ0cy9wcml2YXRla2V5LnBlbScpKTtcblxuLyoqIFB1YmxpYyBjZXJ0aWZpY2F0ZSB1c2VkIGZvciB2ZXJpZmljYXRpb24uICBOb3RlOiB5b3UgY291bGQgYWxzbyB1c2UgdGhlIHByaXZhdGUga2V5ICovXG5jb25zdCBwdWJsaWNLZXkgPSBmcy5yZWFkRmlsZVN5bmMocGF0aC5qb2luKF9fZGlybmFtZSwgJ2NlcnRzL2NlcnRpZmljYXRlLnBlbScpKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc2lnbmVkIEpTT04gV2ViVG9rZW4gYW5kIHJldHVybnMgaXQuICBVdGlsaXplcyB0aGUgcHJpdmF0ZSBjZXJ0aWZpY2F0ZSB0byBjcmVhdGVcbiAqIHRoZSBzaWduZWQgSldULiAgRm9yIG1vcmUgb3B0aW9ucyBhbmQgb3RoZXIgdGhpbmdzIHlvdSBjYW4gY2hhbmdlIHRoaXMgdG8sIHBsZWFzZSBzZWU6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vYXV0aDAvbm9kZS1qc29ud2VidG9rZW5cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGV4cCAtIFRoZSBudW1iZXIgb2Ygc2Vjb25kcyBmb3IgdGhpcyB0b2tlbiB0byBleHBpcmUuICBCeSBkZWZhdWx0IGl0IHdpbGwgYmUgNjBcbiAqICAgICAgICAgICAgICAgICAgICAgICAgbWludXRlcyAoMzYwMCBzZWNvbmRzKSBpZiBub3RoaW5nIGlzIHBhc3NlZCBpbi5cbiAqIEBwYXJhbSAge1N0cmluZ30gc3ViIC0gVGhlIHN1YmplY3Qgb3IgaWRlbnRpdHkgb2YgdGhlIHRva2VuLlxuICogQHJldHVybiB7U3RyaW5nfSBUaGUgSldUIFRva2VuXG4gKi9cbmV4cG9ydHMuY3JlYXRlVG9rZW4gPSAoeyBleHAgPSAzNjAwLCBzdWIgPSAnJyB9ID0ge30pID0+IHtcbiAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbih7XG4gICAganRpIDogdXVpZCgpLFxuICAgIHN1YixcbiAgICBleHAgOiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSArIGV4cCxcbiAgfSwgcHJpdmF0ZUtleSwge1xuICAgIGFsZ29yaXRobTogJ1JTMjU2JyxcbiAgfSk7XG4gIHJldHVybiB0b2tlbjtcbn07XG5cbi8qKlxuICogVmVyaWZpZXMgdGhlIHRva2VuIHRocm91Z2ggdGhlIGp3dCBsaWJyYXJ5IHVzaW5nIHRoZSBwdWJsaWMgY2VydGlmaWNhdGUuXG4gKiBAcGFyYW0gICB7U3RyaW5nfSB0b2tlbiAtIFRoZSB0b2tlbiB0byB2ZXJpZnlcbiAqIEB0aHJvd3MgIHtFcnJvcn0gRXJyb3IgaWYgdGhlIHRva2VuIGNvdWxkIG5vdCBiZSB2ZXJpZmllZFxuICogQHJldHVybnMge09iamVjdH0gVGhlIHRva2VuIGRlY29kZWQgYW5kIHZlcmlmaWVkXG4gKi9cbmV4cG9ydHMudmVyaWZ5VG9rZW4gPSB0b2tlbiA9PiBqd3QudmVyaWZ5KHRva2VuLCBwdWJsaWNLZXkpO1xuXG5leHBvcnRzLmxvZ0FuZFRocm93ID0gKG1zZykgPT4ge1xuICAvLyBpZiAoREVCVUcpIGNvbnNvbGUudHJhY2UobXNnKVxuICB0aHJvdyBuZXcgRXJyb3IobXNnKVxufVxuXG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "uuid",
        "jwt",
        "PrettyError",
        "pe",
        "DEBUG",
        "process",
        "env",
        "privateKey",
        "readFileSync",
        "join",
        "__dirname",
        "publicKey",
        "exports",
        "createToken",
        "exp",
        "sub",
        "token",
        "sign",
        "jti",
        "Math",
        "floor",
        "Date",
        "now",
        "algorithm",
        "verifyToken",
        "verify",
        "logAndThrow",
        "msg",
        "Error"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAOC,QAAQ,IAAR,CAAb;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,OAAOF,QAAQ,SAAR,CAAb;AACA,IAAMG,MAAOH,QAAQ,cAAR,CAAb;;AAEA,IAAII,cAAcJ,QAAQ,cAAR,CAAlB;AACA,IAAIK,KAAK,IAAID,WAAJ,EAAT;;AAEA;AACA,IAAME,QAAQC,QAAQC,GAAR,CAAYF,KAAZ,KAAsB,IAApC;;AAEA;AACA,IAAMG,aAAaV,GAAGW,YAAH,CAAgBT,KAAKU,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAhB,CAAnB;;AAEA;AACA,IAAMC,YAAYd,GAAGW,YAAH,CAAgBT,KAAKU,IAAL,CAAUC,SAAV,EAAqB,uBAArB,CAAhB,CAAlB;;AAEA;;;;;;;;;;AAUAE,QAAQC,WAAR,GAAsB,YAAmC;AAAA,iFAAP,EAAO;AAAA,sBAAhCC,GAAgC;AAAA,MAAhCA,GAAgC,4BAA1B,IAA0B;AAAA,sBAApBC,GAAoB;AAAA,MAApBA,GAAoB,4BAAd,EAAc;;AACvD,MAAMC,QAAQf,IAAIgB,IAAJ,CAAS;AACrBC,SAAMlB,MADe;AAErBe,YAFqB;AAGrBD,SAAMK,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAxB,IAAgCR;AAHjB,GAAT,EAIXP,UAJW,EAIC;AACbgB,eAAW;AADE,GAJD,CAAd;AAOA,SAAOP,KAAP;AACD,CATD;;AAWA;;;;;;AAMAJ,QAAQY,WAAR,GAAsB;AAAA,SAASvB,IAAIwB,MAAJ,CAAWT,KAAX,EAAkBL,SAAlB,CAAT;AAAA,CAAtB;;AAEAC,QAAQc,WAAR,GAAsB,UAACC,GAAD,EAAS;AAC7B;AACA,QAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD,CAHD",
      "file": "utils.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst fs   = require('fs');\nconst path = require('path');\nconst uuid = require('uuid/v4');\nconst jwt  = require('jsonwebtoken');\n\nvar PrettyError = require('pretty-error');\nvar pe = new PrettyError();\n\n/** Suppress tracing for things like unit testing */\nconst DEBUG = process.env.DEBUG === true\n\n/** Private certificate used for signing JSON WebTokens */\nconst privateKey = fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem'));\n\n/** Public certificate used for verification.  Note: you could also use the private key */\nconst publicKey = fs.readFileSync(path.join(__dirname, 'certs/certificate.pem'));\n\n/**\n * Creates a signed JSON WebToken and returns it.  Utilizes the private certificate to create\n * the signed JWT.  For more options and other things you can change this to, please see:\n * https://github.com/auth0/node-jsonwebtoken\n *\n * @param  {Number} exp - The number of seconds for this token to expire.  By default it will be 60\n *                        minutes (3600 seconds) if nothing is passed in.\n * @param  {String} sub - The subject or identity of the token.\n * @return {String} The JWT Token\n */\nexports.createToken = ({ exp = 3600, sub = '' } = {}) => {\n  const token = jwt.sign({\n    jti : uuid(),\n    sub,\n    exp : Math.floor(Date.now() / 1000) + exp,\n  }, privateKey, {\n    algorithm: 'RS256',\n  });\n  return token;\n};\n\n/**\n * Verifies the token through the jwt library using the public certificate.\n * @param   {String} token - The token to verify\n * @throws  {Error} Error if the token could not be verified\n * @returns {Object} The token decoded and verified\n */\nexports.verifyToken = token => jwt.verify(token, publicKey);\n\nexports.logAndThrow = (msg) => {\n  // if (DEBUG) console.trace(msg)\n  throw new Error(msg)\n}\n\n\n"
      ]
    },
    "mtime": 1517848209000
  },
  "{\"filename\":\"/app/validate.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/validate.js",
      "filenameRelative": "/app/validate.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "validate.js",
      "sourceFileName": "validate.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "validate"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar config = require('./config');\nvar db = require('./db');\nvar utils = require('./utils');\nvar process = require('process');\nvar User = require('./db/users');\n/** Validate object to attach all functions to  */\nvar validate = Object.create(null);\n\n/**\n * Given a client and a client secret this return the client if it exists and its clientSecret\n * matches, otherwise this will throw an error\n * @param   {Object} client       - The client profile\n * @param   {String} clientSecret - The client's secret\n * @throws  {Error}  If the client or the client secret does not match\n * @returns {Object} The client if valid\n */\nvalidate.client = function (client, clientSecret) {\n  validate.clientExists(client);\n  if (client.clientSecret !== clientSecret) {\n    validate.logAndThrow('Client secret does not match');\n  }\n  return client;\n};\n\n/**\n * Given a client this will return the client if it exists , otherwise this will throw an error\n * @param   {Object} client - The client profile\n * @throws  {Error}  If the client does not exist\n * @returns {Object} The client if valid\n */\nvalidate.clientExists = function (client) {\n  if (client == null) {\n    validate.logAndThrow('Client does not exist');\n  }\n  return client;\n};\n\n/**\n * Given a token and accessToken this will return either the user or the client associated with\n * the token if valid.  Otherwise this will throw.\n * @param   {Object}  token       - The token\n * @param   {Object}  accessToken - The access token\n * @throws  {Error}   If the token is not valid\n * @returns {Promise} Resolved with the user or client associated with the token if valid\n */\nvalidate.token = function (token, accessToken) {\n  utils.verifyToken(accessToken);\n\n  // token is a user token\n  if (token.userID != null) {\n    return User.findOne({ id: token.userID }).then(function (user) {\n      return user ? user : logAndThrow('User ' + username + ' not found');\n    });\n  }\n  // token is a client token\n  return db.clients.find(token.clientID).then(function (client) {\n    return validate.clientExists(client);\n  }).then(function (client) {\n    return client;\n  });\n};\n\n/**\n * Given a refresh token and client this will return the refresh token if it exists and the client\n * id's match otherwise this will throw an error\n * throw an error\n * @param   {Object} token        - The token record from the DB\n * @param   {Object} refreshToken - The raw refresh token\n * @param   {Object} client       - The client profile\n * @throws  {Error}  If the refresh token does not exist or the client id's don't match\n * @returns {Object} The refresh token if valid\n */\nvalidate.refreshToken = function (token, refreshToken, client) {\n  utils.verifyToken(refreshToken);\n  if (client.id !== token.clientID) {\n    validate.logAndThrow('RefreshToken clientID does not match client id given');\n  }\n  return refreshToken;\n};\n\n/**\n * Given a auth code, client, and redirectURI this will return the auth code if it exists and is\n * not 0, the client id matches it, and the redirectURI matches it, otherwise this will throw an\n * error.\n * @param  {Object}  code        - The auth code record from the DB\n * @param  {Object}  authCode    - The raw auth code\n * @param  {Object}  client      - The client profile\n * @param  {Object}  redirectURI - The redirectURI to check against\n * @throws {Error}   If the auth code does not exist or is zero or does not match the client or\n *                   the redirectURI\n * @returns {Object} The auth code token if valid\n */\nvalidate.authCode = function (code, authCode, client, redirectURI) {\n  utils.verifyToken(code);\n  if (client.id !== authCode.clientID) {\n    validate.logAndThrow('AuthCode clientID does not match client id given');\n  }\n  if (redirectURI !== authCode.redirectURI) {\n    validate.logAndThrow('AuthCode redirectURI does not match redirectURI given');\n  }\n  return authCode;\n};\n\n/**\n * I mimic openid connect's offline scope to determine if we send a refresh token or not\n * @param   {Array}   scope - The scope to check if is a refresh token if it has 'offline_access'\n * @returns {Boolean} true If the scope is offline_access, otherwise false\n */\nvalidate.isRefreshToken = function (_ref) {\n  var scope = _ref.scope;\n  return scope != null && scope.indexOf('offline_access') === 0;\n};\n\n/**\n * Given a userId, clientID, and scope this will generate a refresh token, save it, and return it\n * @param   {Object}  userId   - The user profile\n * @throws  {Object}  clientID - the client profile\n * @throws  {Object}  scope    - the scope\n * @returns {Promise} The resolved refresh token after saved\n */\nvalidate.generateRefreshToken = function (_ref2) {\n  var userId = _ref2.userId,\n      clientID = _ref2.clientID,\n      scope = _ref2.scope;\n\n  var refreshToken = utils.createToken({ sub: userId, exp: config.refreshToken.expiresIn });\n  return db.refreshTokens.save(refreshToken, userId, clientID, scope).then(function () {\n    return refreshToken;\n  });\n};\n\n/**\n * Given an auth code this will generate a access token, save that token and then return it.\n * @param   {userID}   userID   - The user profile\n * @param   {clientID} clientID - The client profile\n * @param   {scope}    scope    - The scope\n * @returns {Promise}  The resolved refresh token after saved\n */\nvalidate.generateToken = function (_ref3) {\n  var userID = _ref3.userID,\n      clientID = _ref3.clientID,\n      scope = _ref3.scope;\n\n  console.log('generating token....');\n  console.log(userID);\n  console.log(clientID);\n  console.log(scope);\n\n  var token = utils.createToken({ sub: userID, exp: config.token.expiresIn });\n  console.log('token: ' + token);\n  console.log('------------------------');\n  var expiration = config.token.calculateExpirationDate();\n  console.log(expiration);\n  console.log('------------------------');\n  return db.accessTokens.save(token, expiration, userID, clientID, scope).then(function () {\n    return token;\n  });\n};\n\n/**\n * Given an auth code this will generate a access and refresh token, save both of those and return\n * them if the auth code indicates to return both.  Otherwise only an access token will be returned.\n * @param   {Object}  authCode - The auth code\n * @throws  {Error}   If the auth code does not exist or is zero\n * @returns {Promise} The resolved refresh and access tokens as an array\n */\nvalidate.generateTokens = function (authCode) {\n  console.log('generating tokens....');\n  if (validate.isRefreshToken(authCode)) {\n    return Promise.all([validate.generateToken(authCode), validate.generateRefreshToken(authCode)]);\n  }\n  return Promise.all([validate.generateToken(authCode)]);\n};\n\n/**\n * Given a token this will resolve a promise with the token if it is not null and the expiration\n * date has not been exceeded.  Otherwise this will throw a HTTP error.\n * @param   {Object}  token - The token to check\n * @returns {Promise} Resolved with the token if it is a valid token otherwise rejected with error\n */\nvalidate.tokenForHttp = function (token) {\n  return new Promise(function (resolve, reject) {\n    try {\n      utils.verifyToken(token);\n    } catch (err) {\n      var error = new Error('invalid_token');\n      error.status = 400;\n      reject(error);\n    }\n    resolve(token);\n  });\n};\n\n/**\n * Given a token this will return the token if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} token - The token to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.tokenExistsForHttp = function (token) {\n  if (token == null) {\n    var error = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return token;\n};\n\n/**\n * Given a client this will return the client if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} client - The client to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.clientExistsForHttp = function (client) {\n  if (client == null) {\n    var error = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return client;\n};\n\nmodule.exports = validate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "validate.js"
      ],
      "names": [
        "config",
        "require",
        "db",
        "utils",
        "process",
        "User",
        "validate",
        "Object",
        "create",
        "client",
        "clientSecret",
        "clientExists",
        "logAndThrow",
        "token",
        "accessToken",
        "verifyToken",
        "userID",
        "findOne",
        "id",
        "then",
        "user",
        "username",
        "clients",
        "find",
        "clientID",
        "refreshToken",
        "authCode",
        "code",
        "redirectURI",
        "isRefreshToken",
        "scope",
        "indexOf",
        "generateRefreshToken",
        "userId",
        "createToken",
        "sub",
        "exp",
        "expiresIn",
        "refreshTokens",
        "save",
        "generateToken",
        "console",
        "log",
        "expiration",
        "calculateExpirationDate",
        "accessTokens",
        "generateTokens",
        "Promise",
        "all",
        "tokenForHttp",
        "resolve",
        "reject",
        "err",
        "error",
        "Error",
        "status",
        "tokenExistsForHttp",
        "clientExistsForHttp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "validate.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst config  = require('./config');\nconst db      = require('./db');\nconst utils   = require('./utils');\nconst process = require('process');\nconst User = require('./db/users')\n/** Validate object to attach all functions to  */\nconst validate = Object.create(null);\n\n\n/**\n * Given a client and a client secret this return the client if it exists and its clientSecret\n * matches, otherwise this will throw an error\n * @param   {Object} client       - The client profile\n * @param   {String} clientSecret - The client's secret\n * @throws  {Error}  If the client or the client secret does not match\n * @returns {Object} The client if valid\n */\nvalidate.client = (client, clientSecret) => {\n  validate.clientExists(client);\n  if (client.clientSecret !== clientSecret) {\n    validate.logAndThrow('Client secret does not match');\n  }\n  return client;\n};\n\n/**\n * Given a client this will return the client if it exists , otherwise this will throw an error\n * @param   {Object} client - The client profile\n * @throws  {Error}  If the client does not exist\n * @returns {Object} The client if valid\n */\nvalidate.clientExists = (client) => {\n  if (client == null) {\n    validate.logAndThrow('Client does not exist');\n  }\n  return client;\n};\n\n/**\n * Given a token and accessToken this will return either the user or the client associated with\n * the token if valid.  Otherwise this will throw.\n * @param   {Object}  token       - The token\n * @param   {Object}  accessToken - The access token\n * @throws  {Error}   If the token is not valid\n * @returns {Promise} Resolved with the user or client associated with the token if valid\n */\nvalidate.token = (token, accessToken) => {\n  utils.verifyToken(accessToken);\n\n  // token is a user token\n  if (token.userID != null) {\n    return User.findOne({id: token.userID})\n      .then(user => user ? user : logAndThrow(`User ${username} not found`))\n  }\n  // token is a client token\n  return db.clients.find(token.clientID)\n  .then(client => validate.clientExists(client))\n  .then(client => client);\n};\n\n/**\n * Given a refresh token and client this will return the refresh token if it exists and the client\n * id's match otherwise this will throw an error\n * throw an error\n * @param   {Object} token        - The token record from the DB\n * @param   {Object} refreshToken - The raw refresh token\n * @param   {Object} client       - The client profile\n * @throws  {Error}  If the refresh token does not exist or the client id's don't match\n * @returns {Object} The refresh token if valid\n */\nvalidate.refreshToken = (token, refreshToken, client) => {\n  utils.verifyToken(refreshToken);\n  if (client.id !== token.clientID) {\n    validate.logAndThrow('RefreshToken clientID does not match client id given');\n  }\n  return refreshToken;\n};\n\n/**\n * Given a auth code, client, and redirectURI this will return the auth code if it exists and is\n * not 0, the client id matches it, and the redirectURI matches it, otherwise this will throw an\n * error.\n * @param  {Object}  code        - The auth code record from the DB\n * @param  {Object}  authCode    - The raw auth code\n * @param  {Object}  client      - The client profile\n * @param  {Object}  redirectURI - The redirectURI to check against\n * @throws {Error}   If the auth code does not exist or is zero or does not match the client or\n *                   the redirectURI\n * @returns {Object} The auth code token if valid\n */\nvalidate.authCode = (code, authCode, client, redirectURI) => {\n  utils.verifyToken(code);\n  if (client.id !== authCode.clientID) {\n    validate.logAndThrow('AuthCode clientID does not match client id given');\n  }\n  if (redirectURI !== authCode.redirectURI) {\n    validate.logAndThrow('AuthCode redirectURI does not match redirectURI given');\n  }\n  return authCode;\n};\n\n/**\n * I mimic openid connect's offline scope to determine if we send a refresh token or not\n * @param   {Array}   scope - The scope to check if is a refresh token if it has 'offline_access'\n * @returns {Boolean} true If the scope is offline_access, otherwise false\n */\nvalidate.isRefreshToken = ({ scope }) => scope != null && scope.indexOf('offline_access') === 0;\n\n/**\n * Given a userId, clientID, and scope this will generate a refresh token, save it, and return it\n * @param   {Object}  userId   - The user profile\n * @throws  {Object}  clientID - the client profile\n * @throws  {Object}  scope    - the scope\n * @returns {Promise} The resolved refresh token after saved\n */\nvalidate.generateRefreshToken = ({ userId, clientID, scope }) => {\n  const refreshToken = utils.createToken({ sub : userId, exp : config.refreshToken.expiresIn });\n  return db.refreshTokens.save(refreshToken, userId, clientID, scope)\n  .then(() => refreshToken);\n};\n\n/**\n * Given an auth code this will generate a access token, save that token and then return it.\n * @param   {userID}   userID   - The user profile\n * @param   {clientID} clientID - The client profile\n * @param   {scope}    scope    - The scope\n * @returns {Promise}  The resolved refresh token after saved\n */\nvalidate.generateToken = ({ userID, clientID, scope }) => {\n  console.log('generating token....')\n  console.log(userID)\n  console.log(clientID)\n  console.log(scope)\n\n  const token      = utils.createToken({ sub : userID, exp : config.token.expiresIn });\n  console.log(`token: ${token}`)\n  console.log('------------------------')\n  const expiration = config.token.calculateExpirationDate();\n  console.log (expiration)\n  console.log('------------------------')\n  return db.accessTokens.save(token, expiration, userID, clientID, scope)\n  .then(() => token);\n};\n\n/**\n * Given an auth code this will generate a access and refresh token, save both of those and return\n * them if the auth code indicates to return both.  Otherwise only an access token will be returned.\n * @param   {Object}  authCode - The auth code\n * @throws  {Error}   If the auth code does not exist or is zero\n * @returns {Promise} The resolved refresh and access tokens as an array\n */\nvalidate.generateTokens = (authCode) => {\n  console.log('generating tokens....')\n  if (validate.isRefreshToken(authCode)) {\n    return Promise.all([\n      validate.generateToken(authCode),\n      validate.generateRefreshToken(authCode),\n    ]);\n  }\n  return Promise.all([validate.generateToken(authCode)]);\n};\n\n/**\n * Given a token this will resolve a promise with the token if it is not null and the expiration\n * date has not been exceeded.  Otherwise this will throw a HTTP error.\n * @param   {Object}  token - The token to check\n * @returns {Promise} Resolved with the token if it is a valid token otherwise rejected with error\n */\nvalidate.tokenForHttp = token =>\n  new Promise((resolve, reject) => {\n    try {\n      utils.verifyToken(token);\n    } catch (err) {\n      const error  = new Error('invalid_token');\n      error.status = 400;\n      reject(error);\n    }\n    resolve(token);\n  });\n\n/**\n * Given a token this will return the token if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} token - The token to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.tokenExistsForHttp = (token) => {\n  if (token == null) {\n    const error = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return token;\n};\n\n\n/**\n * Given a client this will return the client if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} client - The client to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.clientExistsForHttp = (client) => {\n  if (client == null) {\n    const error  = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return client;\n};\n\nmodule.exports = validate;\n"
      ]
    },
    "mtime": 1517909544000
  },
  "{\"filename\":\"/app/site.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/site.js",
      "filenameRelative": "/app/site.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "site.js",
      "sourceFileName": "site.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "site"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar login = require('connect-ensure-login');\nvar passport = require('passport');\n\n/**\n * Render the index.ejs or index-with-code.js depending on if query param has code or not\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.index = function (req, res) {\n  if (!req.query.code) {\n    res.render('index');\n  } else {\n    res.render('index-with-code');\n  }\n};\n\n/**\n * Render the login.ejs\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.loginForm = function (req, res) {\n  res.render('login');\n};\n\n/**\n * Authenticate normal login page using strategy of authenticate\n */\nexports.login = [passport.authenticate('local', { successReturnToOrRedirect: '/', failureRedirect: '/login' })];\n\n/**\n * Logout of the system and redirect to root\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.logout = function (req, res) {\n  req.logout();\n  res.redirect('/');\n};\n\n/**\n * Render account.ejs but ensure the user is logged in before rendering\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.account = [login.ensureLoggedIn(), function (req, res) {\n  res.render('account', { user: req.user });\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdGUuanMiXSwibmFtZXMiOlsibG9naW4iLCJyZXF1aXJlIiwicGFzc3BvcnQiLCJleHBvcnRzIiwiaW5kZXgiLCJyZXEiLCJyZXMiLCJxdWVyeSIsImNvZGUiLCJyZW5kZXIiLCJsb2dpbkZvcm0iLCJhdXRoZW50aWNhdGUiLCJzdWNjZXNzUmV0dXJuVG9PclJlZGlyZWN0IiwiZmFpbHVyZVJlZGlyZWN0IiwibG9nb3V0IiwicmVkaXJlY3QiLCJhY2NvdW50IiwiZW5zdXJlTG9nZ2VkSW4iLCJ1c2VyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxRQUFXQyxRQUFRLHNCQUFSLENBQWpCO0FBQ0EsSUFBTUMsV0FBV0QsUUFBUSxVQUFSLENBQWpCOztBQUVBOzs7Ozs7QUFNQUUsUUFBUUMsS0FBUixHQUFnQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM1QixNQUFJLENBQUNELElBQUlFLEtBQUosQ0FBVUMsSUFBZixFQUFxQjtBQUNuQkYsUUFBSUcsTUFBSixDQUFXLE9BQVg7QUFDRCxHQUZELE1BRU87QUFDTEgsUUFBSUcsTUFBSixDQUFXLGlCQUFYO0FBQ0Q7QUFDRixDQU5EOztBQVFBOzs7Ozs7QUFNQU4sUUFBUU8sU0FBUixHQUFvQixVQUFDTCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNoQ0EsTUFBSUcsTUFBSixDQUFXLE9BQVg7QUFDRCxDQUZEOztBQUlBOzs7QUFHQU4sUUFBUUgsS0FBUixHQUFnQixDQUNkRSxTQUFTUyxZQUFULENBQXNCLE9BQXRCLEVBQStCLEVBQUVDLDJCQUEyQixHQUE3QixFQUFrQ0MsaUJBQWlCLFFBQW5ELEVBQS9CLENBRGMsQ0FBaEI7O0FBSUE7Ozs7OztBQU1BVixRQUFRVyxNQUFSLEdBQWlCLFVBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCRCxNQUFJUyxNQUFKO0FBQ0FSLE1BQUlTLFFBQUosQ0FBYSxHQUFiO0FBQ0QsQ0FIRDs7QUFLQTs7Ozs7O0FBTUFaLFFBQVFhLE9BQVIsR0FBa0IsQ0FDaEJoQixNQUFNaUIsY0FBTixFQURnQixFQUVoQixVQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNaQSxNQUFJRyxNQUFKLENBQVcsU0FBWCxFQUFzQixFQUFFUyxNQUFNYixJQUFJYSxJQUFaLEVBQXRCO0FBQ0QsQ0FKZSxDQUFsQiIsImZpbGUiOiJzaXRlLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGxvZ2luICAgID0gcmVxdWlyZSgnY29ubmVjdC1lbnN1cmUtbG9naW4nKTtcbmNvbnN0IHBhc3Nwb3J0ID0gcmVxdWlyZSgncGFzc3BvcnQnKTtcblxuLyoqXG4gKiBSZW5kZXIgdGhlIGluZGV4LmVqcyBvciBpbmRleC13aXRoLWNvZGUuanMgZGVwZW5kaW5nIG9uIGlmIHF1ZXJ5IHBhcmFtIGhhcyBjb2RlIG9yIG5vdFxuICogQHBhcmFtICAge09iamVjdH0gcmVxIC0gVGhlIHJlcXVlc3RcbiAqIEBwYXJhbSAgIHtPYmplY3R9IHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZXhwb3J0cy5pbmRleCA9IChyZXEsIHJlcykgPT4ge1xuICBpZiAoIXJlcS5xdWVyeS5jb2RlKSB7XG4gICAgcmVzLnJlbmRlcignaW5kZXgnKTtcbiAgfSBlbHNlIHtcbiAgICByZXMucmVuZGVyKCdpbmRleC13aXRoLWNvZGUnKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZW5kZXIgdGhlIGxvZ2luLmVqc1xuICogQHBhcmFtICAge09iamVjdH0gcmVxIC0gVGhlIHJlcXVlc3RcbiAqIEBwYXJhbSAgIHtPYmplY3R9IHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZXhwb3J0cy5sb2dpbkZvcm0gPSAocmVxLCByZXMpID0+IHtcbiAgcmVzLnJlbmRlcignbG9naW4nKTtcbn07XG5cbi8qKlxuICogQXV0aGVudGljYXRlIG5vcm1hbCBsb2dpbiBwYWdlIHVzaW5nIHN0cmF0ZWd5IG9mIGF1dGhlbnRpY2F0ZVxuICovXG5leHBvcnRzLmxvZ2luID0gW1xuICBwYXNzcG9ydC5hdXRoZW50aWNhdGUoJ2xvY2FsJywgeyBzdWNjZXNzUmV0dXJuVG9PclJlZGlyZWN0OiAnLycsIGZhaWx1cmVSZWRpcmVjdDogJy9sb2dpbicgfSksXG5dO1xuXG4vKipcbiAqIExvZ291dCBvZiB0aGUgc3lzdGVtIGFuZCByZWRpcmVjdCB0byByb290XG4gKiBAcGFyYW0gICB7T2JqZWN0fSAgIHJlcSAtIFRoZSByZXF1ZXN0XG4gKiBAcGFyYW0gICB7T2JqZWN0fSAgIHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZXhwb3J0cy5sb2dvdXQgPSAocmVxLCByZXMpID0+IHtcbiAgcmVxLmxvZ291dCgpO1xuICByZXMucmVkaXJlY3QoJy8nKTtcbn07XG5cbi8qKlxuICogUmVuZGVyIGFjY291bnQuZWpzIGJ1dCBlbnN1cmUgdGhlIHVzZXIgaXMgbG9nZ2VkIGluIGJlZm9yZSByZW5kZXJpbmdcbiAqIEBwYXJhbSAgIHtPYmplY3R9ICAgcmVxIC0gVGhlIHJlcXVlc3RcbiAqIEBwYXJhbSAgIHtPYmplY3R9ICAgcmVzIC0gVGhlIHJlc3BvbnNlXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICovXG5leHBvcnRzLmFjY291bnQgPSBbXG4gIGxvZ2luLmVuc3VyZUxvZ2dlZEluKCksXG4gIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5yZW5kZXIoJ2FjY291bnQnLCB7IHVzZXI6IHJlcS51c2VyIH0pO1xuICB9LFxuXTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "site.js"
      ],
      "names": [
        "login",
        "require",
        "passport",
        "exports",
        "index",
        "req",
        "res",
        "query",
        "code",
        "render",
        "loginForm",
        "authenticate",
        "successReturnToOrRedirect",
        "failureRedirect",
        "logout",
        "redirect",
        "account",
        "ensureLoggedIn",
        "user"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,QAAWC,QAAQ,sBAAR,CAAjB;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;;AAEA;;;;;;AAMAE,QAAQC,KAAR,GAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,MAAI,CAACD,IAAIE,KAAJ,CAAUC,IAAf,EAAqB;AACnBF,QAAIG,MAAJ,CAAW,OAAX;AACD,GAFD,MAEO;AACLH,QAAIG,MAAJ,CAAW,iBAAX;AACD;AACF,CAND;;AAQA;;;;;;AAMAN,QAAQO,SAAR,GAAoB,UAACL,GAAD,EAAMC,GAAN,EAAc;AAChCA,MAAIG,MAAJ,CAAW,OAAX;AACD,CAFD;;AAIA;;;AAGAN,QAAQH,KAAR,GAAgB,CACdE,SAASS,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,2BAA2B,GAA7B,EAAkCC,iBAAiB,QAAnD,EAA/B,CADc,CAAhB;;AAIA;;;;;;AAMAV,QAAQW,MAAR,GAAiB,UAACT,GAAD,EAAMC,GAAN,EAAc;AAC7BD,MAAIS,MAAJ;AACAR,MAAIS,QAAJ,CAAa,GAAb;AACD,CAHD;;AAKA;;;;;;AAMAZ,QAAQa,OAAR,GAAkB,CAChBhB,MAAMiB,cAAN,EADgB,EAEhB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACZA,MAAIG,MAAJ,CAAW,SAAX,EAAsB,EAAES,MAAMb,IAAIa,IAAZ,EAAtB;AACD,CAJe,CAAlB",
      "file": "site.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst login    = require('connect-ensure-login');\nconst passport = require('passport');\n\n/**\n * Render the index.ejs or index-with-code.js depending on if query param has code or not\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.index = (req, res) => {\n  if (!req.query.code) {\n    res.render('index');\n  } else {\n    res.render('index-with-code');\n  }\n};\n\n/**\n * Render the login.ejs\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.loginForm = (req, res) => {\n  res.render('login');\n};\n\n/**\n * Authenticate normal login page using strategy of authenticate\n */\nexports.login = [\n  passport.authenticate('local', { successReturnToOrRedirect: '/', failureRedirect: '/login' }),\n];\n\n/**\n * Logout of the system and redirect to root\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.logout = (req, res) => {\n  req.logout();\n  res.redirect('/');\n};\n\n/**\n * Render account.ejs but ensure the user is logged in before rendering\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.account = [\n  login.ensureLoggedIn(),\n  (req, res) => {\n    res.render('account', { user: req.user });\n  },\n];\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/token.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/token.js",
      "filenameRelative": "/app/token.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "token.js",
      "sourceFileName": "token.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "token"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar db = require('./db');\nvar validate = require('./validate');\n\n/**\n * This endpoint is for verifying a token.  This has the same signature to\n * Google's token verification system from:\n * https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\n *\n * You call it like so\n * https://localhost:3000/api/tokeninfo?access_token=someToken\n *\n * If the token is valid you get returned\n * {\n *   \"audience\": someClientId\n * }\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing only\n */\nexports.info = function (req, res) {\n  return validate.tokenForHttp(req.query.access_token).then(function () {\n    return db.accessTokens.find(req.query.access_token);\n  }).then(function (token) {\n    return validate.tokenExistsForHttp(token);\n  }).then(function (token) {\n    return db.clients.find(token.clientID).then(function (client) {\n      return validate.clientExistsForHttp(client);\n    }).then(function (client) {\n      return { client: client, token: token };\n    });\n  }).then(function (_ref) {\n    var client = _ref.client,\n        token = _ref.token;\n\n    var expirationLeft = Math.floor((token.expirationDate.getTime() - Date.now()) / 1000);\n    res.json({ audience: client.clientId, expires_in: expirationLeft });\n  }).catch(function (err) {\n    res.status(err.status);\n    res.json({ error: err.message });\n  });\n};\n\n/**\n * This endpoint is for revoking a token.  This has the same signature to\n * Google's token revocation system from:\n * https://developers.google.com/identity/protocols/OAuth2WebServer\n *\n * You call it like so\n * https://localhost:3000/api/revoke?token=someToken\n *\n * If the token is valid you get returned a 200 and an empty object\n * {}\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * This will first try to delete the token as an access token.  If one is not found it will try and\n * delete the token as a refresh token.  If both fail then an error is returned.\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing\n */\nexports.revoke = function (req, res) {\n  return validate.tokenForHttp(req.query.token).then(function () {\n    return db.accessTokens.delete(req.query.token);\n  }).then(function (token) {\n    if (token == null) {\n      return db.refreshTokens.delete(req.query.token);\n    }\n    return token;\n  }).then(function (tokenDeleted) {\n    return validate.tokenExistsForHttp(tokenDeleted);\n  }).then(function () {\n    res.json({});\n  }).catch(function (err) {\n    res.status(err.status);\n    res.json({ error: err.message });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuLmpzIl0sIm5hbWVzIjpbImRiIiwicmVxdWlyZSIsInZhbGlkYXRlIiwiZXhwb3J0cyIsImluZm8iLCJyZXEiLCJyZXMiLCJ0b2tlbkZvckh0dHAiLCJxdWVyeSIsImFjY2Vzc190b2tlbiIsInRoZW4iLCJhY2Nlc3NUb2tlbnMiLCJmaW5kIiwidG9rZW5FeGlzdHNGb3JIdHRwIiwidG9rZW4iLCJjbGllbnRzIiwiY2xpZW50SUQiLCJjbGllbnRFeGlzdHNGb3JIdHRwIiwiY2xpZW50IiwiZXhwaXJhdGlvbkxlZnQiLCJNYXRoIiwiZmxvb3IiLCJleHBpcmF0aW9uRGF0ZSIsImdldFRpbWUiLCJEYXRlIiwibm93IiwianNvbiIsImF1ZGllbmNlIiwiY2xpZW50SWQiLCJleHBpcmVzX2luIiwiY2F0Y2giLCJlcnIiLCJzdGF0dXMiLCJlcnJvciIsIm1lc3NhZ2UiLCJyZXZva2UiLCJkZWxldGUiLCJyZWZyZXNoVG9rZW5zIiwidG9rZW5EZWxldGVkIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxLQUFXQyxRQUFRLE1BQVIsQ0FBakI7QUFDQSxJQUFNQyxXQUFXRCxRQUFRLFlBQVIsQ0FBakI7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQUUsUUFBUUMsSUFBUixHQUFlLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQ2JKLFNBQVNLLFlBQVQsQ0FBc0JGLElBQUlHLEtBQUosQ0FBVUMsWUFBaEMsRUFDQ0MsSUFERCxDQUNNO0FBQUEsV0FBTVYsR0FBR1csWUFBSCxDQUFnQkMsSUFBaEIsQ0FBcUJQLElBQUlHLEtBQUosQ0FBVUMsWUFBL0IsQ0FBTjtBQUFBLEdBRE4sRUFFQ0MsSUFGRCxDQUVNO0FBQUEsV0FBU1IsU0FBU1csa0JBQVQsQ0FBNEJDLEtBQTVCLENBQVQ7QUFBQSxHQUZOLEVBR0NKLElBSEQsQ0FHTTtBQUFBLFdBQ0pWLEdBQUdlLE9BQUgsQ0FBV0gsSUFBWCxDQUFnQkUsTUFBTUUsUUFBdEIsRUFDQ04sSUFERCxDQUNNO0FBQUEsYUFBVVIsU0FBU2UsbUJBQVQsQ0FBNkJDLE1BQTdCLENBQVY7QUFBQSxLQUROLEVBRUNSLElBRkQsQ0FFTTtBQUFBLGFBQVcsRUFBRVEsY0FBRixFQUFVSixZQUFWLEVBQVg7QUFBQSxLQUZOLENBREk7QUFBQSxHQUhOLEVBT0NKLElBUEQsQ0FPTSxnQkFBdUI7QUFBQSxRQUFwQlEsTUFBb0IsUUFBcEJBLE1BQW9CO0FBQUEsUUFBWkosS0FBWSxRQUFaQSxLQUFZOztBQUMzQixRQUFNSyxpQkFBaUJDLEtBQUtDLEtBQUwsQ0FBVyxDQUFDUCxNQUFNUSxjQUFOLENBQXFCQyxPQUFyQixLQUFpQ0MsS0FBS0MsR0FBTCxFQUFsQyxJQUFnRCxJQUEzRCxDQUF2QjtBQUNBbkIsUUFBSW9CLElBQUosQ0FBUyxFQUFFQyxVQUFXVCxPQUFPVSxRQUFwQixFQUE4QkMsWUFBYVYsY0FBM0MsRUFBVDtBQUNELEdBVkQsRUFXQ1csS0FYRCxDQVdPLFVBQUNDLEdBQUQsRUFBUztBQUNkekIsUUFBSTBCLE1BQUosQ0FBV0QsSUFBSUMsTUFBZjtBQUNBMUIsUUFBSW9CLElBQUosQ0FBUyxFQUFFTyxPQUFPRixJQUFJRyxPQUFiLEVBQVQ7QUFDRCxHQWRELENBRGE7QUFBQSxDQUFmOztBQWlCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBL0IsUUFBUWdDLE1BQVIsR0FBaUIsVUFBQzlCLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQ2ZKLFNBQVNLLFlBQVQsQ0FBc0JGLElBQUlHLEtBQUosQ0FBVU0sS0FBaEMsRUFDQ0osSUFERCxDQUNNO0FBQUEsV0FBTVYsR0FBR1csWUFBSCxDQUFnQnlCLE1BQWhCLENBQXVCL0IsSUFBSUcsS0FBSixDQUFVTSxLQUFqQyxDQUFOO0FBQUEsR0FETixFQUVDSixJQUZELENBRU0sVUFBQ0ksS0FBRCxFQUFXO0FBQ2YsUUFBSUEsU0FBUyxJQUFiLEVBQW1CO0FBQ2pCLGFBQU9kLEdBQUdxQyxhQUFILENBQWlCRCxNQUFqQixDQUF3Qi9CLElBQUlHLEtBQUosQ0FBVU0sS0FBbEMsQ0FBUDtBQUNEO0FBQ0QsV0FBT0EsS0FBUDtBQUNELEdBUEQsRUFRQ0osSUFSRCxDQVFNO0FBQUEsV0FBZ0JSLFNBQVNXLGtCQUFULENBQTRCeUIsWUFBNUIsQ0FBaEI7QUFBQSxHQVJOLEVBU0M1QixJQVRELENBU00sWUFBTTtBQUNWSixRQUFJb0IsSUFBSixDQUFTLEVBQVQ7QUFDRCxHQVhELEVBWUNJLEtBWkQsQ0FZTyxVQUFDQyxHQUFELEVBQVM7QUFDZHpCLFFBQUkwQixNQUFKLENBQVdELElBQUlDLE1BQWY7QUFDQTFCLFFBQUlvQixJQUFKLENBQVMsRUFBRU8sT0FBT0YsSUFBSUcsT0FBYixFQUFUO0FBQ0QsR0FmRCxDQURlO0FBQUEsQ0FBakIiLCJmaWxlIjoidG9rZW4uanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZGIgICAgICAgPSByZXF1aXJlKCcuL2RiJyk7XG5jb25zdCB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vdmFsaWRhdGUnKTtcblxuLyoqXG4gKiBUaGlzIGVuZHBvaW50IGlzIGZvciB2ZXJpZnlpbmcgYSB0b2tlbi4gIFRoaXMgaGFzIHRoZSBzYW1lIHNpZ25hdHVyZSB0b1xuICogR29vZ2xlJ3MgdG9rZW4gdmVyaWZpY2F0aW9uIHN5c3RlbSBmcm9tOlxuICogaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vYWNjb3VudHMvZG9jcy9PQXV0aDJVc2VyQWdlbnQjdmFsaWRhdGV0b2tlblxuICpcbiAqIFlvdSBjYWxsIGl0IGxpa2Ugc29cbiAqIGh0dHBzOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Rva2VuaW5mbz9hY2Nlc3NfdG9rZW49c29tZVRva2VuXG4gKlxuICogSWYgdGhlIHRva2VuIGlzIHZhbGlkIHlvdSBnZXQgcmV0dXJuZWRcbiAqIHtcbiAqICAgXCJhdWRpZW5jZVwiOiBzb21lQ2xpZW50SWRcbiAqIH1cbiAqXG4gKiBJZiB0aGUgdG9rZW4gaXMgbm90IHZhbGlkIHlvdSBnZXQgYSA0MDAgU3RhdHVzIGFuZCB0aGlzIHJldHVybmVkXG4gKiB7XG4gKiAgIFwiZXJyb3JcIjogXCJpbnZhbGlkX3Rva2VuXCJcbiAqIH1cbiAqIEBwYXJhbSAgIHtPYmplY3R9ICByZXEgLSBUaGUgcmVxdWVzdFxuICogQHBhcmFtICAge09iamVjdH0gIHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge1Byb21pc2V9IFJldHVybnMgdGhlIHByb21pc2UgZm9yIHRlc3Rpbmcgb25seVxuICovXG5leHBvcnRzLmluZm8gPSAocmVxLCByZXMpID0+XG4gIHZhbGlkYXRlLnRva2VuRm9ySHR0cChyZXEucXVlcnkuYWNjZXNzX3Rva2VuKVxuICAudGhlbigoKSA9PiBkYi5hY2Nlc3NUb2tlbnMuZmluZChyZXEucXVlcnkuYWNjZXNzX3Rva2VuKSlcbiAgLnRoZW4odG9rZW4gPT4gdmFsaWRhdGUudG9rZW5FeGlzdHNGb3JIdHRwKHRva2VuKSlcbiAgLnRoZW4odG9rZW4gPT5cbiAgICBkYi5jbGllbnRzLmZpbmQodG9rZW4uY2xpZW50SUQpXG4gICAgLnRoZW4oY2xpZW50ID0+IHZhbGlkYXRlLmNsaWVudEV4aXN0c0Zvckh0dHAoY2xpZW50KSlcbiAgICAudGhlbihjbGllbnQgPT4gKHsgY2xpZW50LCB0b2tlbiB9KSkpXG4gIC50aGVuKCh7IGNsaWVudCwgdG9rZW4gfSkgPT4ge1xuICAgIGNvbnN0IGV4cGlyYXRpb25MZWZ0ID0gTWF0aC5mbG9vcigodG9rZW4uZXhwaXJhdGlvbkRhdGUuZ2V0VGltZSgpIC0gRGF0ZS5ub3coKSkgLyAxMDAwKTtcbiAgICByZXMuanNvbih7IGF1ZGllbmNlIDogY2xpZW50LmNsaWVudElkLCBleHBpcmVzX2luIDogZXhwaXJhdGlvbkxlZnQgfSk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzKTtcbiAgICByZXMuanNvbih7IGVycm9yOiBlcnIubWVzc2FnZSB9KTtcbiAgfSk7XG5cbi8qKlxuICogVGhpcyBlbmRwb2ludCBpcyBmb3IgcmV2b2tpbmcgYSB0b2tlbi4gIFRoaXMgaGFzIHRoZSBzYW1lIHNpZ25hdHVyZSB0b1xuICogR29vZ2xlJ3MgdG9rZW4gcmV2b2NhdGlvbiBzeXN0ZW0gZnJvbTpcbiAqIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2lkZW50aXR5L3Byb3RvY29scy9PQXV0aDJXZWJTZXJ2ZXJcbiAqXG4gKiBZb3UgY2FsbCBpdCBsaWtlIHNvXG4gKiBodHRwczovL2xvY2FsaG9zdDozMDAwL2FwaS9yZXZva2U/dG9rZW49c29tZVRva2VuXG4gKlxuICogSWYgdGhlIHRva2VuIGlzIHZhbGlkIHlvdSBnZXQgcmV0dXJuZWQgYSAyMDAgYW5kIGFuIGVtcHR5IG9iamVjdFxuICoge31cbiAqXG4gKiBJZiB0aGUgdG9rZW4gaXMgbm90IHZhbGlkIHlvdSBnZXQgYSA0MDAgU3RhdHVzIGFuZCB0aGlzIHJldHVybmVkXG4gKiB7XG4gKiAgIFwiZXJyb3JcIjogXCJpbnZhbGlkX3Rva2VuXCJcbiAqIH1cbiAqIFRoaXMgd2lsbCBmaXJzdCB0cnkgdG8gZGVsZXRlIHRoZSB0b2tlbiBhcyBhbiBhY2Nlc3MgdG9rZW4uICBJZiBvbmUgaXMgbm90IGZvdW5kIGl0IHdpbGwgdHJ5IGFuZFxuICogZGVsZXRlIHRoZSB0b2tlbiBhcyBhIHJlZnJlc2ggdG9rZW4uICBJZiBib3RoIGZhaWwgdGhlbiBhbiBlcnJvciBpcyByZXR1cm5lZC5cbiAqIEBwYXJhbSAgIHtPYmplY3R9ICByZXEgLSBUaGUgcmVxdWVzdFxuICogQHBhcmFtICAge09iamVjdH0gIHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge1Byb21pc2V9IFJldHVybnMgdGhlIHByb21pc2UgZm9yIHRlc3RpbmdcbiAqL1xuZXhwb3J0cy5yZXZva2UgPSAocmVxLCByZXMpID0+XG4gIHZhbGlkYXRlLnRva2VuRm9ySHR0cChyZXEucXVlcnkudG9rZW4pXG4gIC50aGVuKCgpID0+IGRiLmFjY2Vzc1Rva2Vucy5kZWxldGUocmVxLnF1ZXJ5LnRva2VuKSlcbiAgLnRoZW4oKHRva2VuKSA9PiB7XG4gICAgaWYgKHRva2VuID09IG51bGwpIHtcbiAgICAgIHJldHVybiBkYi5yZWZyZXNoVG9rZW5zLmRlbGV0ZShyZXEucXVlcnkudG9rZW4pO1xuICAgIH1cbiAgICByZXR1cm4gdG9rZW47XG4gIH0pXG4gIC50aGVuKHRva2VuRGVsZXRlZCA9PiB2YWxpZGF0ZS50b2tlbkV4aXN0c0Zvckh0dHAodG9rZW5EZWxldGVkKSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIHJlcy5qc29uKHt9KTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMpO1xuICAgIHJlcy5qc29uKHsgZXJyb3I6IGVyci5tZXNzYWdlIH0pO1xuICB9KTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "token.js"
      ],
      "names": [
        "db",
        "require",
        "validate",
        "exports",
        "info",
        "req",
        "res",
        "tokenForHttp",
        "query",
        "access_token",
        "then",
        "accessTokens",
        "find",
        "tokenExistsForHttp",
        "token",
        "clients",
        "clientID",
        "clientExistsForHttp",
        "client",
        "expirationLeft",
        "Math",
        "floor",
        "expirationDate",
        "getTime",
        "Date",
        "now",
        "json",
        "audience",
        "clientId",
        "expires_in",
        "catch",
        "err",
        "status",
        "error",
        "message",
        "revoke",
        "delete",
        "refreshTokens",
        "tokenDeleted"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAWC,QAAQ,MAAR,CAAjB;AACA,IAAMC,WAAWD,QAAQ,YAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAE,QAAQC,IAAR,GAAe,UAACC,GAAD,EAAMC,GAAN;AAAA,SACbJ,SAASK,YAAT,CAAsBF,IAAIG,KAAJ,CAAUC,YAAhC,EACCC,IADD,CACM;AAAA,WAAMV,GAAGW,YAAH,CAAgBC,IAAhB,CAAqBP,IAAIG,KAAJ,CAAUC,YAA/B,CAAN;AAAA,GADN,EAECC,IAFD,CAEM;AAAA,WAASR,SAASW,kBAAT,CAA4BC,KAA5B,CAAT;AAAA,GAFN,EAGCJ,IAHD,CAGM;AAAA,WACJV,GAAGe,OAAH,CAAWH,IAAX,CAAgBE,MAAME,QAAtB,EACCN,IADD,CACM;AAAA,aAAUR,SAASe,mBAAT,CAA6BC,MAA7B,CAAV;AAAA,KADN,EAECR,IAFD,CAEM;AAAA,aAAW,EAAEQ,cAAF,EAAUJ,YAAV,EAAX;AAAA,KAFN,CADI;AAAA,GAHN,EAOCJ,IAPD,CAOM,gBAAuB;AAAA,QAApBQ,MAAoB,QAApBA,MAAoB;AAAA,QAAZJ,KAAY,QAAZA,KAAY;;AAC3B,QAAMK,iBAAiBC,KAAKC,KAAL,CAAW,CAACP,MAAMQ,cAAN,CAAqBC,OAArB,KAAiCC,KAAKC,GAAL,EAAlC,IAAgD,IAA3D,CAAvB;AACAnB,QAAIoB,IAAJ,CAAS,EAAEC,UAAWT,OAAOU,QAApB,EAA8BC,YAAaV,cAA3C,EAAT;AACD,GAVD,EAWCW,KAXD,CAWO,UAACC,GAAD,EAAS;AACdzB,QAAI0B,MAAJ,CAAWD,IAAIC,MAAf;AACA1B,QAAIoB,IAAJ,CAAS,EAAEO,OAAOF,IAAIG,OAAb,EAAT;AACD,GAdD,CADa;AAAA,CAAf;;AAiBA;;;;;;;;;;;;;;;;;;;;;AAqBA/B,QAAQgC,MAAR,GAAiB,UAAC9B,GAAD,EAAMC,GAAN;AAAA,SACfJ,SAASK,YAAT,CAAsBF,IAAIG,KAAJ,CAAUM,KAAhC,EACCJ,IADD,CACM;AAAA,WAAMV,GAAGW,YAAH,CAAgByB,MAAhB,CAAuB/B,IAAIG,KAAJ,CAAUM,KAAjC,CAAN;AAAA,GADN,EAECJ,IAFD,CAEM,UAACI,KAAD,EAAW;AACf,QAAIA,SAAS,IAAb,EAAmB;AACjB,aAAOd,GAAGqC,aAAH,CAAiBD,MAAjB,CAAwB/B,IAAIG,KAAJ,CAAUM,KAAlC,CAAP;AACD;AACD,WAAOA,KAAP;AACD,GAPD,EAQCJ,IARD,CAQM;AAAA,WAAgBR,SAASW,kBAAT,CAA4ByB,YAA5B,CAAhB;AAAA,GARN,EASC5B,IATD,CASM,YAAM;AACVJ,QAAIoB,IAAJ,CAAS,EAAT;AACD,GAXD,EAYCI,KAZD,CAYO,UAACC,GAAD,EAAS;AACdzB,QAAI0B,MAAJ,CAAWD,IAAIC,MAAf;AACA1B,QAAIoB,IAAJ,CAAS,EAAEO,OAAOF,IAAIG,OAAb,EAAT;AACD,GAfD,CADe;AAAA,CAAjB",
      "file": "token.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst db       = require('./db');\nconst validate = require('./validate');\n\n/**\n * This endpoint is for verifying a token.  This has the same signature to\n * Google's token verification system from:\n * https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\n *\n * You call it like so\n * https://localhost:3000/api/tokeninfo?access_token=someToken\n *\n * If the token is valid you get returned\n * {\n *   \"audience\": someClientId\n * }\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing only\n */\nexports.info = (req, res) =>\n  validate.tokenForHttp(req.query.access_token)\n  .then(() => db.accessTokens.find(req.query.access_token))\n  .then(token => validate.tokenExistsForHttp(token))\n  .then(token =>\n    db.clients.find(token.clientID)\n    .then(client => validate.clientExistsForHttp(client))\n    .then(client => ({ client, token })))\n  .then(({ client, token }) => {\n    const expirationLeft = Math.floor((token.expirationDate.getTime() - Date.now()) / 1000);\n    res.json({ audience : client.clientId, expires_in : expirationLeft });\n  })\n  .catch((err) => {\n    res.status(err.status);\n    res.json({ error: err.message });\n  });\n\n/**\n * This endpoint is for revoking a token.  This has the same signature to\n * Google's token revocation system from:\n * https://developers.google.com/identity/protocols/OAuth2WebServer\n *\n * You call it like so\n * https://localhost:3000/api/revoke?token=someToken\n *\n * If the token is valid you get returned a 200 and an empty object\n * {}\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * This will first try to delete the token as an access token.  If one is not found it will try and\n * delete the token as a refresh token.  If both fail then an error is returned.\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing\n */\nexports.revoke = (req, res) =>\n  validate.tokenForHttp(req.query.token)\n  .then(() => db.accessTokens.delete(req.query.token))\n  .then((token) => {\n    if (token == null) {\n      return db.refreshTokens.delete(req.query.token);\n    }\n    return token;\n  })\n  .then(tokenDeleted => validate.tokenExistsForHttp(tokenDeleted))\n  .then(() => {\n    res.json({});\n  })\n  .catch((err) => {\n    res.status(err.status);\n    res.json({ error: err.message });\n  });\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/user.js",
      "filenameRelative": "/app/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar passport = require('passport');\n\n/**\n * Simple informational end point, if you want to get information\n * about a particular user.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n * @param {Object} req The request\n * @param {Object} res The response\n * @returns {undefined}\n */\nexports.info = [passport.authenticate('bearer', { session: false }), function (req, res) {\n  // req.authInfo is set using the `info` argument supplied by\n  // `BearerStrategy`.  It is typically used to indicate scope of the token,\n  // and used in access control checks.  For illustrative purposes, this\n  // example simply returns the scope in the response.\n  res.json({ user_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsicGFzc3BvcnQiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImluZm8iLCJhdXRoZW50aWNhdGUiLCJzZXNzaW9uIiwicmVxIiwicmVzIiwianNvbiIsInVzZXJfaWQiLCJ1c2VyIiwiaWQiLCJuYW1lIiwic2NvcGUiLCJhdXRoSW5mbyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsV0FBV0MsUUFBUSxVQUFSLENBQWpCOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQUMsUUFBUUMsSUFBUixHQUFlLENBQ2JILFNBQVNJLFlBQVQsQ0FBc0IsUUFBdEIsRUFBZ0MsRUFBRUMsU0FBUyxLQUFYLEVBQWhDLENBRGEsRUFFYixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0FBLE1BQUlDLElBQUosQ0FBUyxFQUFFQyxTQUFTSCxJQUFJSSxJQUFKLENBQVNDLEVBQXBCLEVBQXdCQyxNQUFNTixJQUFJSSxJQUFKLENBQVNFLElBQXZDLEVBQTZDQyxPQUFPUCxJQUFJUSxRQUFKLENBQWFELEtBQWpFLEVBQVQ7QUFDRCxDQVJZLENBQWYiLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBwYXNzcG9ydCA9IHJlcXVpcmUoJ3Bhc3Nwb3J0Jyk7XG5cbi8qKlxuICogU2ltcGxlIGluZm9ybWF0aW9uYWwgZW5kIHBvaW50LCBpZiB5b3Ugd2FudCB0byBnZXQgaW5mb3JtYXRpb25cbiAqIGFib3V0IGEgcGFydGljdWxhciB1c2VyLiAgWW91IHdvdWxkIGNhbGwgdGhpcyB3aXRoIGFuIGFjY2VzcyB0b2tlblxuICogaW4gdGhlIGJvZHkgb2YgdGhlIG1lc3NhZ2UgYWNjb3JkaW5nIHRvIE9BdXRoIDIuMCBzdGFuZGFyZHNcbiAqIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NTAjc2VjdGlvbi0yLjFcbiAqXG4gKiBFeGFtcGxlIHdvdWxkIGJlIHVzaW5nIHRoZSBlbmRwb2ludCBvZlxuICogaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvdXNlcmluZm9cbiAqXG4gKiBXaXRoIGEgR0VUIHVzaW5nIGFuIEF1dGhvcml6YXRpb24gQmVhcmVyIHRva2VuIHNpbWlsYXIgdG9cbiAqIEdFVCAvYXBpL3VzZXJpbmZvXG4gKiBIb3N0OiBodHRwczovL2xvY2FsaG9zdDozMDAwXG4gKiBBdXRob3JpemF0aW9uOiBCZWFyZXIgc29tZUFjY2Vzc1Rva2VuSGVyZVxuICogQHBhcmFtIHtPYmplY3R9IHJlcSBUaGUgcmVxdWVzdFxuICogQHBhcmFtIHtPYmplY3R9IHJlcyBUaGUgcmVzcG9uc2VcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKi9cbmV4cG9ydHMuaW5mbyA9IFtcbiAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdiZWFyZXInLCB7IHNlc3Npb246IGZhbHNlIH0pLFxuICAocmVxLCByZXMpID0+IHtcbiAgICAvLyByZXEuYXV0aEluZm8gaXMgc2V0IHVzaW5nIHRoZSBgaW5mb2AgYXJndW1lbnQgc3VwcGxpZWQgYnlcbiAgICAvLyBgQmVhcmVyU3RyYXRlZ3lgLiAgSXQgaXMgdHlwaWNhbGx5IHVzZWQgdG8gaW5kaWNhdGUgc2NvcGUgb2YgdGhlIHRva2VuLFxuICAgIC8vIGFuZCB1c2VkIGluIGFjY2VzcyBjb250cm9sIGNoZWNrcy4gIEZvciBpbGx1c3RyYXRpdmUgcHVycG9zZXMsIHRoaXNcbiAgICAvLyBleGFtcGxlIHNpbXBseSByZXR1cm5zIHRoZSBzY29wZSBpbiB0aGUgcmVzcG9uc2UuXG4gICAgcmVzLmpzb24oeyB1c2VyX2lkOiByZXEudXNlci5pZCwgbmFtZTogcmVxLnVzZXIubmFtZSwgc2NvcGU6IHJlcS5hdXRoSW5mby5zY29wZSB9KTtcbiAgfSxcbl07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "passport",
        "require",
        "exports",
        "info",
        "authenticate",
        "session",
        "req",
        "res",
        "json",
        "user_id",
        "user",
        "id",
        "name",
        "scope",
        "authInfo"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;AAiBAC,QAAQC,IAAR,GAAe,CACbH,SAASI,YAAT,CAAsB,QAAtB,EAAgC,EAAEC,SAAS,KAAX,EAAhC,CADa,EAEb,UAACC,GAAD,EAAMC,GAAN,EAAc;AACZ;AACA;AACA;AACA;AACAA,MAAIC,IAAJ,CAAS,EAAEC,SAASH,IAAII,IAAJ,CAASC,EAApB,EAAwBC,MAAMN,IAAII,IAAJ,CAASE,IAAvC,EAA6CC,OAAOP,IAAIQ,QAAJ,CAAaD,KAAjE,EAAT;AACD,CARY,CAAf",
      "file": "user.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst passport = require('passport');\n\n/**\n * Simple informational end point, if you want to get information\n * about a particular user.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n * @param {Object} req The request\n * @param {Object} res The response\n * @returns {undefined}\n */\nexports.info = [\n  passport.authenticate('bearer', { session: false }),\n  (req, res) => {\n    // req.authInfo is set using the `info` argument supplied by\n    // `BearerStrategy`.  It is typically used to indicate scope of the token,\n    // and used in access control checks.  For illustrative purposes, this\n    // example simply returns the scope in the response.\n    res.json({ user_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n  },\n];\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/auth.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/auth.js",
      "filenameRelative": "/app/auth.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.js",
      "sourceFileName": "auth.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar db = require('./db');\nvar User = require('./db/users');\nvar Client = require('./db/clients');\nvar passport = require('passport');\n\nvar _require = require('passport-local'),\n    LocalStrategy = _require.Strategy;\n\nvar _require2 = require('passport-http'),\n    BasicStrategy = _require2.BasicStrategy;\n\nvar _require3 = require('passport-oauth2-client-password'),\n    ClientPasswordStrategy = _require3.Strategy;\n\nvar _require4 = require('passport-http-bearer'),\n    BearerStrategy = _require4.Strategy;\n\nvar validate = require('./validate');\n\nvar _require5 = require('./utils'),\n    logAndThrow = _require5.logAndThrow;\n\n/**\n * LocalStrategy\n *\n * This strategy is used to authenticate users based on a username and password.\n * Anytime a request is made to authorize an application, we must ensure that\n * a user is logged in before asking them to approve the request.\n */\n\n\npassport.use(new LocalStrategy(function (username, password, done) {\n  User.findOne({ username: username }).then(function (user) {\n    return user ? user.validate(password) : logAndThrow('User ' + username + ' not found');\n  }).then(function (user) {\n    return done(null, user);\n  }).catch(function (error) {\n    console.log('Login error: ' + error.message);\n    done(null, false);\n  });\n}));\n\n/**\n * BasicStrategy & ClientPasswordStrategy\n *\n * These strategies are used to authenticate registered OAuth clients.  They are\n * employed to protect the `token` endpoint, which consumers use to obtain\n * access tokens.  The OAuth 2.0 specification suggests that clients use the\n * HTTP Basic scheme to authenticate.  Use of the client password strategy\n * allows clients to send the same credentials in the request body (as opposed\n * to the `Authorization` header).  While this approach is not recommended by\n * the specification, in practice it is quite common.\n */\npassport.use(new BasicStrategy(function (clientId, clientSecret, done) {\n  console.log('enter basic strategy....');\n  Client.findOne({ clientId: clientId }).then(function (client) {\n    return client ? client.validate(clientSecret) : logAndThrow('Client with id ' + clientId + ' not found');\n  }).then(function (client) {\n    return done(null, client);\n  }).catch(function (error) {\n    console.log('Login error: ' + error.message);\n    done(null, false);\n  });\n}));\n/*\nconsole.log('enter client login....')\nClient.findOne({ clientId: clientId }, (err, client) => {\n  if (err) { return done(err) }\n  if (!client) {\n    console.log(`Login: clientId ${clientId} does not exist`)\n    return done(null, false)\n  }\n  if (client.clientSecret !== clientSecret) {\n    console.log(`Login: Client secret does not match for client ${clientId}`)\n    return done(null, false)\n  }\n  console.log(`Login successful: client ${clientId}`)\n  return done(null, client)\n})\n*/\n\n/**\n * Client Password strategy\n *\n * The OAuth 2.0 client password authentication strategy authenticates clients\n * using a client ID and client secret. The strategy requires a verify callback,\n * which accepts those credentials and calls done providing a client.\n */\npassport.use(new ClientPasswordStrategy(function (clientId, clientSecret, done) {\n  console.log('enter client-password-strategy....');\n  Client.findOne({ clientId: clientId }).then(function (client) {\n    return client ? client.validate(clientSecret) : logAndThrow('Client with id ' + clientId + ' not2 found');\n  }).then(function (client) {\n    return done(null, client);\n  }).catch(function (error) {\n    console.log('Login error: ' + error.message);\n    done(null, false);\n  });\n}));\n\n/**\n * BearerStrategy\n *\n * This strategy is used to authenticate either users or clients based on an access token\n * (aka a bearer token).  If a user, they must have previously authorized a client\n * application, which is issued an access token to make requests on behalf of\n * the authorizing user.\n *\n * To keep this example simple, restricted scopes are not implemented, and this is just for\n * illustrative purposes\n */\npassport.use(new BearerStrategy(function (accessToken, done) {\n  db.accessTokens.find(accessToken).then(function (token) {\n    return validate.token(token, accessToken);\n  }).then(function (token) {\n    return done(null, token, { scope: '*' });\n  }).catch(function () {\n    return done(null, false);\n  });\n}));\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\npassport.serializeUser(function (user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function (id, done) {\n  User.findOne({ _id: id }, function (err, user) {\n    if (err) done(err);\n    if (!user) done(null, null);\n    done(null, user);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "require",
        "User",
        "Client",
        "passport",
        "LocalStrategy",
        "Strategy",
        "BasicStrategy",
        "ClientPasswordStrategy",
        "BearerStrategy",
        "validate",
        "logAndThrow",
        "use",
        "username",
        "password",
        "done",
        "findOne",
        "then",
        "user",
        "catch",
        "error",
        "console",
        "log",
        "message",
        "clientId",
        "clientSecret",
        "client",
        "accessToken",
        "accessTokens",
        "find",
        "token",
        "scope",
        "serializeUser",
        "id",
        "deserializeUser",
        "_id",
        "err"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAKC,QAAQ,MAAR,CAAX;AACA,IAAMC,OAAOD,QAAS,YAAT,CAAb;AACA,IAAME,SAASF,QAAQ,cAAR,CAAf;AACA,IAAMG,WAAWH,QAAQ,UAAR,CAAjB;;eACoCA,QAAQ,gBAAR,C;IAAlBI,a,YAAVC,Q;;gBACkBL,QAAQ,eAAR,C;IAAlBM,a,aAAAA,a;;gBACqCN,QAAQ,iCAAR,C;IAA3BO,sB,aAAVF,Q;;gBAC6BL,QAAQ,sBAAR,C;IAAnBQ,c,aAAVH,Q;;AACR,IAAMI,WAAWT,QAAQ,YAAR,CAAjB;;gBACwBA,QAAS,SAAT,C;IAAhBU,W,aAAAA,W;;AAER;;;;;;;;;AAOAP,SAASQ,GAAT,CAAa,IAAIP,aAAJ,CAAkB,UAACQ,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA8B;AAC3Db,OAAKc,OAAL,CAAa,EAAEH,UAAUA,QAAZ,EAAb,EACGI,IADH,CACQ;AAAA,WAASC,OAAOA,KAAKR,QAAL,CAAcI,QAAd,CAAP,GAAgCH,sBAAoBE,QAApB,gBAAzC;AAAA,GADR,EAEGI,IAFH,CAEQ;AAAA,WAAQF,KAAK,IAAL,EAAWG,IAAX,CAAR;AAAA,GAFR,EAGGC,KAHH,CAGS,UAACC,KAAD,EAAW;AAChBC,YAAQC,GAAR,mBAA4BF,MAAMG,OAAlC;AACAR,SAAK,IAAL,EAAW,KAAX;AACD,GANH;AAOD,CARY,CAAb;;AAUA;;;;;;;;;;;AAWAX,SAASQ,GAAT,CAAa,IAAIL,aAAJ,CAAkB,UAACiB,QAAD,EAAWC,YAAX,EAAyBV,IAAzB,EAAkC;AAC/DM,UAAQC,GAAR,CAAY,0BAAZ;AACAnB,SAAOa,OAAP,CAAe,EAAEQ,UAAUA,QAAZ,EAAf,EACGP,IADH,CACQ;AAAA,WAAUS,SAASA,OAAOhB,QAAP,CAAgBe,YAAhB,CAAT,GAAyCd,gCAA8Ba,QAA9B,gBAAnD;AAAA,GADR,EAEGP,IAFH,CAEQ;AAAA,WAAUF,KAAK,IAAL,EAAWW,MAAX,CAAV;AAAA,GAFR,EAGGP,KAHH,CAGS,UAACC,KAAD,EAAW;AAChBC,YAAQC,GAAR,mBAA4BF,MAAMG,OAAlC;AACAR,SAAK,IAAL,EAAW,KAAX;AACD,GANH;AAOD,CATY,CAAb;AAUE;;;;;;;;;;;;;;;;;AAkBF;;;;;;;AAOAX,SAASQ,GAAT,CAAa,IAAIJ,sBAAJ,CAA2B,UAACgB,QAAD,EAAWC,YAAX,EAAyBV,IAAzB,EAAkC;AACxEM,UAAQC,GAAR,CAAY,oCAAZ;AACAnB,SAAOa,OAAP,CAAe,EAAEQ,UAAUA,QAAZ,EAAf,EACGP,IADH,CACQ;AAAA,WAAUS,SAASA,OAAOhB,QAAP,CAAgBe,YAAhB,CAAT,GAAyCd,gCAA8Ba,QAA9B,iBAAnD;AAAA,GADR,EAEGP,IAFH,CAEQ;AAAA,WAAUF,KAAK,IAAL,EAAWW,MAAX,CAAV;AAAA,GAFR,EAGGP,KAHH,CAGS,UAACC,KAAD,EAAW;AAChBC,YAAQC,GAAR,mBAA4BF,MAAMG,OAAlC;AACAR,SAAK,IAAL,EAAW,KAAX;AACD,GANH;AAOD,CATY,CAAb;;AAWA;;;;;;;;;;;AAWAX,SAASQ,GAAT,CAAa,IAAIH,cAAJ,CAAmB,UAACkB,WAAD,EAAcZ,IAAd,EAAuB;AACrDf,KAAG4B,YAAH,CAAgBC,IAAhB,CAAqBF,WAArB,EACCV,IADD,CACM;AAAA,WAASP,SAASoB,KAAT,CAAeA,KAAf,EAAsBH,WAAtB,CAAT;AAAA,GADN,EAECV,IAFD,CAEM;AAAA,WAASF,KAAK,IAAL,EAAWe,KAAX,EAAkB,EAAEC,OAAO,GAAT,EAAlB,CAAT;AAAA,GAFN,EAGCZ,KAHD,CAGO;AAAA,WAAMJ,KAAK,IAAL,EAAW,KAAX,CAAN;AAAA,GAHP;AAID,CALY,CAAb;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAX,SAAS4B,aAAT,CAAuB,UAACd,IAAD,EAAOH,IAAP,EAAgB;AACrCA,OAAK,IAAL,EAAWG,KAAKe,EAAhB;AACD,CAFD;;AAIA7B,SAAS8B,eAAT,CAAyB,UAACD,EAAD,EAAKlB,IAAL,EAAc;AACrCb,OAAKc,OAAL,CAAa,EAAEmB,KAAKF,EAAP,EAAb,EAA0B,UAACG,GAAD,EAAMlB,IAAN,EAAe;AACvC,QAAIkB,GAAJ,EAASrB,KAAKqB,GAAL;AACT,QAAI,CAAClB,IAAL,EAAWH,KAAK,IAAL,EAAW,IAAX;AACXA,SAAK,IAAL,EAAWG,IAAX;AACD,GAJD;AAKD,CAND",
      "file": "auth.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst db = require('./db');\nconst User = require ('./db/users')\nconst Client = require('./db/clients')\nconst passport = require('passport');\nconst { Strategy: LocalStrategy } = require('passport-local');\nconst { BasicStrategy } = require('passport-http');\nconst { Strategy: ClientPasswordStrategy } = require('passport-oauth2-client-password');\nconst { Strategy: BearerStrategy } = require('passport-http-bearer');\nconst validate = require('./validate');\nconst { logAndThrow } = require ('./utils')\n\n/**\n * LocalStrategy\n *\n * This strategy is used to authenticate users based on a username and password.\n * Anytime a request is made to authorize an application, we must ensure that\n * a user is logged in before asking them to approve the request.\n */\npassport.use(new LocalStrategy((username, password, done) => {\n  User.findOne({ username: username })\n    .then(user =>  user ? user.validate(password): logAndThrow(`User ${username} not found`))\n    .then(user => done(null, user))\n    .catch((error) => {\n      console.log(`Login error: ${error.message}`)\n      done(null, false)\n    })\n}))\n\n/**\n * BasicStrategy & ClientPasswordStrategy\n *\n * These strategies are used to authenticate registered OAuth clients.  They are\n * employed to protect the `token` endpoint, which consumers use to obtain\n * access tokens.  The OAuth 2.0 specification suggests that clients use the\n * HTTP Basic scheme to authenticate.  Use of the client password strategy\n * allows clients to send the same credentials in the request body (as opposed\n * to the `Authorization` header).  While this approach is not recommended by\n * the specification, in practice it is quite common.\n */\npassport.use(new BasicStrategy((clientId, clientSecret, done) => {\n  console.log('enter basic strategy....')\n  Client.findOne({ clientId: clientId })\n    .then(client => client ? client.validate(clientSecret) : logAndThrow(`Client with id ${clientId} not found`))\n    .then(client => done(null, client))\n    .catch((error) => {\n      console.log(`Login error: ${error.message}`)\n      done(null, false)\n    })\n}))\n  /*\n  console.log('enter client login....')\n  Client.findOne({ clientId: clientId }, (err, client) => {\n    if (err) { return done(err) }\n    if (!client) {\n      console.log(`Login: clientId ${clientId} does not exist`)\n      return done(null, false)\n    }\n    if (client.clientSecret !== clientSecret) {\n      console.log(`Login: Client secret does not match for client ${clientId}`)\n      return done(null, false)\n    }\n    console.log(`Login successful: client ${clientId}`)\n    return done(null, client)\n  })\n  */\n\n\n/**\n * Client Password strategy\n *\n * The OAuth 2.0 client password authentication strategy authenticates clients\n * using a client ID and client secret. The strategy requires a verify callback,\n * which accepts those credentials and calls done providing a client.\n */\npassport.use(new ClientPasswordStrategy((clientId, clientSecret, done) => {\n  console.log('enter client-password-strategy....');\n  Client.findOne({ clientId: clientId })\n    .then(client => client ? client.validate(clientSecret) : logAndThrow(`Client with id ${clientId} not2 found`))\n    .then(client => done(null, client))\n    .catch((error) => {\n      console.log(`Login error: ${error.message}`)\n      done(null, false)\n    })\n}))\n\n/**\n * BearerStrategy\n *\n * This strategy is used to authenticate either users or clients based on an access token\n * (aka a bearer token).  If a user, they must have previously authorized a client\n * application, which is issued an access token to make requests on behalf of\n * the authorizing user.\n *\n * To keep this example simple, restricted scopes are not implemented, and this is just for\n * illustrative purposes\n */\npassport.use(new BearerStrategy((accessToken, done) => {\n  db.accessTokens.find(accessToken)\n  .then(token => validate.token(token, accessToken))\n  .then(token => done(null, token, { scope: '*' }))\n  .catch(() => done(null, false));\n}));\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\npassport.serializeUser((user, done) => {\n  done(null, user.id);\n});\n\npassport.deserializeUser((id, done) => {\n  User.findOne({ _id: id }, (err, user) => {\n    if (err) done(err)\n    if (!user) done(null, null)\n    done(null, user)\n  })\n})\n\n\n"
      ]
    },
    "mtime": 1517837869000
  },
  "{\"filename\":\"/app/app.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/app.js",
      "filenameRelative": "/app/app.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "app.js",
      "sourceFileName": "app.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "app"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst bodyParser = require('body-parser');\nconst client = require('./client');\nconst cookieParser = require('cookie-parser');\nconst config = require('./config');\nconst db = require('./db');\nconst express = require('express');\nconst expressSession = require('express-session');\nconst fs = require('fs');\nconst oauth2 = require('./oauth2');\nconst passport = require('passport');\nconst path = require('path');\nconst site = require('./site');\nconst token = require('./token');\nconst user = require('./user');\nconst cors = require('cors');\n\nconsole.log('Using MemoryStore for the data store');\nconsole.log('Using MemoryStore for the Session');\nconst MemoryStore = expressSession.MemoryStore;\n\n// Express configuration\nconst app = express();\napp.use(cors());\napp.set('view engine', 'ejs');\napp.use(cookieParser());\n\n// Session Configuration\napp.use(expressSession({\n  saveUninitialized: true,\n  resave: true,\n  secret: config.session.secret,\n  store: new MemoryStore(),\n  key: 'authorization.sid',\n  cookie: { maxAge: config.session.maxAge }\n}));\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Passport configuration\nrequire('./auth');\n\napp.get('/', site.index);\napp.get('/login', site.loginForm);\napp.post('/login', site.login);\napp.get('/logout', site.logout);\napp.get('/account', site.account);\n\napp.get('/dialog/authorize', oauth2.authorization);\napp.post('/dialog/authorize/decision', oauth2.decision);\napp.post('/oauth/token', oauth2.token);\n\napp.get('/api/userinfo', user.info);\napp.get('/api/clientinfo', client.info);\n\n// Mimicking google's token info endpoint from\n// https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\napp.get('/api/tokeninfo', token.info);\n\n// Mimicking google's token revoke endpoint from\n// https://developers.google.com/identity/protocols/OAuth2WebServer\napp.get('/api/revoke', token.revoke);\n\n// static resources for stylesheets, images, javascript files\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Catch all for error messages.  Instead of a stack\n// trace, this will log the json of the error message\n// to the browser and pass along the status with it\napp.use((err, req, res, next) => {\n  if (err) {\n    if (err.status == null) {\n      console.error('Internal unexpected error from:', err.stack);\n      res.status(500);\n      res.json(err);\n    } else {\n      res.status(err.status);\n      res.json(err);\n    }\n  } else {\n    next();\n  }\n});\n\n// From time to time we need to clean up any expired tokens\n// in the database\nsetInterval(() => {\n  db.accessTokens.removeExpired().catch(err => console.error('Error trying to remove expired tokens:', err.stack));\n}, config.db.timeToCheckExpiredTokens * 1000);\n\n// TODO: Change these for your own certificates.  This was generated through the commands:\n// openssl genrsa -out privatekey.pem 2048\n// openssl req -new -key privatekey.pem -out certrequest.csr\n// openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\nconst options = {\n  key: fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem')),\n  cert: fs.readFileSync(path.join(__dirname, 'certs/certificate.pem'))\n};\n\n// Create our HTTPS server listening on port 3000.\nconst port = process.env.PORT || 80;\napp.listen(port);\n// https.createServer(options, app).listen(3000);\nconsole.log('OAuth 2.0 Authorization Server started on port' + port);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "client",
        "cookieParser",
        "config",
        "db",
        "express",
        "expressSession",
        "fs",
        "oauth2",
        "passport",
        "path",
        "site",
        "token",
        "user",
        "cors",
        "console",
        "log",
        "MemoryStore",
        "app",
        "use",
        "set",
        "saveUninitialized",
        "resave",
        "secret",
        "session",
        "store",
        "key",
        "cookie",
        "maxAge",
        "urlencoded",
        "extended",
        "json",
        "initialize",
        "get",
        "index",
        "loginForm",
        "post",
        "login",
        "logout",
        "account",
        "authorization",
        "decision",
        "info",
        "revoke",
        "static",
        "join",
        "__dirname",
        "err",
        "req",
        "res",
        "next",
        "status",
        "error",
        "stack",
        "setInterval",
        "accessTokens",
        "removeExpired",
        "catch",
        "timeToCheckExpiredTokens",
        "options",
        "readFileSync",
        "cert",
        "port",
        "process",
        "env",
        "PORT",
        "listen"
      ],
      "mappings": "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",
      "file": "app.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst bodyParser     = require('body-parser');\nconst client         = require('./client');\nconst cookieParser   = require('cookie-parser');\nconst config         = require('./config');\nconst db             = require('./db');\nconst express        = require('express');\nconst expressSession = require('express-session');\nconst fs             = require('fs');\nconst oauth2         = require('./oauth2');\nconst passport       = require('passport');\nconst path           = require('path');\nconst site           = require('./site');\nconst token          = require('./token');\nconst user           = require('./user');\nconst cors           = require('cors');\n\n\nconsole.log('Using MemoryStore for the data store');\nconsole.log('Using MemoryStore for the Session');\nconst MemoryStore = expressSession.MemoryStore;\n\n// Express configuration\nconst app = express();\napp.use(cors());\napp.set('view engine', 'ejs');\napp.use(cookieParser());\n\n// Session Configuration\napp.use(expressSession({\n  saveUninitialized : true,\n  resave            : true,\n  secret            : config.session.secret,\n  store             : new MemoryStore(),\n  key               : 'authorization.sid',\n  cookie            : { maxAge: config.session.maxAge },\n}));\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Passport configuration\nrequire('./auth');\n\napp.get('/',        site.index);\napp.get('/login',   site.loginForm);\napp.post('/login',  site.login);\napp.get('/logout',  site.logout);\napp.get('/account', site.account);\n\napp.get('/dialog/authorize',           oauth2.authorization);\napp.post('/dialog/authorize/decision', oauth2.decision);\napp.post('/oauth/token',               oauth2.token);\n\napp.get('/api/userinfo',   user.info);\napp.get('/api/clientinfo', client.info);\n\n// Mimicking google's token info endpoint from\n// https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\napp.get('/api/tokeninfo', token.info);\n\n// Mimicking google's token revoke endpoint from\n// https://developers.google.com/identity/protocols/OAuth2WebServer\napp.get('/api/revoke', token.revoke);\n\n// static resources for stylesheets, images, javascript files\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Catch all for error messages.  Instead of a stack\n// trace, this will log the json of the error message\n// to the browser and pass along the status with it\napp.use((err, req, res, next) => {\n  if (err) {\n    if (err.status == null) {\n      console.error('Internal unexpected error from:', err.stack);\n      res.status(500);\n      res.json(err);\n    } else {\n      res.status(err.status);\n      res.json(err);\n    }\n  } else {\n    next();\n  }\n});\n\n// From time to time we need to clean up any expired tokens\n// in the database\nsetInterval(() => {\n  db.accessTokens.removeExpired()\n  .catch(err => console.error('Error trying to remove expired tokens:', err.stack));\n}, config.db.timeToCheckExpiredTokens * 1000);\n\n// TODO: Change these for your own certificates.  This was generated through the commands:\n// openssl genrsa -out privatekey.pem 2048\n// openssl req -new -key privatekey.pem -out certrequest.csr\n// openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\nconst options = {\n  key  : fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem')),\n  cert : fs.readFileSync(path.join(__dirname, 'certs/certificate.pem')),\n};\n\n\n// Create our HTTPS server listening on port 3000.\nconst port = process.env.PORT || 80\napp.listen(port)\n// https.createServer(options, app).listen(3000);\nconsole.log('OAuth 2.0 Authorization Server started on port' + port);\n"
      ]
    },
    "mtime": 1518817967000
  },
  "{\"filename\":\"/app/client.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/client.js",
      "filenameRelative": "/app/client.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "client.js",
      "sourceFileName": "client.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "client"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst passport = require('passport');\n\n/*\n * Simple informational end point, if you want to get information\n * about a particular client.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n */\nexports.info = [passport.authenticate('bearer', { session: false }), (req, res) => {\n  // req.authInfo is set using the `info` argument supplied by\n  // `BearerStrategy`.  It is typically used to indicate scope of the token,\n  // and used in access control checks.  For illustrative purposes, this\n  // example simply returns the scope in the response.\n  res.json({ client_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC5qcyJdLCJuYW1lcyI6WyJwYXNzcG9ydCIsInJlcXVpcmUiLCJleHBvcnRzIiwiaW5mbyIsImF1dGhlbnRpY2F0ZSIsInNlc3Npb24iLCJyZXEiLCJyZXMiLCJqc29uIiwiY2xpZW50X2lkIiwidXNlciIsImlkIiwibmFtZSIsInNjb3BlIiwiYXV0aEluZm8iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFdBQVdDLFFBQVEsVUFBUixDQUFqQjs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFjQUMsUUFBUUMsSUFBUixHQUFlLENBQ2JILFNBQVNJLFlBQVQsQ0FBc0IsUUFBdEIsRUFBZ0MsRUFBRUMsU0FBUyxLQUFYLEVBQWhDLENBRGEsRUFDd0MsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsTUFBSUMsSUFBSixDQUFTLEVBQUVDLFdBQVdILElBQUlJLElBQUosQ0FBU0MsRUFBdEIsRUFBMEJDLE1BQU1OLElBQUlJLElBQUosQ0FBU0UsSUFBekMsRUFBK0NDLE9BQU9QLElBQUlRLFFBQUosQ0FBYUQsS0FBbkUsRUFBVDtBQUNELENBUFksQ0FBZiIsImZpbGUiOiJjbGllbnQuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgcGFzc3BvcnQgPSByZXF1aXJlKCdwYXNzcG9ydCcpO1xuXG4vKlxuICogU2ltcGxlIGluZm9ybWF0aW9uYWwgZW5kIHBvaW50LCBpZiB5b3Ugd2FudCB0byBnZXQgaW5mb3JtYXRpb25cbiAqIGFib3V0IGEgcGFydGljdWxhciBjbGllbnQuICBZb3Ugd291bGQgY2FsbCB0aGlzIHdpdGggYW4gYWNjZXNzIHRva2VuXG4gKiBpbiB0aGUgYm9keSBvZiB0aGUgbWVzc2FnZSBhY2NvcmRpbmcgdG8gT0F1dGggMi4wIHN0YW5kYXJkc1xuICogaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc1MCNzZWN0aW9uLTIuMVxuICpcbiAqIEV4YW1wbGUgd291bGQgYmUgdXNpbmcgdGhlIGVuZHBvaW50IG9mXG4gKiBodHRwczovL2xvY2FsaG9zdDozMDAwL2FwaS91c2VyaW5mb1xuICpcbiAqIFdpdGggYSBHRVQgdXNpbmcgYW4gQXV0aG9yaXphdGlvbiBCZWFyZXIgdG9rZW4gc2ltaWxhciB0b1xuICogR0VUIC9hcGkvdXNlcmluZm9cbiAqIEhvc3Q6IGh0dHBzOi8vbG9jYWxob3N0OjMwMDBcbiAqIEF1dGhvcml6YXRpb246IEJlYXJlciBzb21lQWNjZXNzVG9rZW5IZXJlXG4gKi9cbmV4cG9ydHMuaW5mbyA9IFtcbiAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdiZWFyZXInLCB7IHNlc3Npb246IGZhbHNlIH0pLCAocmVxLCByZXMpID0+IHtcbiAgICAvLyByZXEuYXV0aEluZm8gaXMgc2V0IHVzaW5nIHRoZSBgaW5mb2AgYXJndW1lbnQgc3VwcGxpZWQgYnlcbiAgICAvLyBgQmVhcmVyU3RyYXRlZ3lgLiAgSXQgaXMgdHlwaWNhbGx5IHVzZWQgdG8gaW5kaWNhdGUgc2NvcGUgb2YgdGhlIHRva2VuLFxuICAgIC8vIGFuZCB1c2VkIGluIGFjY2VzcyBjb250cm9sIGNoZWNrcy4gIEZvciBpbGx1c3RyYXRpdmUgcHVycG9zZXMsIHRoaXNcbiAgICAvLyBleGFtcGxlIHNpbXBseSByZXR1cm5zIHRoZSBzY29wZSBpbiB0aGUgcmVzcG9uc2UuXG4gICAgcmVzLmpzb24oeyBjbGllbnRfaWQ6IHJlcS51c2VyLmlkLCBuYW1lOiByZXEudXNlci5uYW1lLCBzY29wZTogcmVxLmF1dGhJbmZvLnNjb3BlIH0pO1xuICB9LFxuXTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "passport",
        "require",
        "exports",
        "info",
        "authenticate",
        "session",
        "req",
        "res",
        "json",
        "client_id",
        "user",
        "id",
        "name",
        "scope",
        "authInfo"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;;;;;;;;;;;;;;AAcAC,QAAQC,IAAR,GAAe,CACbH,SAASI,YAAT,CAAsB,QAAtB,EAAgC,EAAEC,SAAS,KAAX,EAAhC,CADa,EACwC,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjE;AACA;AACA;AACA;AACAA,MAAIC,IAAJ,CAAS,EAAEC,WAAWH,IAAII,IAAJ,CAASC,EAAtB,EAA0BC,MAAMN,IAAII,IAAJ,CAASE,IAAzC,EAA+CC,OAAOP,IAAIQ,QAAJ,CAAaD,KAAnE,EAAT;AACD,CAPY,CAAf",
      "file": "client.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst passport = require('passport');\n\n/*\n * Simple informational end point, if you want to get information\n * about a particular client.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n */\nexports.info = [\n  passport.authenticate('bearer', { session: false }), (req, res) => {\n    // req.authInfo is set using the `info` argument supplied by\n    // `BearerStrategy`.  It is typically used to indicate scope of the token,\n    // and used in access control checks.  For illustrative purposes, this\n    // example simply returns the scope in the response.\n    res.json({ client_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n  },\n];\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/config/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/config\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/config/index.js",
      "filenameRelative": "/app/config/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/config",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/config",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\n//\n// The configuration options of the server\n//\n\n/**\n * Configuration of access tokens.\n *\n * expiresIn               - The time in minutes before the access token expires. Default is 60\n *                           minutes\n * calculateExpirationDate - A simple function to calculate the absolute time that the token is\n *                           going to expire in.\n */\n\nvar _this = this;\n\nexports.token = {\n  expiresIn: 60 * 60,\n  calculateExpirationDate: () => new Date(Date.now() + _this.token.expiresIn * 1000)\n};\n\n/**\n * Configuration of code token.\n * expiresIn - The time in minutes before the code token expires.  Default is 5 minutes.\n */\nexports.codeToken = {\n  expiresIn: 5 * 60\n};\n\n/**\n * Configuration of refresh token.\n * expiresIn - The time in minutes before the code token expires.  Default is 100 years.  Most if\n *             all refresh tokens are expected to not expire.  However, I give it a very long shelf\n *             life instead.\n */\nexports.refreshToken = {\n  expiresIn: 52560000\n};\n\n/**\n * Database configuration for access and refresh tokens.\n *\n * timeToCheckExpiredTokens - The time in seconds to check the database for expired access tokens.\n *                            For example, if it's set to 3600, then that's one hour to check for\n *                            expired access tokens.\n */\nexports.db = {\n  timeToCheckExpiredTokens: 3600\n};\n\n/**\n * Session configuration\n *\n * maxAge - The maximum age in milliseconds of the session.  Use null for web browser session only.\n *          Use something else large like 3600000 * 24 * 7 * 52 for a year.\n * secret - The session secret that you should change to what you want\n */\nexports.session = {\n  maxAge: 3600000 * 24 * 7 * 52,\n  secret: 'A Secret That Should Be Changed' // TODO: You need to change this secret to something that you choose for your secret\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJ0b2tlbiIsImV4cGlyZXNJbiIsImNhbGN1bGF0ZUV4cGlyYXRpb25EYXRlIiwiRGF0ZSIsIm5vdyIsImNvZGVUb2tlbiIsInJlZnJlc2hUb2tlbiIsImRiIiwidGltZVRvQ2hlY2tFeHBpcmVkVG9rZW5zIiwic2Vzc2lvbiIsIm1heEFnZSIsInNlY3JldCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7OztBQVFBQSxRQUFRQyxLQUFSLEdBQWdCO0FBQ2RDLGFBQTBCLEtBQUssRUFEakI7QUFFZEMsMkJBQTBCLE1BQU8sSUFBSUMsSUFBSixDQUFTQSxLQUFLQyxHQUFMLEtBQWMsTUFBS0osS0FBTCxDQUFXQyxTQUFYLEdBQXVCLElBQTlDO0FBRm5CLENBQWhCOztBQUtBOzs7O0FBSUFGLFFBQVFNLFNBQVIsR0FBb0I7QUFDbEJKLGFBQVksSUFBSTtBQURFLENBQXBCOztBQUlBOzs7Ozs7QUFNQUYsUUFBUU8sWUFBUixHQUF1QjtBQUNyQkwsYUFBWTtBQURTLENBQXZCOztBQUlBOzs7Ozs7O0FBT0FGLFFBQVFRLEVBQVIsR0FBYTtBQUNYQyw0QkFBMkI7QUFEaEIsQ0FBYjs7QUFJQTs7Ozs7OztBQU9BVCxRQUFRVSxPQUFSLEdBQWtCO0FBQ2hCQyxVQUFTLFVBQVUsRUFBVixHQUFlLENBQWYsR0FBbUIsRUFEWjtBQUVoQkMsVUFBUyxpQ0FGTyxDQUU0QjtBQUY1QixDQUFsQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2NvbmZpZyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy9cbi8vIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgb2YgdGhlIHNlcnZlclxuLy9cblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIG9mIGFjY2VzcyB0b2tlbnMuXG4gKlxuICogZXhwaXJlc0luICAgICAgICAgICAgICAgLSBUaGUgdGltZSBpbiBtaW51dGVzIGJlZm9yZSB0aGUgYWNjZXNzIHRva2VuIGV4cGlyZXMuIERlZmF1bHQgaXMgNjBcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgbWludXRlc1xuICogY2FsY3VsYXRlRXhwaXJhdGlvbkRhdGUgLSBBIHNpbXBsZSBmdW5jdGlvbiB0byBjYWxjdWxhdGUgdGhlIGFic29sdXRlIHRpbWUgdGhhdCB0aGUgdG9rZW4gaXNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgZ29pbmcgdG8gZXhwaXJlIGluLlxuICovXG5leHBvcnRzLnRva2VuID0ge1xuICBleHBpcmVzSW4gICAgICAgICAgICAgICA6IDYwICogNjAsXG4gIGNhbGN1bGF0ZUV4cGlyYXRpb25EYXRlIDogKCkgPT4gIG5ldyBEYXRlKERhdGUubm93KCkgKyAodGhpcy50b2tlbi5leHBpcmVzSW4gKiAxMDAwKSlcbn07XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBvZiBjb2RlIHRva2VuLlxuICogZXhwaXJlc0luIC0gVGhlIHRpbWUgaW4gbWludXRlcyBiZWZvcmUgdGhlIGNvZGUgdG9rZW4gZXhwaXJlcy4gIERlZmF1bHQgaXMgNSBtaW51dGVzLlxuICovXG5leHBvcnRzLmNvZGVUb2tlbiA9IHtcbiAgZXhwaXJlc0luIDogNSAqIDYwLFxufTtcblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIG9mIHJlZnJlc2ggdG9rZW4uXG4gKiBleHBpcmVzSW4gLSBUaGUgdGltZSBpbiBtaW51dGVzIGJlZm9yZSB0aGUgY29kZSB0b2tlbiBleHBpcmVzLiAgRGVmYXVsdCBpcyAxMDAgeWVhcnMuICBNb3N0IGlmXG4gKiAgICAgICAgICAgICBhbGwgcmVmcmVzaCB0b2tlbnMgYXJlIGV4cGVjdGVkIHRvIG5vdCBleHBpcmUuICBIb3dldmVyLCBJIGdpdmUgaXQgYSB2ZXJ5IGxvbmcgc2hlbGZcbiAqICAgICAgICAgICAgIGxpZmUgaW5zdGVhZC5cbiAqL1xuZXhwb3J0cy5yZWZyZXNoVG9rZW4gPSB7XG4gIGV4cGlyZXNJbiA6IDUyNTYwMDAwLFxufTtcblxuLyoqXG4gKiBEYXRhYmFzZSBjb25maWd1cmF0aW9uIGZvciBhY2Nlc3MgYW5kIHJlZnJlc2ggdG9rZW5zLlxuICpcbiAqIHRpbWVUb0NoZWNrRXhwaXJlZFRva2VucyAtIFRoZSB0aW1lIGluIHNlY29uZHMgdG8gY2hlY2sgdGhlIGRhdGFiYXNlIGZvciBleHBpcmVkIGFjY2VzcyB0b2tlbnMuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb3IgZXhhbXBsZSwgaWYgaXQncyBzZXQgdG8gMzYwMCwgdGhlbiB0aGF0J3Mgb25lIGhvdXIgdG8gY2hlY2sgZm9yXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBpcmVkIGFjY2VzcyB0b2tlbnMuXG4gKi9cbmV4cG9ydHMuZGIgPSB7XG4gIHRpbWVUb0NoZWNrRXhwaXJlZFRva2VucyA6IDM2MDAsXG59O1xuXG4vKipcbiAqIFNlc3Npb24gY29uZmlndXJhdGlvblxuICpcbiAqIG1heEFnZSAtIFRoZSBtYXhpbXVtIGFnZSBpbiBtaWxsaXNlY29uZHMgb2YgdGhlIHNlc3Npb24uICBVc2UgbnVsbCBmb3Igd2ViIGJyb3dzZXIgc2Vzc2lvbiBvbmx5LlxuICogICAgICAgICAgVXNlIHNvbWV0aGluZyBlbHNlIGxhcmdlIGxpa2UgMzYwMDAwMCAqIDI0ICogNyAqIDUyIGZvciBhIHllYXIuXG4gKiBzZWNyZXQgLSBUaGUgc2Vzc2lvbiBzZWNyZXQgdGhhdCB5b3Ugc2hvdWxkIGNoYW5nZSB0byB3aGF0IHlvdSB3YW50XG4gKi9cbmV4cG9ydHMuc2Vzc2lvbiA9IHtcbiAgbWF4QWdlIDogMzYwMDAwMCAqIDI0ICogNyAqIDUyLFxuICBzZWNyZXQgOiAnQSBTZWNyZXQgVGhhdCBTaG91bGQgQmUgQ2hhbmdlZCcsIC8vIFRPRE86IFlvdSBuZWVkIHRvIGNoYW5nZSB0aGlzIHNlY3JldCB0byBzb21ldGhpbmcgdGhhdCB5b3UgY2hvb3NlIGZvciB5b3VyIHNlY3JldFxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "exports",
        "token",
        "expiresIn",
        "calculateExpirationDate",
        "Date",
        "now",
        "codeToken",
        "refreshToken",
        "db",
        "timeToCheckExpiredTokens",
        "session",
        "maxAge",
        "secret"
      ],
      "mappings": "AAAA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AAQAA,QAAQC,KAAR,GAAgB;AACdC,aAA0B,KAAK,EADjB;AAEdC,2BAA0B,MAAO,IAAIC,IAAJ,CAASA,KAAKC,GAAL,KAAc,MAAKJ,KAAL,CAAWC,SAAX,GAAuB,IAA9C;AAFnB,CAAhB;;AAKA;;;;AAIAF,QAAQM,SAAR,GAAoB;AAClBJ,aAAY,IAAI;AADE,CAApB;;AAIA;;;;;;AAMAF,QAAQO,YAAR,GAAuB;AACrBL,aAAY;AADS,CAAvB;;AAIA;;;;;;;AAOAF,QAAQQ,EAAR,GAAa;AACXC,4BAA2B;AADhB,CAAb;;AAIA;;;;;;;AAOAT,QAAQU,OAAR,GAAkB;AAChBC,UAAS,UAAU,EAAV,GAAe,CAAf,GAAmB,EADZ;AAEhBC,UAAS,iCAFO,CAE4B;AAF5B,CAAlB",
      "file": "index.js",
      "sourceRoot": "/app/config",
      "sourcesContent": [
        "'use strict';\n\n//\n// The configuration options of the server\n//\n\n/**\n * Configuration of access tokens.\n *\n * expiresIn               - The time in minutes before the access token expires. Default is 60\n *                           minutes\n * calculateExpirationDate - A simple function to calculate the absolute time that the token is\n *                           going to expire in.\n */\nexports.token = {\n  expiresIn               : 60 * 60,\n  calculateExpirationDate : () =>  new Date(Date.now() + (this.token.expiresIn * 1000))\n};\n\n/**\n * Configuration of code token.\n * expiresIn - The time in minutes before the code token expires.  Default is 5 minutes.\n */\nexports.codeToken = {\n  expiresIn : 5 * 60,\n};\n\n/**\n * Configuration of refresh token.\n * expiresIn - The time in minutes before the code token expires.  Default is 100 years.  Most if\n *             all refresh tokens are expected to not expire.  However, I give it a very long shelf\n *             life instead.\n */\nexports.refreshToken = {\n  expiresIn : 52560000,\n};\n\n/**\n * Database configuration for access and refresh tokens.\n *\n * timeToCheckExpiredTokens - The time in seconds to check the database for expired access tokens.\n *                            For example, if it's set to 3600, then that's one hour to check for\n *                            expired access tokens.\n */\nexports.db = {\n  timeToCheckExpiredTokens : 3600,\n};\n\n/**\n * Session configuration\n *\n * maxAge - The maximum age in milliseconds of the session.  Use null for web browser session only.\n *          Use something else large like 3600000 * 24 * 7 * 52 for a year.\n * secret - The session secret that you should change to what you want\n */\nexports.session = {\n  maxAge : 3600000 * 24 * 7 * 52,\n  secret : 'A Secret That Should Be Changed', // TODO: You need to change this secret to something that you choose for your secret\n};\n"
      ]
    },
    "mtime": 1517913692000
  },
  "{\"filename\":\"/app/db/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/index.js",
      "filenameRelative": "/app/db/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst mongoose = require('mongoose');\nconst databaseUrl = process.env.MONGO_URL || 'mongodb://mongodb/arasaac';\nmongoose.connect(databaseUrl);\nmongoose.connection.on('connected', () => console.log('Connected to database: ' + databaseUrl));\nmongoose.connection.on('error', err => console.log('Database connection error: ' + err));\nmongoose.connection.on('disconnected', () => console.log('Disconnected from database'));\n\nprocess.on('SIGINT', () => mongoose.connection.close(() => {\n  console.log('Finished App and disconnected from database');\n  process.exit(0);\n}));\n\nexports.accessTokens = require('./accesstokens');\nexports.authorizationCodes = require('./authorizationcodes');\nexports.clients = require('./clients');\nexports.refreshTokens = require('./refreshtokens');\nexports.users = require('./users');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImRhdGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk1PTkdPX1VSTCIsImNvbm5lY3QiLCJjb25uZWN0aW9uIiwib24iLCJjb25zb2xlIiwibG9nIiwiZXJyIiwiY2xvc2UiLCJleGl0IiwiZXhwb3J0cyIsImFjY2Vzc1Rva2VucyIsImF1dGhvcml6YXRpb25Db2RlcyIsImNsaWVudHMiLCJyZWZyZXNoVG9rZW5zIiwidXNlcnMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFdBQVdDLFFBQVEsVUFBUixDQUFqQjtBQUNBLE1BQU1DLGNBQWNDLFFBQVFDLEdBQVIsQ0FBWUMsU0FBWixJQUF5QiwyQkFBN0M7QUFDQUwsU0FBU00sT0FBVCxDQUFpQkosV0FBakI7QUFDQUYsU0FBU08sVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsV0FBdkIsRUFBb0MsTUFBTUMsUUFBUUMsR0FBUixDQUFZLDRCQUE0QlIsV0FBeEMsQ0FBMUM7QUFDQUYsU0FBU08sVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsT0FBdkIsRUFBZ0NHLEdBQUQsSUFBU0YsUUFBUUMsR0FBUixDQUFZLGdDQUFnQ0MsR0FBNUMsQ0FBeEM7QUFDQVgsU0FBU08sVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsY0FBdkIsRUFBdUMsTUFBTUMsUUFBUUMsR0FBUixDQUFZLDRCQUFaLENBQTdDOztBQUVBUCxRQUFRSyxFQUFSLENBQVcsUUFBWCxFQUFxQixNQUFNUixTQUFTTyxVQUFULENBQW9CSyxLQUFwQixDQUEyQixNQUFNO0FBQzFESCxVQUFRQyxHQUFSLENBQVksNkNBQVo7QUFDQVAsVUFBUVUsSUFBUixDQUFhLENBQWI7QUFDRCxDQUgwQixDQUEzQjs7QUFLQUMsUUFBUUMsWUFBUixHQUE2QmQsUUFBUSxnQkFBUixDQUE3QjtBQUNBYSxRQUFRRSxrQkFBUixHQUE2QmYsUUFBUSxzQkFBUixDQUE3QjtBQUNBYSxRQUFRRyxPQUFSLEdBQTZCaEIsUUFBUSxXQUFSLENBQTdCO0FBQ0FhLFFBQVFJLGFBQVIsR0FBNkJqQixRQUFRLGlCQUFSLENBQTdCO0FBQ0FhLFFBQVFLLEtBQVIsR0FBNkJsQixRQUFRLFNBQVIsQ0FBN0IiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9kYiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuY29uc3QgZGF0YWJhc2VVcmwgPSBwcm9jZXNzLmVudi5NT05HT19VUkwgfHwgJ21vbmdvZGI6Ly9tb25nb2RiL2FyYXNhYWMnO1xubW9uZ29vc2UuY29ubmVjdChkYXRhYmFzZVVybCk7XG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdjb25uZWN0ZWQnLCAoKSA9PiBjb25zb2xlLmxvZygnQ29ubmVjdGVkIHRvIGRhdGFiYXNlOiAnICsgZGF0YWJhc2VVcmwpKVxubW9uZ29vc2UuY29ubmVjdGlvbi5vbignZXJyb3InLChlcnIpID0+IGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yOiAnICsgZXJyKSlcbm1vbmdvb3NlLmNvbm5lY3Rpb24ub24oJ2Rpc2Nvbm5lY3RlZCcsICgpID0+IGNvbnNvbGUubG9nKCdEaXNjb25uZWN0ZWQgZnJvbSBkYXRhYmFzZScpKVxuXG5wcm9jZXNzLm9uKCdTSUdJTlQnLCAoKSA9PiBtb25nb29zZS5jb25uZWN0aW9uLmNsb3NlKCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdGaW5pc2hlZCBBcHAgYW5kIGRpc2Nvbm5lY3RlZCBmcm9tIGRhdGFiYXNlJylcbiAgcHJvY2Vzcy5leGl0KDApXG59KSlcblxuZXhwb3J0cy5hY2Nlc3NUb2tlbnMgICAgICAgPSByZXF1aXJlKCcuL2FjY2Vzc3Rva2VucycpO1xuZXhwb3J0cy5hdXRob3JpemF0aW9uQ29kZXMgPSByZXF1aXJlKCcuL2F1dGhvcml6YXRpb25jb2RlcycpO1xuZXhwb3J0cy5jbGllbnRzICAgICAgICAgICAgPSByZXF1aXJlKCcuL2NsaWVudHMnKTtcbmV4cG9ydHMucmVmcmVzaFRva2VucyAgICAgID0gcmVxdWlyZSgnLi9yZWZyZXNodG9rZW5zJyk7XG5leHBvcnRzLnVzZXJzICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vdXNlcnMnKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "require",
        "databaseUrl",
        "process",
        "env",
        "MONGO_URL",
        "connect",
        "connection",
        "on",
        "console",
        "log",
        "err",
        "close",
        "exit",
        "exports",
        "accessTokens",
        "authorizationCodes",
        "clients",
        "refreshTokens",
        "users"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,MAAMC,cAAcC,QAAQC,GAAR,CAAYC,SAAZ,IAAyB,2BAA7C;AACAL,SAASM,OAAT,CAAiBJ,WAAjB;AACAF,SAASO,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,MAAMC,QAAQC,GAAR,CAAY,4BAA4BR,WAAxC,CAA1C;AACAF,SAASO,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgCG,GAAD,IAASF,QAAQC,GAAR,CAAY,gCAAgCC,GAA5C,CAAxC;AACAX,SAASO,UAAT,CAAoBC,EAApB,CAAuB,cAAvB,EAAuC,MAAMC,QAAQC,GAAR,CAAY,4BAAZ,CAA7C;;AAEAP,QAAQK,EAAR,CAAW,QAAX,EAAqB,MAAMR,SAASO,UAAT,CAAoBK,KAApB,CAA2B,MAAM;AAC1DH,UAAQC,GAAR,CAAY,6CAAZ;AACAP,UAAQU,IAAR,CAAa,CAAb;AACD,CAH0B,CAA3B;;AAKAC,QAAQC,YAAR,GAA6Bd,QAAQ,gBAAR,CAA7B;AACAa,QAAQE,kBAAR,GAA6Bf,QAAQ,sBAAR,CAA7B;AACAa,QAAQG,OAAR,GAA6BhB,QAAQ,WAAR,CAA7B;AACAa,QAAQI,aAAR,GAA6BjB,QAAQ,iBAAR,CAA7B;AACAa,QAAQK,KAAR,GAA6BlB,QAAQ,SAAR,CAA7B",
      "file": "index.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst mongoose = require('mongoose');\nconst databaseUrl = process.env.MONGO_URL || 'mongodb://mongodb/arasaac';\nmongoose.connect(databaseUrl);\nmongoose.connection.on('connected', () => console.log('Connected to database: ' + databaseUrl))\nmongoose.connection.on('error',(err) => console.log('Database connection error: ' + err))\nmongoose.connection.on('disconnected', () => console.log('Disconnected from database'))\n\nprocess.on('SIGINT', () => mongoose.connection.close( () => {\n  console.log('Finished App and disconnected from database')\n  process.exit(0)\n}))\n\nexports.accessTokens       = require('./accesstokens');\nexports.authorizationCodes = require('./authorizationcodes');\nexports.clients            = require('./clients');\nexports.refreshTokens      = require('./refreshtokens');\nexports.users              = require('./users');\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/db/accesstokens.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/accesstokens.js",
      "filenameRelative": "/app/db/accesstokens.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "accesstokens.js",
      "sourceFileName": "accesstokens.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "accesstokens"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The access tokens.\n// You will use these to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the access tokens\n */\nlet tokens = Object.create(null);\n\n/**\n * Returns an access token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the access token to find.\n * @returns {Promise} resolved with the token if found, otherwise resolved with undefined\n */\nexports.find = token => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a access token, expiration date, user id, client id, and scope. Note: The actual full\n * access token is never saved.  Instead just the ID of the token is saved.  In case of a database\n * breach this prevents anyone from stealing the live tokens.\n * @param   {Object}  token          - The access token (required)\n * @param   {Date}    expirationDate - The expiration of the access token (required)\n * @param   {String}  userID         - The user ID (required)\n * @param   {String}  clientID       - The client ID (required)\n * @param   {String}  scope          - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (token, expirationDate, userID, clientID, scope) => {\n  const id = jwt.decode(token).jti;\n  tokens[id] = { userID, expirationDate, clientID, scope };\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes/Revokes an access token by getting the ID and removing it from the storage.\n * @param   {String}  token - The token to decode to get the id of the access token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = token => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes expired access tokens. It does this by looping through them all and then removing the\n * expired ones it finds.\n * @returns {Promise} resolved with an associative of tokens that were expired\n */\nexports.removeExpired = () => {\n  const keys = Object.keys(tokens);\n  const expired = keys.reduce((accumulator, key) => {\n    if (new Date() > tokens[key].expirationDate) {\n      const expiredToken = tokens[key];\n      delete tokens[key];\n      accumulator[key] = expiredToken; // eslint-disable-line no-param-reassign\n    }\n    return accumulator;\n  }, Object.create(null));\n  return Promise.resolve(expired);\n};\n\n/**\n * Removes all access tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = () => {\n  const deletedTokens = tokens;\n  tokens = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY2Vzc3Rva2Vucy5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwidG9rZW5zIiwiT2JqZWN0IiwiY3JlYXRlIiwiZXhwb3J0cyIsImZpbmQiLCJ0b2tlbiIsImlkIiwiZGVjb2RlIiwianRpIiwiUHJvbWlzZSIsInJlc29sdmUiLCJlcnJvciIsInVuZGVmaW5lZCIsInNhdmUiLCJleHBpcmF0aW9uRGF0ZSIsInVzZXJJRCIsImNsaWVudElEIiwic2NvcGUiLCJkZWxldGUiLCJkZWxldGVkVG9rZW4iLCJyZW1vdmVFeHBpcmVkIiwia2V5cyIsImV4cGlyZWQiLCJyZWR1Y2UiLCJhY2N1bXVsYXRvciIsImtleSIsIkRhdGUiLCJleHBpcmVkVG9rZW4iLCJyZW1vdmVBbGwiLCJkZWxldGVkVG9rZW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxNQUFNQyxRQUFRLGNBQVIsQ0FBWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSUMsU0FBU0MsT0FBT0MsTUFBUCxDQUFjLElBQWQsQ0FBYjs7QUFFQTs7Ozs7QUFLQUMsUUFBUUMsSUFBUixHQUFnQkMsS0FBRCxJQUFXO0FBQ3hCLE1BQUk7QUFDRixVQUFNQyxLQUFLUixJQUFJUyxNQUFKLENBQVdGLEtBQVgsRUFBa0JHLEdBQTdCO0FBQ0EsV0FBT0MsUUFBUUMsT0FBUixDQUFnQlYsT0FBT00sRUFBUCxDQUFoQixDQUFQO0FBQ0QsR0FIRCxDQUdFLE9BQU9LLEtBQVAsRUFBYztBQUNkLFdBQU9GLFFBQVFDLE9BQVIsQ0FBZ0JFLFNBQWhCLENBQVA7QUFDRDtBQUNGLENBUEQ7O0FBU0E7Ozs7Ozs7Ozs7O0FBV0FULFFBQVFVLElBQVIsR0FBZSxDQUFDUixLQUFELEVBQVFTLGNBQVIsRUFBd0JDLE1BQXhCLEVBQWdDQyxRQUFoQyxFQUEwQ0MsS0FBMUMsS0FBb0Q7QUFDakUsUUFBTVgsS0FBS1IsSUFBSVMsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxHQUE3QjtBQUNBUixTQUFPTSxFQUFQLElBQWEsRUFBRVMsTUFBRixFQUFVRCxjQUFWLEVBQTBCRSxRQUExQixFQUFvQ0MsS0FBcEMsRUFBYjtBQUNBLFNBQU9SLFFBQVFDLE9BQVIsQ0FBZ0JWLE9BQU9NLEVBQVAsQ0FBaEIsQ0FBUDtBQUNELENBSkQ7O0FBTUE7Ozs7O0FBS0FILFFBQVFlLE1BQVIsR0FBa0JiLEtBQUQsSUFBVztBQUMxQixNQUFJO0FBQ0YsVUFBTUMsS0FBS1IsSUFBSVMsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxHQUE3QjtBQUNBLFVBQU1XLGVBQWVuQixPQUFPTSxFQUFQLENBQXJCO0FBQ0EsV0FBT04sT0FBT00sRUFBUCxDQUFQO0FBQ0EsV0FBT0csUUFBUUMsT0FBUixDQUFnQlMsWUFBaEIsQ0FBUDtBQUNELEdBTEQsQ0FLRSxPQUFPUixLQUFQLEVBQWM7QUFDZCxXQUFPRixRQUFRQyxPQUFSLENBQWdCRSxTQUFoQixDQUFQO0FBQ0Q7QUFDRixDQVREOztBQVdBOzs7OztBQUtBVCxRQUFRaUIsYUFBUixHQUF3QixNQUFNO0FBQzVCLFFBQU1DLE9BQVVwQixPQUFPb0IsSUFBUCxDQUFZckIsTUFBWixDQUFoQjtBQUNBLFFBQU1zQixVQUFVRCxLQUFLRSxNQUFMLENBQVksQ0FBQ0MsV0FBRCxFQUFjQyxHQUFkLEtBQXNCO0FBQ2hELFFBQUksSUFBSUMsSUFBSixLQUFhMUIsT0FBT3lCLEdBQVAsRUFBWVgsY0FBN0IsRUFBNkM7QUFDM0MsWUFBTWEsZUFBZTNCLE9BQU95QixHQUFQLENBQXJCO0FBQ0EsYUFBT3pCLE9BQU95QixHQUFQLENBQVA7QUFDQUQsa0JBQVlDLEdBQVosSUFBbUJFLFlBQW5CLENBSDJDLENBR1Y7QUFDbEM7QUFDRCxXQUFPSCxXQUFQO0FBQ0QsR0FQZSxFQU9idkIsT0FBT0MsTUFBUCxDQUFjLElBQWQsQ0FQYSxDQUFoQjtBQVFBLFNBQU9PLFFBQVFDLE9BQVIsQ0FBZ0JZLE9BQWhCLENBQVA7QUFDRCxDQVhEOztBQWFBOzs7O0FBSUFuQixRQUFReUIsU0FBUixHQUFvQixNQUFNO0FBQ3hCLFFBQU1DLGdCQUFnQjdCLE1BQXRCO0FBQ0FBLFdBQXNCQyxPQUFPQyxNQUFQLENBQWMsSUFBZCxDQUF0QjtBQUNBLFNBQU9PLFFBQVFDLE9BQVIsQ0FBZ0JtQixhQUFoQixDQUFQO0FBQ0QsQ0FKRCIsImZpbGUiOiJhY2Nlc3N0b2tlbnMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9kYiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbi8vIFRoZSBhY2Nlc3MgdG9rZW5zLlxuLy8gWW91IHdpbGwgdXNlIHRoZXNlIHRvIGFjY2VzcyB5b3VyIGVuZCBwb2ludCBkYXRhIHRocm91Z2ggdGhlIG1lYW5zIG91dGxpbmVkXG4vLyBpbiB0aGUgUkZDIFRoZSBPQXV0aCAyLjAgQXV0aG9yaXphdGlvbiBGcmFtZXdvcms6IEJlYXJlciBUb2tlbiBVc2FnZVxuLy8gKGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NTApXG5cbi8qKlxuICogVG9rZW5zIGluLW1lbW9yeSBkYXRhIHN0cnVjdHVyZSB3aGljaCBzdG9yZXMgYWxsIG9mIHRoZSBhY2Nlc3MgdG9rZW5zXG4gKi9cbmxldCB0b2tlbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4vKipcbiAqIFJldHVybnMgYW4gYWNjZXNzIHRva2VuIGlmIGl0IGZpbmRzIG9uZSwgb3RoZXJ3aXNlIHJldHVybnMgbnVsbCBpZiBvbmUgaXMgbm90IGZvdW5kLlxuICogQHBhcmFtICAge1N0cmluZ30gIHRva2VuIC0gVGhlIHRva2VuIHRvIGRlY29kZSB0byBnZXQgdGhlIGlkIG9mIHRoZSBhY2Nlc3MgdG9rZW4gdG8gZmluZC5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIHRoZSB0b2tlbiBpZiBmb3VuZCwgb3RoZXJ3aXNlIHJlc29sdmVkIHdpdGggdW5kZWZpbmVkXG4gKi9cbmV4cG9ydHMuZmluZCA9ICh0b2tlbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGlkID0gand0LmRlY29kZSh0b2tlbikuanRpO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodG9rZW5zW2lkXSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICB9XG59O1xuXG4vKipcbiAqIFNhdmVzIGEgYWNjZXNzIHRva2VuLCBleHBpcmF0aW9uIGRhdGUsIHVzZXIgaWQsIGNsaWVudCBpZCwgYW5kIHNjb3BlLiBOb3RlOiBUaGUgYWN0dWFsIGZ1bGxcbiAqIGFjY2VzcyB0b2tlbiBpcyBuZXZlciBzYXZlZC4gIEluc3RlYWQganVzdCB0aGUgSUQgb2YgdGhlIHRva2VuIGlzIHNhdmVkLiAgSW4gY2FzZSBvZiBhIGRhdGFiYXNlXG4gKiBicmVhY2ggdGhpcyBwcmV2ZW50cyBhbnlvbmUgZnJvbSBzdGVhbGluZyB0aGUgbGl2ZSB0b2tlbnMuXG4gKiBAcGFyYW0gICB7T2JqZWN0fSAgdG9rZW4gICAgICAgICAgLSBUaGUgYWNjZXNzIHRva2VuIChyZXF1aXJlZClcbiAqIEBwYXJhbSAgIHtEYXRlfSAgICBleHBpcmF0aW9uRGF0ZSAtIFRoZSBleHBpcmF0aW9uIG9mIHRoZSBhY2Nlc3MgdG9rZW4gKHJlcXVpcmVkKVxuICogQHBhcmFtICAge1N0cmluZ30gIHVzZXJJRCAgICAgICAgIC0gVGhlIHVzZXIgSUQgKHJlcXVpcmVkKVxuICogQHBhcmFtICAge1N0cmluZ30gIGNsaWVudElEICAgICAgIC0gVGhlIGNsaWVudCBJRCAocmVxdWlyZWQpXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgc2NvcGUgICAgICAgICAgLSBUaGUgc2NvcGUgKG9wdGlvbmFsKVxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggdGhlIHNhdmVkIHRva2VuXG4gKi9cbmV4cG9ydHMuc2F2ZSA9ICh0b2tlbiwgZXhwaXJhdGlvbkRhdGUsIHVzZXJJRCwgY2xpZW50SUQsIHNjb3BlKSA9PiB7XG4gIGNvbnN0IGlkID0gand0LmRlY29kZSh0b2tlbikuanRpO1xuICB0b2tlbnNbaWRdID0geyB1c2VySUQsIGV4cGlyYXRpb25EYXRlLCBjbGllbnRJRCwgc2NvcGUgfTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0b2tlbnNbaWRdKTtcbn07XG5cbi8qKlxuICogRGVsZXRlcy9SZXZva2VzIGFuIGFjY2VzcyB0b2tlbiBieSBnZXR0aW5nIHRoZSBJRCBhbmQgcmVtb3ZpbmcgaXQgZnJvbSB0aGUgc3RvcmFnZS5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICB0b2tlbiAtIFRoZSB0b2tlbiB0byBkZWNvZGUgdG8gZ2V0IHRoZSBpZCBvZiB0aGUgYWNjZXNzIHRva2VuIHRvIGRlbGV0ZS5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIHRoZSBkZWxldGVkIHRva2VuXG4gKi9cbmV4cG9ydHMuZGVsZXRlID0gKHRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaWQgPSBqd3QuZGVjb2RlKHRva2VuKS5qdGk7XG4gICAgY29uc3QgZGVsZXRlZFRva2VuID0gdG9rZW5zW2lkXTtcbiAgICBkZWxldGUgdG9rZW5zW2lkXTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRlbGV0ZWRUb2tlbik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICB9XG59O1xuXG4vKipcbiAqIFJlbW92ZXMgZXhwaXJlZCBhY2Nlc3MgdG9rZW5zLiBJdCBkb2VzIHRoaXMgYnkgbG9vcGluZyB0aHJvdWdoIHRoZW0gYWxsIGFuZCB0aGVuIHJlbW92aW5nIHRoZVxuICogZXhwaXJlZCBvbmVzIGl0IGZpbmRzLlxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggYW4gYXNzb2NpYXRpdmUgb2YgdG9rZW5zIHRoYXQgd2VyZSBleHBpcmVkXG4gKi9cbmV4cG9ydHMucmVtb3ZlRXhwaXJlZCA9ICgpID0+IHtcbiAgY29uc3Qga2V5cyAgICA9IE9iamVjdC5rZXlzKHRva2Vucyk7XG4gIGNvbnN0IGV4cGlyZWQgPSBrZXlzLnJlZHVjZSgoYWNjdW11bGF0b3IsIGtleSkgPT4ge1xuICAgIGlmIChuZXcgRGF0ZSgpID4gdG9rZW5zW2tleV0uZXhwaXJhdGlvbkRhdGUpIHtcbiAgICAgIGNvbnN0IGV4cGlyZWRUb2tlbiA9IHRva2Vuc1trZXldO1xuICAgICAgZGVsZXRlIHRva2Vuc1trZXldO1xuICAgICAgYWNjdW11bGF0b3Jba2V5XSA9IGV4cGlyZWRUb2tlbjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIH1cbiAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gIH0sIE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGV4cGlyZWQpO1xufTtcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBhY2Nlc3MgdG9rZW5zLlxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggYWxsIHJlbW92ZWQgdG9rZW5zIHJldHVybmVkXG4gKi9cbmV4cG9ydHMucmVtb3ZlQWxsID0gKCkgPT4ge1xuICBjb25zdCBkZWxldGVkVG9rZW5zID0gdG9rZW5zO1xuICB0b2tlbnMgICAgICAgICAgICAgID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShkZWxldGVkVG9rZW5zKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "accesstokens.js"
      ],
      "names": [
        "jwt",
        "require",
        "tokens",
        "Object",
        "create",
        "exports",
        "find",
        "token",
        "id",
        "decode",
        "jti",
        "Promise",
        "resolve",
        "error",
        "undefined",
        "save",
        "expirationDate",
        "userID",
        "clientID",
        "scope",
        "delete",
        "deletedToken",
        "removeExpired",
        "keys",
        "expired",
        "reduce",
        "accumulator",
        "key",
        "Date",
        "expiredToken",
        "removeAll",
        "deletedTokens"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,MAAMC,QAAQ,cAAR,CAAZ;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA,IAAIC,SAASC,OAAOC,MAAP,CAAc,IAAd,CAAb;;AAEA;;;;;AAKAC,QAAQC,IAAR,GAAgBC,KAAD,IAAW;AACxB,MAAI;AACF,UAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,WAAOC,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CAPD;;AASA;;;;;;;;;;;AAWAT,QAAQU,IAAR,GAAe,CAACR,KAAD,EAAQS,cAAR,EAAwBC,MAAxB,EAAgCC,QAAhC,EAA0CC,KAA1C,KAAoD;AACjE,QAAMX,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACAR,SAAOM,EAAP,IAAa,EAAES,MAAF,EAAUD,cAAV,EAA0BE,QAA1B,EAAoCC,KAApC,EAAb;AACA,SAAOR,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,CAJD;;AAMA;;;;;AAKAH,QAAQe,MAAR,GAAkBb,KAAD,IAAW;AAC1B,MAAI;AACF,UAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,UAAMW,eAAenB,OAAOM,EAAP,CAArB;AACA,WAAON,OAAOM,EAAP,CAAP;AACA,WAAOG,QAAQC,OAAR,CAAgBS,YAAhB,CAAP;AACD,GALD,CAKE,OAAOR,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CATD;;AAWA;;;;;AAKAT,QAAQiB,aAAR,GAAwB,MAAM;AAC5B,QAAMC,OAAUpB,OAAOoB,IAAP,CAAYrB,MAAZ,CAAhB;AACA,QAAMsB,UAAUD,KAAKE,MAAL,CAAY,CAACC,WAAD,EAAcC,GAAd,KAAsB;AAChD,QAAI,IAAIC,IAAJ,KAAa1B,OAAOyB,GAAP,EAAYX,cAA7B,EAA6C;AAC3C,YAAMa,eAAe3B,OAAOyB,GAAP,CAArB;AACA,aAAOzB,OAAOyB,GAAP,CAAP;AACAD,kBAAYC,GAAZ,IAAmBE,YAAnB,CAH2C,CAGV;AAClC;AACD,WAAOH,WAAP;AACD,GAPe,EAObvB,OAAOC,MAAP,CAAc,IAAd,CAPa,CAAhB;AAQA,SAAOO,QAAQC,OAAR,CAAgBY,OAAhB,CAAP;AACD,CAXD;;AAaA;;;;AAIAnB,QAAQyB,SAAR,GAAoB,MAAM;AACxB,QAAMC,gBAAgB7B,MAAtB;AACAA,WAAsBC,OAAOC,MAAP,CAAc,IAAd,CAAtB;AACA,SAAOO,QAAQC,OAAR,CAAgBmB,aAAhB,CAAP;AACD,CAJD",
      "file": "accesstokens.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The access tokens.\n// You will use these to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the access tokens\n */\nlet tokens = Object.create(null);\n\n/**\n * Returns an access token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the access token to find.\n * @returns {Promise} resolved with the token if found, otherwise resolved with undefined\n */\nexports.find = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a access token, expiration date, user id, client id, and scope. Note: The actual full\n * access token is never saved.  Instead just the ID of the token is saved.  In case of a database\n * breach this prevents anyone from stealing the live tokens.\n * @param   {Object}  token          - The access token (required)\n * @param   {Date}    expirationDate - The expiration of the access token (required)\n * @param   {String}  userID         - The user ID (required)\n * @param   {String}  clientID       - The client ID (required)\n * @param   {String}  scope          - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (token, expirationDate, userID, clientID, scope) => {\n  const id = jwt.decode(token).jti;\n  tokens[id] = { userID, expirationDate, clientID, scope };\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes/Revokes an access token by getting the ID and removing it from the storage.\n * @param   {String}  token - The token to decode to get the id of the access token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes expired access tokens. It does this by looping through them all and then removing the\n * expired ones it finds.\n * @returns {Promise} resolved with an associative of tokens that were expired\n */\nexports.removeExpired = () => {\n  const keys    = Object.keys(tokens);\n  const expired = keys.reduce((accumulator, key) => {\n    if (new Date() > tokens[key].expirationDate) {\n      const expiredToken = tokens[key];\n      delete tokens[key];\n      accumulator[key] = expiredToken; // eslint-disable-line no-param-reassign\n    }\n    return accumulator;\n  }, Object.create(null));\n  return Promise.resolve(expired);\n};\n\n/**\n * Removes all access tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = () => {\n  const deletedTokens = tokens;\n  tokens              = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n"
      ]
    },
    "mtime": 1518113269000
  },
  "{\"filename\":\"/app/db/authorizationcodes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/authorizationcodes.js",
      "filenameRelative": "/app/db/authorizationcodes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "authorizationcodes.js",
      "sourceFileName": "authorizationcodes.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "authorizationcodes"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The authorization codes.\n// You will use these to get the access codes to get to the data in your endpoints as outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Authorization codes in-memory data structure which stores all of the authorization codes\n */\nlet codes = Object.create(null);\n\n/**\n * Returns an authorization code if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the authorization token to find.\n * @returns {Promise} resolved with the authorization code if found, otherwise undefined\n */\nexports.find = token => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(codes[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a authorization code, client id, redirect uri, user id, and scope. Note: The actual full\n * authorization token is never saved.  Instead just the ID of the token is saved.  In case of a\n * database breach this prevents anyone from stealing the live tokens.\n * @param   {String}  code        - The authorization code (required)\n * @param   {String}  clientID    - The client ID (required)\n * @param   {String}  redirectURI - The redirect URI of where to send access tokens once exchanged\n * @param   {String}  userID      - The user ID (required)\n * @param   {String}  scope       - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (code, clientID, redirectURI, userID, scope) => {\n  const id = jwt.decode(code).jti;\n  codes[id] = { clientID, redirectURI, userID, scope };\n  return Promise.resolve(codes[id]);\n};\n\n/**\n * Deletes an authorization code\n * @param   {String}  token - The authorization code to delete\n * @returns {Promise} resolved with the deleted value\n */\nexports.delete = token => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = codes[id];\n    delete codes[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all authorization codes.\n * @returns {Promise} resolved with all removed authorization codes returned\n */\nexports.removeAll = () => {\n  const deletedTokens = codes;\n  codes = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhvcml6YXRpb25jb2Rlcy5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiY29kZXMiLCJPYmplY3QiLCJjcmVhdGUiLCJleHBvcnRzIiwiZmluZCIsInRva2VuIiwiaWQiLCJkZWNvZGUiLCJqdGkiLCJQcm9taXNlIiwicmVzb2x2ZSIsImVycm9yIiwidW5kZWZpbmVkIiwic2F2ZSIsImNvZGUiLCJjbGllbnRJRCIsInJlZGlyZWN0VVJJIiwidXNlcklEIiwic2NvcGUiLCJkZWxldGUiLCJkZWxldGVkVG9rZW4iLCJyZW1vdmVBbGwiLCJkZWxldGVkVG9rZW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxNQUFNQyxRQUFRLGNBQVIsQ0FBWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSUMsUUFBUUMsT0FBT0MsTUFBUCxDQUFjLElBQWQsQ0FBWjs7QUFFQTs7Ozs7QUFLQUMsUUFBUUMsSUFBUixHQUFnQkMsS0FBRCxJQUFXO0FBQ3hCLE1BQUk7QUFDRixVQUFNQyxLQUFLUixJQUFJUyxNQUFKLENBQVdGLEtBQVgsRUFBa0JHLEdBQTdCO0FBQ0EsV0FBT0MsUUFBUUMsT0FBUixDQUFnQlYsTUFBTU0sRUFBTixDQUFoQixDQUFQO0FBQ0QsR0FIRCxDQUdFLE9BQU9LLEtBQVAsRUFBYztBQUNkLFdBQU9GLFFBQVFDLE9BQVIsQ0FBZ0JFLFNBQWhCLENBQVA7QUFDRDtBQUNGLENBUEQ7O0FBU0E7Ozs7Ozs7Ozs7O0FBV0FULFFBQVFVLElBQVIsR0FBZSxDQUFDQyxJQUFELEVBQU9DLFFBQVAsRUFBaUJDLFdBQWpCLEVBQThCQyxNQUE5QixFQUFzQ0MsS0FBdEMsS0FBZ0Q7QUFDN0QsUUFBTVosS0FBS1IsSUFBSVMsTUFBSixDQUFXTyxJQUFYLEVBQWlCTixHQUE1QjtBQUNBUixRQUFNTSxFQUFOLElBQVksRUFBRVMsUUFBRixFQUFZQyxXQUFaLEVBQXlCQyxNQUF6QixFQUFpQ0MsS0FBakMsRUFBWjtBQUNBLFNBQU9ULFFBQVFDLE9BQVIsQ0FBZ0JWLE1BQU1NLEVBQU4sQ0FBaEIsQ0FBUDtBQUNELENBSkQ7O0FBTUE7Ozs7O0FBS0FILFFBQVFnQixNQUFSLEdBQWtCZCxLQUFELElBQVc7QUFDMUIsTUFBSTtBQUNGLFVBQU1DLEtBQUtSLElBQUlTLE1BQUosQ0FBV0YsS0FBWCxFQUFrQkcsR0FBN0I7QUFDQSxVQUFNWSxlQUFlcEIsTUFBTU0sRUFBTixDQUFyQjtBQUNBLFdBQU9OLE1BQU1NLEVBQU4sQ0FBUDtBQUNBLFdBQU9HLFFBQVFDLE9BQVIsQ0FBZ0JVLFlBQWhCLENBQVA7QUFDRCxHQUxELENBS0UsT0FBT1QsS0FBUCxFQUFjO0FBQ2QsV0FBT0YsUUFBUUMsT0FBUixDQUFnQkUsU0FBaEIsQ0FBUDtBQUNEO0FBQ0YsQ0FURDs7QUFXQTs7OztBQUlBVCxRQUFRa0IsU0FBUixHQUFvQixNQUFNO0FBQ3hCLFFBQU1DLGdCQUFnQnRCLEtBQXRCO0FBQ0FBLFVBQXNCQyxPQUFPQyxNQUFQLENBQWMsSUFBZCxDQUF0QjtBQUNBLFNBQU9PLFFBQVFDLE9BQVIsQ0FBZ0JZLGFBQWhCLENBQVA7QUFDRCxDQUpEIiwiZmlsZSI6ImF1dGhvcml6YXRpb25jb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2RiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcblxuLy8gVGhlIGF1dGhvcml6YXRpb24gY29kZXMuXG4vLyBZb3Ugd2lsbCB1c2UgdGhlc2UgdG8gZ2V0IHRoZSBhY2Nlc3MgY29kZXMgdG8gZ2V0IHRvIHRoZSBkYXRhIGluIHlvdXIgZW5kcG9pbnRzIGFzIG91dGxpbmVkXG4vLyBpbiB0aGUgUkZDIFRoZSBPQXV0aCAyLjAgQXV0aG9yaXphdGlvbiBGcmFtZXdvcms6IEJlYXJlciBUb2tlbiBVc2FnZVxuLy8gKGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NTApXG5cbi8qKlxuICogQXV0aG9yaXphdGlvbiBjb2RlcyBpbi1tZW1vcnkgZGF0YSBzdHJ1Y3R1cmUgd2hpY2ggc3RvcmVzIGFsbCBvZiB0aGUgYXV0aG9yaXphdGlvbiBjb2Rlc1xuICovXG5sZXQgY29kZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4vKipcbiAqIFJldHVybnMgYW4gYXV0aG9yaXphdGlvbiBjb2RlIGlmIGl0IGZpbmRzIG9uZSwgb3RoZXJ3aXNlIHJldHVybnMgbnVsbCBpZiBvbmUgaXMgbm90IGZvdW5kLlxuICogQHBhcmFtICAge1N0cmluZ30gIHRva2VuIC0gVGhlIHRva2VuIHRvIGRlY29kZSB0byBnZXQgdGhlIGlkIG9mIHRoZSBhdXRob3JpemF0aW9uIHRva2VuIHRvIGZpbmQuXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCB0aGUgYXV0aG9yaXphdGlvbiBjb2RlIGlmIGZvdW5kLCBvdGhlcndpc2UgdW5kZWZpbmVkXG4gKi9cbmV4cG9ydHMuZmluZCA9ICh0b2tlbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGlkID0gand0LmRlY29kZSh0b2tlbikuanRpO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoY29kZXNbaWRdKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gIH1cbn07XG5cbi8qKlxuICogU2F2ZXMgYSBhdXRob3JpemF0aW9uIGNvZGUsIGNsaWVudCBpZCwgcmVkaXJlY3QgdXJpLCB1c2VyIGlkLCBhbmQgc2NvcGUuIE5vdGU6IFRoZSBhY3R1YWwgZnVsbFxuICogYXV0aG9yaXphdGlvbiB0b2tlbiBpcyBuZXZlciBzYXZlZC4gIEluc3RlYWQganVzdCB0aGUgSUQgb2YgdGhlIHRva2VuIGlzIHNhdmVkLiAgSW4gY2FzZSBvZiBhXG4gKiBkYXRhYmFzZSBicmVhY2ggdGhpcyBwcmV2ZW50cyBhbnlvbmUgZnJvbSBzdGVhbGluZyB0aGUgbGl2ZSB0b2tlbnMuXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgY29kZSAgICAgICAgLSBUaGUgYXV0aG9yaXphdGlvbiBjb2RlIChyZXF1aXJlZClcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICBjbGllbnRJRCAgICAtIFRoZSBjbGllbnQgSUQgKHJlcXVpcmVkKVxuICogQHBhcmFtICAge1N0cmluZ30gIHJlZGlyZWN0VVJJIC0gVGhlIHJlZGlyZWN0IFVSSSBvZiB3aGVyZSB0byBzZW5kIGFjY2VzcyB0b2tlbnMgb25jZSBleGNoYW5nZWRcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICB1c2VySUQgICAgICAtIFRoZSB1c2VyIElEIChyZXF1aXJlZClcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICBzY29wZSAgICAgICAtIFRoZSBzY29wZSAob3B0aW9uYWwpXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCB0aGUgc2F2ZWQgdG9rZW5cbiAqL1xuZXhwb3J0cy5zYXZlID0gKGNvZGUsIGNsaWVudElELCByZWRpcmVjdFVSSSwgdXNlcklELCBzY29wZSkgPT4ge1xuICBjb25zdCBpZCA9IGp3dC5kZWNvZGUoY29kZSkuanRpO1xuICBjb2Rlc1tpZF0gPSB7IGNsaWVudElELCByZWRpcmVjdFVSSSwgdXNlcklELCBzY29wZSB9O1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGNvZGVzW2lkXSk7XG59O1xuXG4vKipcbiAqIERlbGV0ZXMgYW4gYXV0aG9yaXphdGlvbiBjb2RlXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgdG9rZW4gLSBUaGUgYXV0aG9yaXphdGlvbiBjb2RlIHRvIGRlbGV0ZVxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggdGhlIGRlbGV0ZWQgdmFsdWVcbiAqL1xuZXhwb3J0cy5kZWxldGUgPSAodG9rZW4pID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBpZCA9IGp3dC5kZWNvZGUodG9rZW4pLmp0aTtcbiAgICBjb25zdCBkZWxldGVkVG9rZW4gPSBjb2Rlc1tpZF07XG4gICAgZGVsZXRlIGNvZGVzW2lkXTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRlbGV0ZWRUb2tlbik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICB9XG59O1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGF1dGhvcml6YXRpb24gY29kZXMuXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCBhbGwgcmVtb3ZlZCBhdXRob3JpemF0aW9uIGNvZGVzIHJldHVybmVkXG4gKi9cbmV4cG9ydHMucmVtb3ZlQWxsID0gKCkgPT4ge1xuICBjb25zdCBkZWxldGVkVG9rZW5zID0gY29kZXM7XG4gIGNvZGVzICAgICAgICAgICAgICAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRlbGV0ZWRUb2tlbnMpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "authorizationcodes.js"
      ],
      "names": [
        "jwt",
        "require",
        "codes",
        "Object",
        "create",
        "exports",
        "find",
        "token",
        "id",
        "decode",
        "jti",
        "Promise",
        "resolve",
        "error",
        "undefined",
        "save",
        "code",
        "clientID",
        "redirectURI",
        "userID",
        "scope",
        "delete",
        "deletedToken",
        "removeAll",
        "deletedTokens"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,MAAMC,QAAQ,cAAR,CAAZ;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA,IAAIC,QAAQC,OAAOC,MAAP,CAAc,IAAd,CAAZ;;AAEA;;;;;AAKAC,QAAQC,IAAR,GAAgBC,KAAD,IAAW;AACxB,MAAI;AACF,UAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,WAAOC,QAAQC,OAAR,CAAgBV,MAAMM,EAAN,CAAhB,CAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CAPD;;AASA;;;;;;;;;;;AAWAT,QAAQU,IAAR,GAAe,CAACC,IAAD,EAAOC,QAAP,EAAiBC,WAAjB,EAA8BC,MAA9B,EAAsCC,KAAtC,KAAgD;AAC7D,QAAMZ,KAAKR,IAAIS,MAAJ,CAAWO,IAAX,EAAiBN,GAA5B;AACAR,QAAMM,EAAN,IAAY,EAAES,QAAF,EAAYC,WAAZ,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAZ;AACA,SAAOT,QAAQC,OAAR,CAAgBV,MAAMM,EAAN,CAAhB,CAAP;AACD,CAJD;;AAMA;;;;;AAKAH,QAAQgB,MAAR,GAAkBd,KAAD,IAAW;AAC1B,MAAI;AACF,UAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,UAAMY,eAAepB,MAAMM,EAAN,CAArB;AACA,WAAON,MAAMM,EAAN,CAAP;AACA,WAAOG,QAAQC,OAAR,CAAgBU,YAAhB,CAAP;AACD,GALD,CAKE,OAAOT,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CATD;;AAWA;;;;AAIAT,QAAQkB,SAAR,GAAoB,MAAM;AACxB,QAAMC,gBAAgBtB,KAAtB;AACAA,UAAsBC,OAAOC,MAAP,CAAc,IAAd,CAAtB;AACA,SAAOO,QAAQC,OAAR,CAAgBY,aAAhB,CAAP;AACD,CAJD",
      "file": "authorizationcodes.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The authorization codes.\n// You will use these to get the access codes to get to the data in your endpoints as outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Authorization codes in-memory data structure which stores all of the authorization codes\n */\nlet codes = Object.create(null);\n\n/**\n * Returns an authorization code if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the authorization token to find.\n * @returns {Promise} resolved with the authorization code if found, otherwise undefined\n */\nexports.find = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(codes[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a authorization code, client id, redirect uri, user id, and scope. Note: The actual full\n * authorization token is never saved.  Instead just the ID of the token is saved.  In case of a\n * database breach this prevents anyone from stealing the live tokens.\n * @param   {String}  code        - The authorization code (required)\n * @param   {String}  clientID    - The client ID (required)\n * @param   {String}  redirectURI - The redirect URI of where to send access tokens once exchanged\n * @param   {String}  userID      - The user ID (required)\n * @param   {String}  scope       - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (code, clientID, redirectURI, userID, scope) => {\n  const id = jwt.decode(code).jti;\n  codes[id] = { clientID, redirectURI, userID, scope };\n  return Promise.resolve(codes[id]);\n};\n\n/**\n * Deletes an authorization code\n * @param   {String}  token - The authorization code to delete\n * @returns {Promise} resolved with the deleted value\n */\nexports.delete = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = codes[id];\n    delete codes[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all authorization codes.\n * @returns {Promise} resolved with all removed authorization codes returned\n */\nexports.removeAll = () => {\n  const deletedTokens = codes;\n  codes               = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/db/clients.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/clients.js",
      "filenameRelative": "/app/db/clients.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "clients.js",
      "sourceFileName": "clients.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "clients"
    },
    "ignored": false,
    "code": "var mongoose = require('mongoose');\nvar bcrypt = require('bcrypt');\nconst { logAndThrow } = require('../utils');\n\nvar ClientSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientId: {\n    type: Number,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientSecret: {\n    type: String,\n    required: true\n  },\n  trustedClient: {\n    type: Boolean,\n    default: false\n  }\n});\n\nClientSchema.methods = {\n  validate: function (clientSecret) {\n    if (clientSecret === this.clientSecret) return this;\n    // if (bcrypt.compareSync(clientSecret, this.clientSecret)) return this\n    logAndThrow(`Wrong secret for client ${this.name}`);\n  }\n};\n\nvar Client = mongoose.model('Client', ClientSchema);\n\n/**\n * This is the configuration of the clients that are allowed to connected to your authorization\n * server. These represent client applications that can connect. At a minimum you need the required\n * properties of\n *\n * id:           A unique numeric id of your client application\n * name:         The name of your client application\n * clientId:     A unique id of your client application\n * clientSecret: A unique password(ish) secret that is _best not_ shared with anyone but your\n *               client application and the authorization server.\n *\n * Optionally you can set these properties which are\n *\n * trustedClient: default if missing is false. If this is set to true then the client is regarded\n * as a trusted client and not a 3rd party application. That means that the user will not be\n * presented with a decision dialog with the trusted application and that the trusted application\n * gets full scope access without the user having to make a decision to allow or disallow the scope\n * access.\n */\nconst clients = [{\n  id: '1',\n  name: 'Samplr',\n  clientId: 'abc123',\n  clientSecret: 'ssh-secret'\n}, {\n  id: '2',\n  name: 'Samplr2',\n  clientId: 'xyz123',\n  clientSecret: 'ssh-password'\n}, {\n  id: '3',\n  name: 'Samplr3',\n  clientId: 'trustedClient',\n  clientSecret: 'ssh-otherpassword',\n  trustedClient: true\n}];\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   id   - The unique id of the client to find\n * @returns {Promise}  resolved promise with the client if found, otherwise undefined\n */\nexports.find = id => Promise.resolve(clients.find(client => client.id === id));\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   clientId - The unique client id of the client to find\n * @param   {Function} done     - The client if found, otherwise returns undefined\n * @returns {Promise} resolved promise with the client if found, otherwise undefined\n */\nexports.findByClientId = clientId => Promise.resolve(clients.find(client => client.clientId === clientId));\n\nmodule.exports = Client;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudHMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiYmNyeXB0IiwibG9nQW5kVGhyb3ciLCJDbGllbnRTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInVuaXF1ZSIsInJlcXVpcmVkIiwidHJpbSIsImNsaWVudElkIiwiTnVtYmVyIiwiY2xpZW50U2VjcmV0IiwidHJ1c3RlZENsaWVudCIsIkJvb2xlYW4iLCJkZWZhdWx0IiwibWV0aG9kcyIsInZhbGlkYXRlIiwiQ2xpZW50IiwibW9kZWwiLCJjbGllbnRzIiwiaWQiLCJleHBvcnRzIiwiZmluZCIsIlByb21pc2UiLCJyZXNvbHZlIiwiY2xpZW50IiwiZmluZEJ5Q2xpZW50SWQiLCJtb2R1bGUiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFdBQVdDLFFBQVEsVUFBUixDQUFmO0FBQ0EsSUFBSUMsU0FBU0QsUUFBUSxRQUFSLENBQWI7QUFDQSxNQUFNLEVBQUVFLFdBQUYsS0FBa0JGLFFBQVEsVUFBUixDQUF4Qjs7QUFFQSxJQUFJRyxlQUFlLElBQUlKLFNBQVNLLE1BQWIsQ0FBb0I7QUFDckNDLFFBQU07QUFDSkMsVUFBTUMsTUFERjtBQUVKQyxZQUFRLElBRko7QUFHSkMsY0FBVSxJQUhOO0FBSUpDLFVBQU07QUFKRixHQUQrQjtBQU9yQ0MsWUFBVTtBQUNSTCxVQUFNTSxNQURFO0FBRVJKLFlBQVEsSUFGQTtBQUdSQyxjQUFVLElBSEY7QUFJUkMsVUFBTTtBQUpFLEdBUDJCO0FBYXJDRyxnQkFBYztBQUNaUCxVQUFNQyxNQURNO0FBRVpFLGNBQVU7QUFGRSxHQWJ1QjtBQWlCckNLLGlCQUFlO0FBQ2JSLFVBQU1TLE9BRE87QUFFYkMsYUFBUztBQUZJO0FBakJzQixDQUFwQixDQUFuQjs7QUF3QkFiLGFBQWFjLE9BQWIsR0FBdUI7QUFDckJDLFlBQVUsVUFBVUwsWUFBVixFQUF3QjtBQUNoQyxRQUFJQSxpQkFBaUIsS0FBS0EsWUFBMUIsRUFBd0MsT0FBTyxJQUFQO0FBQ3hDO0FBQ0FYLGdCQUFhLDJCQUEwQixLQUFLRyxJQUFLLEVBQWpEO0FBQ0Q7QUFMb0IsQ0FBdkI7O0FBUUEsSUFBSWMsU0FBU3BCLFNBQVNxQixLQUFULENBQWUsUUFBZixFQUF5QmpCLFlBQXpCLENBQWI7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEsTUFBTWtCLFVBQVUsQ0FBQztBQUNmQyxNQUFnQixHQUREO0FBRWZqQixRQUFnQixRQUZEO0FBR2ZNLFlBQWdCLFFBSEQ7QUFJZkUsZ0JBQWdCO0FBSkQsQ0FBRCxFQUtiO0FBQ0RTLE1BQWdCLEdBRGY7QUFFRGpCLFFBQWdCLFNBRmY7QUFHRE0sWUFBZ0IsUUFIZjtBQUlERSxnQkFBZ0I7QUFKZixDQUxhLEVBVWI7QUFDRFMsTUFBZ0IsR0FEZjtBQUVEakIsUUFBZ0IsU0FGZjtBQUdETSxZQUFnQixlQUhmO0FBSURFLGdCQUFnQixtQkFKZjtBQUtEQyxpQkFBZ0I7QUFMZixDQVZhLENBQWhCOztBQWtCQTs7Ozs7QUFLQVMsUUFBUUMsSUFBUixHQUFlRixNQUFNRyxRQUFRQyxPQUFSLENBQWdCTCxRQUFRRyxJQUFSLENBQWFHLFVBQVVBLE9BQU9MLEVBQVAsS0FBY0EsRUFBckMsQ0FBaEIsQ0FBckI7O0FBRUE7Ozs7OztBQU1BQyxRQUFRSyxjQUFSLEdBQXlCakIsWUFDdkJjLFFBQVFDLE9BQVIsQ0FBZ0JMLFFBQVFHLElBQVIsQ0FBYUcsVUFBVUEsT0FBT2hCLFFBQVAsS0FBb0JBLFFBQTNDLENBQWhCLENBREY7O0FBR0FrQixPQUFPTixPQUFQLEdBQWlCSixNQUFqQiIsImZpbGUiOiJjbGllbnRzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xudmFyIGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xuY29uc3QgeyBsb2dBbmRUaHJvdyB9ID0gcmVxdWlyZSgnLi4vdXRpbHMnKVxuXG52YXIgQ2xpZW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgY2xpZW50SWQ6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgY2xpZW50U2VjcmV0OiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICB9LFxuICB0cnVzdGVkQ2xpZW50OiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9XG59KTtcblxuXG5DbGllbnRTY2hlbWEubWV0aG9kcyA9IHtcbiAgdmFsaWRhdGU6IGZ1bmN0aW9uIChjbGllbnRTZWNyZXQpIHtcbiAgICBpZiAoY2xpZW50U2VjcmV0ID09PSB0aGlzLmNsaWVudFNlY3JldCkgcmV0dXJuIHRoaXNcbiAgICAvLyBpZiAoYmNyeXB0LmNvbXBhcmVTeW5jKGNsaWVudFNlY3JldCwgdGhpcy5jbGllbnRTZWNyZXQpKSByZXR1cm4gdGhpc1xuICAgIGxvZ0FuZFRocm93KGBXcm9uZyBzZWNyZXQgZm9yIGNsaWVudCAke3RoaXMubmFtZX1gKVxuICB9XG59XG5cbnZhciBDbGllbnQgPSBtb25nb29zZS5tb2RlbCgnQ2xpZW50JywgQ2xpZW50U2NoZW1hKTtcblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBjbGllbnRzIHRoYXQgYXJlIGFsbG93ZWQgdG8gY29ubmVjdGVkIHRvIHlvdXIgYXV0aG9yaXphdGlvblxuICogc2VydmVyLiBUaGVzZSByZXByZXNlbnQgY2xpZW50IGFwcGxpY2F0aW9ucyB0aGF0IGNhbiBjb25uZWN0LiBBdCBhIG1pbmltdW0geW91IG5lZWQgdGhlIHJlcXVpcmVkXG4gKiBwcm9wZXJ0aWVzIG9mXG4gKlxuICogaWQ6ICAgICAgICAgICBBIHVuaXF1ZSBudW1lcmljIGlkIG9mIHlvdXIgY2xpZW50IGFwcGxpY2F0aW9uXG4gKiBuYW1lOiAgICAgICAgIFRoZSBuYW1lIG9mIHlvdXIgY2xpZW50IGFwcGxpY2F0aW9uXG4gKiBjbGllbnRJZDogICAgIEEgdW5pcXVlIGlkIG9mIHlvdXIgY2xpZW50IGFwcGxpY2F0aW9uXG4gKiBjbGllbnRTZWNyZXQ6IEEgdW5pcXVlIHBhc3N3b3JkKGlzaCkgc2VjcmV0IHRoYXQgaXMgX2Jlc3Qgbm90XyBzaGFyZWQgd2l0aCBhbnlvbmUgYnV0IHlvdXJcbiAqICAgICAgICAgICAgICAgY2xpZW50IGFwcGxpY2F0aW9uIGFuZCB0aGUgYXV0aG9yaXphdGlvbiBzZXJ2ZXIuXG4gKlxuICogT3B0aW9uYWxseSB5b3UgY2FuIHNldCB0aGVzZSBwcm9wZXJ0aWVzIHdoaWNoIGFyZVxuICpcbiAqIHRydXN0ZWRDbGllbnQ6IGRlZmF1bHQgaWYgbWlzc2luZyBpcyBmYWxzZS4gSWYgdGhpcyBpcyBzZXQgdG8gdHJ1ZSB0aGVuIHRoZSBjbGllbnQgaXMgcmVnYXJkZWRcbiAqIGFzIGEgdHJ1c3RlZCBjbGllbnQgYW5kIG5vdCBhIDNyZCBwYXJ0eSBhcHBsaWNhdGlvbi4gVGhhdCBtZWFucyB0aGF0IHRoZSB1c2VyIHdpbGwgbm90IGJlXG4gKiBwcmVzZW50ZWQgd2l0aCBhIGRlY2lzaW9uIGRpYWxvZyB3aXRoIHRoZSB0cnVzdGVkIGFwcGxpY2F0aW9uIGFuZCB0aGF0IHRoZSB0cnVzdGVkIGFwcGxpY2F0aW9uXG4gKiBnZXRzIGZ1bGwgc2NvcGUgYWNjZXNzIHdpdGhvdXQgdGhlIHVzZXIgaGF2aW5nIHRvIG1ha2UgYSBkZWNpc2lvbiB0byBhbGxvdyBvciBkaXNhbGxvdyB0aGUgc2NvcGVcbiAqIGFjY2Vzcy5cbiAqL1xuY29uc3QgY2xpZW50cyA9IFt7XG4gIGlkICAgICAgICAgICAgOiAnMScsXG4gIG5hbWUgICAgICAgICAgOiAnU2FtcGxyJyxcbiAgY2xpZW50SWQgICAgICA6ICdhYmMxMjMnLFxuICBjbGllbnRTZWNyZXQgIDogJ3NzaC1zZWNyZXQnLFxufSwge1xuICBpZCAgICAgICAgICAgIDogJzInLFxuICBuYW1lICAgICAgICAgIDogJ1NhbXBscjInLFxuICBjbGllbnRJZCAgICAgIDogJ3h5ejEyMycsXG4gIGNsaWVudFNlY3JldCAgOiAnc3NoLXBhc3N3b3JkJyxcbn0sIHtcbiAgaWQgICAgICAgICAgICA6ICczJyxcbiAgbmFtZSAgICAgICAgICA6ICdTYW1wbHIzJyxcbiAgY2xpZW50SWQgICAgICA6ICd0cnVzdGVkQ2xpZW50JyxcbiAgY2xpZW50U2VjcmV0ICA6ICdzc2gtb3RoZXJwYXNzd29yZCcsXG4gIHRydXN0ZWRDbGllbnQgOiB0cnVlLFxufV07XG5cbi8qKlxuICogUmV0dXJucyBhIGNsaWVudCBpZiBpdCBmaW5kcyBvbmUsIG90aGVyd2lzZSByZXR1cm5zIG51bGwgaWYgYSBjbGllbnQgaXMgbm90IGZvdW5kLlxuICogQHBhcmFtICAge1N0cmluZ30gICBpZCAgIC0gVGhlIHVuaXF1ZSBpZCBvZiB0aGUgY2xpZW50IHRvIGZpbmRcbiAqIEByZXR1cm5zIHtQcm9taXNlfSAgcmVzb2x2ZWQgcHJvbWlzZSB3aXRoIHRoZSBjbGllbnQgaWYgZm91bmQsIG90aGVyd2lzZSB1bmRlZmluZWRcbiAqL1xuZXhwb3J0cy5maW5kID0gaWQgPT4gUHJvbWlzZS5yZXNvbHZlKGNsaWVudHMuZmluZChjbGllbnQgPT4gY2xpZW50LmlkID09PSBpZCkpO1xuXG4vKipcbiAqIFJldHVybnMgYSBjbGllbnQgaWYgaXQgZmluZHMgb25lLCBvdGhlcndpc2UgcmV0dXJucyBudWxsIGlmIGEgY2xpZW50IGlzIG5vdCBmb3VuZC5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICAgY2xpZW50SWQgLSBUaGUgdW5pcXVlIGNsaWVudCBpZCBvZiB0aGUgY2xpZW50IHRvIGZpbmRcbiAqIEBwYXJhbSAgIHtGdW5jdGlvbn0gZG9uZSAgICAgLSBUaGUgY2xpZW50IGlmIGZvdW5kLCBvdGhlcndpc2UgcmV0dXJucyB1bmRlZmluZWRcbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCBwcm9taXNlIHdpdGggdGhlIGNsaWVudCBpZiBmb3VuZCwgb3RoZXJ3aXNlIHVuZGVmaW5lZFxuICovXG5leHBvcnRzLmZpbmRCeUNsaWVudElkID0gY2xpZW50SWQgPT5cbiAgUHJvbWlzZS5yZXNvbHZlKGNsaWVudHMuZmluZChjbGllbnQgPT4gY2xpZW50LmNsaWVudElkID09PSBjbGllbnRJZCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENsaWVudFxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "clients.js"
      ],
      "names": [
        "mongoose",
        "require",
        "bcrypt",
        "logAndThrow",
        "ClientSchema",
        "Schema",
        "name",
        "type",
        "String",
        "unique",
        "required",
        "trim",
        "clientId",
        "Number",
        "clientSecret",
        "trustedClient",
        "Boolean",
        "default",
        "methods",
        "validate",
        "Client",
        "model",
        "clients",
        "id",
        "exports",
        "find",
        "Promise",
        "resolve",
        "client",
        "findByClientId",
        "module"
      ],
      "mappings": "AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,MAAM,EAAEE,WAAF,KAAkBF,QAAQ,UAAR,CAAxB;;AAEA,IAAIG,eAAe,IAAIJ,SAASK,MAAb,CAAoB;AACrCC,QAAM;AACJC,UAAMC,MADF;AAEJC,YAAQ,IAFJ;AAGJC,cAAU,IAHN;AAIJC,UAAM;AAJF,GAD+B;AAOrCC,YAAU;AACRL,UAAMM,MADE;AAERJ,YAAQ,IAFA;AAGRC,cAAU,IAHF;AAIRC,UAAM;AAJE,GAP2B;AAarCG,gBAAc;AACZP,UAAMC,MADM;AAEZE,cAAU;AAFE,GAbuB;AAiBrCK,iBAAe;AACbR,UAAMS,OADO;AAEbC,aAAS;AAFI;AAjBsB,CAApB,CAAnB;;AAwBAb,aAAac,OAAb,GAAuB;AACrBC,YAAU,UAAUL,YAAV,EAAwB;AAChC,QAAIA,iBAAiB,KAAKA,YAA1B,EAAwC,OAAO,IAAP;AACxC;AACAX,gBAAa,2BAA0B,KAAKG,IAAK,EAAjD;AACD;AALoB,CAAvB;;AAQA,IAAIc,SAASpB,SAASqB,KAAT,CAAe,QAAf,EAAyBjB,YAAzB,CAAb;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,MAAMkB,UAAU,CAAC;AACfC,MAAgB,GADD;AAEfjB,QAAgB,QAFD;AAGfM,YAAgB,QAHD;AAIfE,gBAAgB;AAJD,CAAD,EAKb;AACDS,MAAgB,GADf;AAEDjB,QAAgB,SAFf;AAGDM,YAAgB,QAHf;AAIDE,gBAAgB;AAJf,CALa,EAUb;AACDS,MAAgB,GADf;AAEDjB,QAAgB,SAFf;AAGDM,YAAgB,eAHf;AAIDE,gBAAgB,mBAJf;AAKDC,iBAAgB;AALf,CAVa,CAAhB;;AAkBA;;;;;AAKAS,QAAQC,IAAR,GAAeF,MAAMG,QAAQC,OAAR,CAAgBL,QAAQG,IAAR,CAAaG,UAAUA,OAAOL,EAAP,KAAcA,EAArC,CAAhB,CAArB;;AAEA;;;;;;AAMAC,QAAQK,cAAR,GAAyBjB,YACvBc,QAAQC,OAAR,CAAgBL,QAAQG,IAAR,CAAaG,UAAUA,OAAOhB,QAAP,KAAoBA,QAA3C,CAAhB,CADF;;AAGAkB,OAAON,OAAP,GAAiBJ,MAAjB",
      "file": "clients.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "var mongoose = require('mongoose');\nvar bcrypt = require('bcrypt');\nconst { logAndThrow } = require('../utils')\n\nvar ClientSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientId: {\n    type: Number,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  clientSecret: {\n    type: String,\n    required: true,\n  },\n  trustedClient: {\n    type: Boolean,\n    default: false\n  }\n});\n\n\nClientSchema.methods = {\n  validate: function (clientSecret) {\n    if (clientSecret === this.clientSecret) return this\n    // if (bcrypt.compareSync(clientSecret, this.clientSecret)) return this\n    logAndThrow(`Wrong secret for client ${this.name}`)\n  }\n}\n\nvar Client = mongoose.model('Client', ClientSchema);\n\n/**\n * This is the configuration of the clients that are allowed to connected to your authorization\n * server. These represent client applications that can connect. At a minimum you need the required\n * properties of\n *\n * id:           A unique numeric id of your client application\n * name:         The name of your client application\n * clientId:     A unique id of your client application\n * clientSecret: A unique password(ish) secret that is _best not_ shared with anyone but your\n *               client application and the authorization server.\n *\n * Optionally you can set these properties which are\n *\n * trustedClient: default if missing is false. If this is set to true then the client is regarded\n * as a trusted client and not a 3rd party application. That means that the user will not be\n * presented with a decision dialog with the trusted application and that the trusted application\n * gets full scope access without the user having to make a decision to allow or disallow the scope\n * access.\n */\nconst clients = [{\n  id            : '1',\n  name          : 'Samplr',\n  clientId      : 'abc123',\n  clientSecret  : 'ssh-secret',\n}, {\n  id            : '2',\n  name          : 'Samplr2',\n  clientId      : 'xyz123',\n  clientSecret  : 'ssh-password',\n}, {\n  id            : '3',\n  name          : 'Samplr3',\n  clientId      : 'trustedClient',\n  clientSecret  : 'ssh-otherpassword',\n  trustedClient : true,\n}];\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   id   - The unique id of the client to find\n * @returns {Promise}  resolved promise with the client if found, otherwise undefined\n */\nexports.find = id => Promise.resolve(clients.find(client => client.id === id));\n\n/**\n * Returns a client if it finds one, otherwise returns null if a client is not found.\n * @param   {String}   clientId - The unique client id of the client to find\n * @param   {Function} done     - The client if found, otherwise returns undefined\n * @returns {Promise} resolved promise with the client if found, otherwise undefined\n */\nexports.findByClientId = clientId =>\n  Promise.resolve(clients.find(client => client.clientId === clientId));\n\nmodule.exports = Client\n"
      ]
    },
    "mtime": 1518817719000
  },
  "{\"filename\":\"/app/db/refreshtokens.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/refreshtokens.js",
      "filenameRelative": "/app/db/refreshtokens.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "refreshtokens.js",
      "sourceFileName": "refreshtokens.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "refreshtokens"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The refresh tokens.\n// You will use these to get access tokens to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the refresh tokens\n */\nlet tokens = Object.create(null);\n\n/**\n * Returns a refresh token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the refresh token to find.\n * @returns {Promise} resolved with the token\n */\nexports.find = token => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a refresh token, user id, client id, and scope. Note: The actual full refresh token is\n * never saved.  Instead just the ID of the token is saved.  In case of a database breach this\n * prevents anyone from stealing the live tokens.\n * @param   {Object}  token    - The refresh token (required)\n * @param   {String}  userID   - The user ID (required)\n * @param   {String}  clientID - The client ID (required)\n * @param   {String}  scope    - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (token, userID, clientID, scope) => {\n  const id = jwt.decode(token).jti;\n  tokens[id] = { userID, clientID, scope };\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes a refresh token\n * @param   {String}  token - The token to decode to get the id of the refresh token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = token => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all refresh tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = () => {\n  const deletedTokens = tokens;\n  tokens = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZnJlc2h0b2tlbnMuanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsInRva2VucyIsIk9iamVjdCIsImNyZWF0ZSIsImV4cG9ydHMiLCJmaW5kIiwidG9rZW4iLCJpZCIsImRlY29kZSIsImp0aSIsIlByb21pc2UiLCJyZXNvbHZlIiwiZXJyb3IiLCJ1bmRlZmluZWQiLCJzYXZlIiwidXNlcklEIiwiY2xpZW50SUQiLCJzY29wZSIsImRlbGV0ZSIsImRlbGV0ZWRUb2tlbiIsInJlbW92ZUFsbCIsImRlbGV0ZWRUb2tlbnMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLE1BQU1DLFFBQVEsY0FBUixDQUFaOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJQyxTQUFTQyxPQUFPQyxNQUFQLENBQWMsSUFBZCxDQUFiOztBQUVBOzs7OztBQUtBQyxRQUFRQyxJQUFSLEdBQWdCQyxLQUFELElBQVc7QUFDeEIsTUFBSTtBQUNGLFVBQU1DLEtBQUtSLElBQUlTLE1BQUosQ0FBV0YsS0FBWCxFQUFrQkcsR0FBN0I7QUFDQSxXQUFPQyxRQUFRQyxPQUFSLENBQWdCVixPQUFPTSxFQUFQLENBQWhCLENBQVA7QUFDRCxHQUhELENBR0UsT0FBT0ssS0FBUCxFQUFjO0FBQ2QsV0FBT0YsUUFBUUMsT0FBUixDQUFnQkUsU0FBaEIsQ0FBUDtBQUNEO0FBQ0YsQ0FQRDs7QUFTQTs7Ozs7Ozs7OztBQVVBVCxRQUFRVSxJQUFSLEdBQWUsQ0FBQ1IsS0FBRCxFQUFRUyxNQUFSLEVBQWdCQyxRQUFoQixFQUEwQkMsS0FBMUIsS0FBb0M7QUFDakQsUUFBTVYsS0FBS1IsSUFBSVMsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxHQUE3QjtBQUNBUixTQUFPTSxFQUFQLElBQWEsRUFBRVEsTUFBRixFQUFVQyxRQUFWLEVBQW9CQyxLQUFwQixFQUFiO0FBQ0EsU0FBT1AsUUFBUUMsT0FBUixDQUFnQlYsT0FBT00sRUFBUCxDQUFoQixDQUFQO0FBQ0QsQ0FKRDs7QUFNQTs7Ozs7QUFLQUgsUUFBUWMsTUFBUixHQUFrQlosS0FBRCxJQUFXO0FBQzFCLE1BQUk7QUFDRixVQUFNQyxLQUFLUixJQUFJUyxNQUFKLENBQVdGLEtBQVgsRUFBa0JHLEdBQTdCO0FBQ0EsVUFBTVUsZUFBZWxCLE9BQU9NLEVBQVAsQ0FBckI7QUFDQSxXQUFPTixPQUFPTSxFQUFQLENBQVA7QUFDQSxXQUFPRyxRQUFRQyxPQUFSLENBQWdCUSxZQUFoQixDQUFQO0FBQ0QsR0FMRCxDQUtFLE9BQU9QLEtBQVAsRUFBYztBQUNkLFdBQU9GLFFBQVFDLE9BQVIsQ0FBZ0JFLFNBQWhCLENBQVA7QUFDRDtBQUNGLENBVEQ7O0FBV0E7Ozs7QUFJQVQsUUFBUWdCLFNBQVIsR0FBb0IsTUFBTTtBQUN4QixRQUFNQyxnQkFBZ0JwQixNQUF0QjtBQUNBQSxXQUFzQkMsT0FBT0MsTUFBUCxDQUFjLElBQWQsQ0FBdEI7QUFDQSxTQUFPTyxRQUFRQyxPQUFSLENBQWdCVSxhQUFoQixDQUFQO0FBQ0QsQ0FKRCIsImZpbGUiOiJyZWZyZXNodG9rZW5zLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvZGIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xuXG4vLyBUaGUgcmVmcmVzaCB0b2tlbnMuXG4vLyBZb3Ugd2lsbCB1c2UgdGhlc2UgdG8gZ2V0IGFjY2VzcyB0b2tlbnMgdG8gYWNjZXNzIHlvdXIgZW5kIHBvaW50IGRhdGEgdGhyb3VnaCB0aGUgbWVhbnMgb3V0bGluZWRcbi8vIGluIHRoZSBSRkMgVGhlIE9BdXRoIDIuMCBBdXRob3JpemF0aW9uIEZyYW1ld29yazogQmVhcmVyIFRva2VuIFVzYWdlXG4vLyAoaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc1MClcblxuLyoqXG4gKiBUb2tlbnMgaW4tbWVtb3J5IGRhdGEgc3RydWN0dXJlIHdoaWNoIHN0b3JlcyBhbGwgb2YgdGhlIHJlZnJlc2ggdG9rZW5zXG4gKi9cbmxldCB0b2tlbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4vKipcbiAqIFJldHVybnMgYSByZWZyZXNoIHRva2VuIGlmIGl0IGZpbmRzIG9uZSwgb3RoZXJ3aXNlIHJldHVybnMgbnVsbCBpZiBvbmUgaXMgbm90IGZvdW5kLlxuICogQHBhcmFtICAge1N0cmluZ30gIHRva2VuIC0gVGhlIHRva2VuIHRvIGRlY29kZSB0byBnZXQgdGhlIGlkIG9mIHRoZSByZWZyZXNoIHRva2VuIHRvIGZpbmQuXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVzb2x2ZWQgd2l0aCB0aGUgdG9rZW5cbiAqL1xuZXhwb3J0cy5maW5kID0gKHRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaWQgPSBqd3QuZGVjb2RlKHRva2VuKS5qdGk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0b2tlbnNbaWRdKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gIH1cbn07XG5cbi8qKlxuICogU2F2ZXMgYSByZWZyZXNoIHRva2VuLCB1c2VyIGlkLCBjbGllbnQgaWQsIGFuZCBzY29wZS4gTm90ZTogVGhlIGFjdHVhbCBmdWxsIHJlZnJlc2ggdG9rZW4gaXNcbiAqIG5ldmVyIHNhdmVkLiAgSW5zdGVhZCBqdXN0IHRoZSBJRCBvZiB0aGUgdG9rZW4gaXMgc2F2ZWQuICBJbiBjYXNlIG9mIGEgZGF0YWJhc2UgYnJlYWNoIHRoaXNcbiAqIHByZXZlbnRzIGFueW9uZSBmcm9tIHN0ZWFsaW5nIHRoZSBsaXZlIHRva2Vucy5cbiAqIEBwYXJhbSAgIHtPYmplY3R9ICB0b2tlbiAgICAtIFRoZSByZWZyZXNoIHRva2VuIChyZXF1aXJlZClcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICB1c2VySUQgICAtIFRoZSB1c2VyIElEIChyZXF1aXJlZClcbiAqIEBwYXJhbSAgIHtTdHJpbmd9ICBjbGllbnRJRCAtIFRoZSBjbGllbnQgSUQgKHJlcXVpcmVkKVxuICogQHBhcmFtICAge1N0cmluZ30gIHNjb3BlICAgIC0gVGhlIHNjb3BlIChvcHRpb25hbClcbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIHRoZSBzYXZlZCB0b2tlblxuICovXG5leHBvcnRzLnNhdmUgPSAodG9rZW4sIHVzZXJJRCwgY2xpZW50SUQsIHNjb3BlKSA9PiB7XG4gIGNvbnN0IGlkID0gand0LmRlY29kZSh0b2tlbikuanRpO1xuICB0b2tlbnNbaWRdID0geyB1c2VySUQsIGNsaWVudElELCBzY29wZSB9O1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRva2Vuc1tpZF0pO1xufTtcblxuLyoqXG4gKiBEZWxldGVzIGEgcmVmcmVzaCB0b2tlblxuICogQHBhcmFtICAge1N0cmluZ30gIHRva2VuIC0gVGhlIHRva2VuIHRvIGRlY29kZSB0byBnZXQgdGhlIGlkIG9mIHRoZSByZWZyZXNoIHRva2VuIHRvIGRlbGV0ZS5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSByZXNvbHZlZCB3aXRoIHRoZSBkZWxldGVkIHRva2VuXG4gKi9cbmV4cG9ydHMuZGVsZXRlID0gKHRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaWQgPSBqd3QuZGVjb2RlKHRva2VuKS5qdGk7XG4gICAgY29uc3QgZGVsZXRlZFRva2VuID0gdG9rZW5zW2lkXTtcbiAgICBkZWxldGUgdG9rZW5zW2lkXTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRlbGV0ZWRUb2tlbik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICB9XG59O1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIHJlZnJlc2ggdG9rZW5zLlxuICogQHJldHVybnMge1Byb21pc2V9IHJlc29sdmVkIHdpdGggYWxsIHJlbW92ZWQgdG9rZW5zIHJldHVybmVkXG4gKi9cbmV4cG9ydHMucmVtb3ZlQWxsID0gKCkgPT4ge1xuICBjb25zdCBkZWxldGVkVG9rZW5zID0gdG9rZW5zO1xuICB0b2tlbnMgICAgICAgICAgICAgID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShkZWxldGVkVG9rZW5zKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "refreshtokens.js"
      ],
      "names": [
        "jwt",
        "require",
        "tokens",
        "Object",
        "create",
        "exports",
        "find",
        "token",
        "id",
        "decode",
        "jti",
        "Promise",
        "resolve",
        "error",
        "undefined",
        "save",
        "userID",
        "clientID",
        "scope",
        "delete",
        "deletedToken",
        "removeAll",
        "deletedTokens"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,MAAMC,QAAQ,cAAR,CAAZ;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA,IAAIC,SAASC,OAAOC,MAAP,CAAc,IAAd,CAAb;;AAEA;;;;;AAKAC,QAAQC,IAAR,GAAgBC,KAAD,IAAW;AACxB,MAAI;AACF,UAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,WAAOC,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CAPD;;AASA;;;;;;;;;;AAUAT,QAAQU,IAAR,GAAe,CAACR,KAAD,EAAQS,MAAR,EAAgBC,QAAhB,EAA0BC,KAA1B,KAAoC;AACjD,QAAMV,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACAR,SAAOM,EAAP,IAAa,EAAEQ,MAAF,EAAUC,QAAV,EAAoBC,KAApB,EAAb;AACA,SAAOP,QAAQC,OAAR,CAAgBV,OAAOM,EAAP,CAAhB,CAAP;AACD,CAJD;;AAMA;;;;;AAKAH,QAAQc,MAAR,GAAkBZ,KAAD,IAAW;AAC1B,MAAI;AACF,UAAMC,KAAKR,IAAIS,MAAJ,CAAWF,KAAX,EAAkBG,GAA7B;AACA,UAAMU,eAAelB,OAAOM,EAAP,CAArB;AACA,WAAON,OAAOM,EAAP,CAAP;AACA,WAAOG,QAAQC,OAAR,CAAgBQ,YAAhB,CAAP;AACD,GALD,CAKE,OAAOP,KAAP,EAAc;AACd,WAAOF,QAAQC,OAAR,CAAgBE,SAAhB,CAAP;AACD;AACF,CATD;;AAWA;;;;AAIAT,QAAQgB,SAAR,GAAoB,MAAM;AACxB,QAAMC,gBAAgBpB,MAAtB;AACAA,WAAsBC,OAAOC,MAAP,CAAc,IAAd,CAAtB;AACA,SAAOO,QAAQC,OAAR,CAAgBU,aAAhB,CAAP;AACD,CAJD",
      "file": "refreshtokens.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "'use strict';\n\nconst jwt = require('jsonwebtoken');\n\n// The refresh tokens.\n// You will use these to get access tokens to access your end point data through the means outlined\n// in the RFC The OAuth 2.0 Authorization Framework: Bearer Token Usage\n// (http://tools.ietf.org/html/rfc6750)\n\n/**\n * Tokens in-memory data structure which stores all of the refresh tokens\n */\nlet tokens = Object.create(null);\n\n/**\n * Returns a refresh token if it finds one, otherwise returns null if one is not found.\n * @param   {String}  token - The token to decode to get the id of the refresh token to find.\n * @returns {Promise} resolved with the token\n */\nexports.find = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    return Promise.resolve(tokens[id]);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Saves a refresh token, user id, client id, and scope. Note: The actual full refresh token is\n * never saved.  Instead just the ID of the token is saved.  In case of a database breach this\n * prevents anyone from stealing the live tokens.\n * @param   {Object}  token    - The refresh token (required)\n * @param   {String}  userID   - The user ID (required)\n * @param   {String}  clientID - The client ID (required)\n * @param   {String}  scope    - The scope (optional)\n * @returns {Promise} resolved with the saved token\n */\nexports.save = (token, userID, clientID, scope) => {\n  const id = jwt.decode(token).jti;\n  tokens[id] = { userID, clientID, scope };\n  return Promise.resolve(tokens[id]);\n};\n\n/**\n * Deletes a refresh token\n * @param   {String}  token - The token to decode to get the id of the refresh token to delete.\n * @returns {Promise} resolved with the deleted token\n */\nexports.delete = (token) => {\n  try {\n    const id = jwt.decode(token).jti;\n    const deletedToken = tokens[id];\n    delete tokens[id];\n    return Promise.resolve(deletedToken);\n  } catch (error) {\n    return Promise.resolve(undefined);\n  }\n};\n\n/**\n * Removes all refresh tokens.\n * @returns {Promise} resolved with all removed tokens returned\n */\nexports.removeAll = () => {\n  const deletedTokens = tokens;\n  tokens              = Object.create(null);\n  return Promise.resolve(deletedTokens);\n};\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/db/users.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/db/users.js",
      "filenameRelative": "/app/db/users.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "users.js",
      "sourceFileName": "users.js",
      "sourceRoot": "/app/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "users"
    },
    "ignored": false,
    "code": "var mongoose = require('mongoose');\nvar bcrypt = require('bcrypt');\nconst { logAndThrow } = require('../utils');\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    trim: true\n  },\n  id: {\n    // just for old data. New values with _id\n    type: Number\n  },\n  role: {\n    type: String,\n    trim: true,\n    default: 'user'\n  },\n  /* name is needed for decision screen: Dear <name>.... */\n  name: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  facebook: {\n    id: String,\n    token: String,\n    name: String,\n    email: String\n  },\n  google: {\n    id: String,\n    token: String,\n    name: String,\n    email: String\n  }\n}, { strict: false /* so we can insert later providers like facebook or google if needed */\n});\n\n/* Do not declare methods using ES6 arrow functions (=>). Arrow functions explicitly prevent binding this, \nso your method will not have access to the document */\nUserSchema.methods = {\n  validate: function (password) {\n    if (bcrypt.compareSync(password, this.password)) return this;\n    logAndThrow(`Wrong password for user ${this.username}`);\n  }\n};\n\nvar User = mongoose.model('User', UserSchema);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImJjcnlwdCIsImxvZ0FuZFRocm93IiwiVXNlclNjaGVtYSIsIlNjaGVtYSIsImVtYWlsIiwidHlwZSIsIlN0cmluZyIsInRyaW0iLCJpZCIsIk51bWJlciIsInJvbGUiLCJkZWZhdWx0IiwibmFtZSIsInJlcXVpcmVkIiwicGFzc3dvcmQiLCJmYWNlYm9vayIsInRva2VuIiwiZ29vZ2xlIiwic3RyaWN0IiwibWV0aG9kcyIsInZhbGlkYXRlIiwiY29tcGFyZVN5bmMiLCJ1c2VybmFtZSIsIlVzZXIiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFdBQVdDLFFBQVEsVUFBUixDQUFmO0FBQ0EsSUFBSUMsU0FBU0QsUUFBUSxRQUFSLENBQWI7QUFDQSxNQUFNLEVBQUVFLFdBQUYsS0FBa0JGLFFBQVEsVUFBUixDQUF4Qjs7QUFFQSxJQUFJRyxhQUFhLElBQUlKLFNBQVNLLE1BQWIsQ0FBb0I7QUFDbkNDLFNBQU87QUFDTEMsVUFBTUMsTUFERDtBQUVMQyxVQUFNO0FBRkQsR0FENEI7QUFLbkNDLE1BQUk7QUFDRjtBQUNBSCxVQUFNSTtBQUZKLEdBTCtCO0FBU25DQyxRQUFNO0FBQ0pMLFVBQU1DLE1BREY7QUFFSkMsVUFBTSxJQUZGO0FBR0pJLGFBQVM7QUFITCxHQVQ2QjtBQWNuQztBQUNBQyxRQUFNO0FBQ0pQLFVBQU1DLE1BREY7QUFFSk8sY0FBVSxJQUZOO0FBR0pOLFVBQU07QUFIRixHQWY2QjtBQW9CbkNPLFlBQVU7QUFDUlQsVUFBTUMsTUFERTtBQUVSTyxjQUFVO0FBRkYsR0FwQnlCO0FBd0JuQ0UsWUFBVTtBQUNSUCxRQUFJRixNQURJO0FBRVJVLFdBQU9WLE1BRkM7QUFHUk0sVUFBTU4sTUFIRTtBQUlSRixXQUFPRTtBQUpDLEdBeEJ5QjtBQThCbkNXLFVBQVE7QUFDTlQsUUFBSUYsTUFERTtBQUVOVSxXQUFPVixNQUZEO0FBR05NLFVBQU1OLE1BSEE7QUFJTkYsV0FBT0U7QUFKRDtBQTlCMkIsQ0FBcEIsRUFxQ2pCLEVBQUVZLFFBQVEsS0FBVixDQUFrQjtBQUFsQixDQXJDaUIsQ0FBakI7O0FBd0NBOztBQUVBaEIsV0FBV2lCLE9BQVgsR0FBcUI7QUFDbkJDLFlBQVUsVUFBVU4sUUFBVixFQUFvQjtBQUM1QixRQUFJZCxPQUFPcUIsV0FBUCxDQUFtQlAsUUFBbkIsRUFBNkIsS0FBS0EsUUFBbEMsQ0FBSixFQUFpRCxPQUFPLElBQVA7QUFDakRiLGdCQUFhLDJCQUEwQixLQUFLcUIsUUFBUyxFQUFyRDtBQUNEO0FBSmtCLENBQXJCOztBQU9BLElBQUlDLE9BQU96QixTQUFTMEIsS0FBVCxDQUFlLE1BQWYsRUFBdUJ0QixVQUF2QixDQUFYO0FBQ0F1QixPQUFPQyxPQUFQLEdBQWlCSCxJQUFqQiIsImZpbGUiOiJ1c2Vycy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2RiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxudmFyIGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpXG5jb25zdCB7IGxvZ0FuZFRocm93IH0gPSByZXF1aXJlKCcuLi91dGlscycpXG5cbnZhciBVc2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIGVtYWlsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgaWQ6IHtcbiAgICAvLyBqdXN0IGZvciBvbGQgZGF0YS4gTmV3IHZhbHVlcyB3aXRoIF9pZFxuICAgIHR5cGU6IE51bWJlclxuICB9LFxuICByb2xlOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHRyaW06IHRydWUsXG4gICAgZGVmYXVsdDogJ3VzZXInXG4gIH0sXG4gIC8qIG5hbWUgaXMgbmVlZGVkIGZvciBkZWNpc2lvbiBzY3JlZW46IERlYXIgPG5hbWU+Li4uLiAqL1xuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgZmFjZWJvb2s6IHtcbiAgICBpZDogU3RyaW5nLFxuICAgIHRva2VuOiBTdHJpbmcsXG4gICAgbmFtZTogU3RyaW5nLFxuICAgIGVtYWlsOiBTdHJpbmdcbiAgfSxcbiAgZ29vZ2xlOiB7XG4gICAgaWQ6IFN0cmluZyxcbiAgICB0b2tlbjogU3RyaW5nLFxuICAgIG5hbWU6IFN0cmluZyxcbiAgICBlbWFpbDogU3RyaW5nXG4gIH1cbn0sXG57IHN0cmljdDogZmFsc2UgfSAvKiBzbyB3ZSBjYW4gaW5zZXJ0IGxhdGVyIHByb3ZpZGVycyBsaWtlIGZhY2Vib29rIG9yIGdvb2dsZSBpZiBuZWVkZWQgKi9cbilcblxuLyogRG8gbm90IGRlY2xhcmUgbWV0aG9kcyB1c2luZyBFUzYgYXJyb3cgZnVuY3Rpb25zICg9PikuIEFycm93IGZ1bmN0aW9ucyBleHBsaWNpdGx5IHByZXZlbnQgYmluZGluZyB0aGlzLCBcbnNvIHlvdXIgbWV0aG9kIHdpbGwgbm90IGhhdmUgYWNjZXNzIHRvIHRoZSBkb2N1bWVudCAqL1xuVXNlclNjaGVtYS5tZXRob2RzID0ge1xuICB2YWxpZGF0ZTogZnVuY3Rpb24gKHBhc3N3b3JkKSB7XG4gICAgaWYgKGJjcnlwdC5jb21wYXJlU3luYyhwYXNzd29yZCwgdGhpcy5wYXNzd29yZCkpIHJldHVybiB0aGlzXG4gICAgbG9nQW5kVGhyb3coYFdyb25nIHBhc3N3b3JkIGZvciB1c2VyICR7dGhpcy51c2VybmFtZX1gKVxuICB9XG59XG5cbnZhciBVc2VyID0gbW9uZ29vc2UubW9kZWwoJ1VzZXInLCBVc2VyU2NoZW1hKTtcbm1vZHVsZS5leHBvcnRzID0gVXNlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "mongoose",
        "require",
        "bcrypt",
        "logAndThrow",
        "UserSchema",
        "Schema",
        "email",
        "type",
        "String",
        "trim",
        "id",
        "Number",
        "role",
        "default",
        "name",
        "required",
        "password",
        "facebook",
        "token",
        "google",
        "strict",
        "methods",
        "validate",
        "compareSync",
        "username",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,MAAM,EAAEE,WAAF,KAAkBF,QAAQ,UAAR,CAAxB;;AAEA,IAAIG,aAAa,IAAIJ,SAASK,MAAb,CAAoB;AACnCC,SAAO;AACLC,UAAMC,MADD;AAELC,UAAM;AAFD,GAD4B;AAKnCC,MAAI;AACF;AACAH,UAAMI;AAFJ,GAL+B;AASnCC,QAAM;AACJL,UAAMC,MADF;AAEJC,UAAM,IAFF;AAGJI,aAAS;AAHL,GAT6B;AAcnC;AACAC,QAAM;AACJP,UAAMC,MADF;AAEJO,cAAU,IAFN;AAGJN,UAAM;AAHF,GAf6B;AAoBnCO,YAAU;AACRT,UAAMC,MADE;AAERO,cAAU;AAFF,GApByB;AAwBnCE,YAAU;AACRP,QAAIF,MADI;AAERU,WAAOV,MAFC;AAGRM,UAAMN,MAHE;AAIRF,WAAOE;AAJC,GAxByB;AA8BnCW,UAAQ;AACNT,QAAIF,MADE;AAENU,WAAOV,MAFD;AAGNM,UAAMN,MAHA;AAINF,WAAOE;AAJD;AA9B2B,CAApB,EAqCjB,EAAEY,QAAQ,KAAV,CAAkB;AAAlB,CArCiB,CAAjB;;AAwCA;;AAEAhB,WAAWiB,OAAX,GAAqB;AACnBC,YAAU,UAAUN,QAAV,EAAoB;AAC5B,QAAId,OAAOqB,WAAP,CAAmBP,QAAnB,EAA6B,KAAKA,QAAlC,CAAJ,EAAiD,OAAO,IAAP;AACjDb,gBAAa,2BAA0B,KAAKqB,QAAS,EAArD;AACD;AAJkB,CAArB;;AAOA,IAAIC,OAAOzB,SAAS0B,KAAT,CAAe,MAAf,EAAuBtB,UAAvB,CAAX;AACAuB,OAAOC,OAAP,GAAiBH,IAAjB",
      "file": "users.js",
      "sourceRoot": "/app/db",
      "sourcesContent": [
        "var mongoose = require('mongoose')\nvar bcrypt = require('bcrypt')\nconst { logAndThrow } = require('../utils')\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    trim: true\n  },\n  id: {\n    // just for old data. New values with _id\n    type: Number\n  },\n  role: {\n    type: String,\n    trim: true,\n    default: 'user'\n  },\n  /* name is needed for decision screen: Dear <name>.... */\n  name: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  facebook: {\n    id: String,\n    token: String,\n    name: String,\n    email: String\n  },\n  google: {\n    id: String,\n    token: String,\n    name: String,\n    email: String\n  }\n},\n{ strict: false } /* so we can insert later providers like facebook or google if needed */\n)\n\n/* Do not declare methods using ES6 arrow functions (=>). Arrow functions explicitly prevent binding this, \nso your method will not have access to the document */\nUserSchema.methods = {\n  validate: function (password) {\n    if (bcrypt.compareSync(password, this.password)) return this\n    logAndThrow(`Wrong password for user ${this.username}`)\n  }\n}\n\nvar User = mongoose.model('User', UserSchema);\nmodule.exports = User;\n"
      ]
    },
    "mtime": 1520545034000
  },
  "{\"filename\":\"/app/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/utils.js",
      "filenameRelative": "/app/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst uuid = require('uuid/v4');\nconst jwt = require('jsonwebtoken');\n\nvar PrettyError = require('pretty-error');\nvar pe = new PrettyError();\n\n/** Suppress tracing for things like unit testing */\nconst DEBUG = process.env.DEBUG === true;\n\n/** Private certificate used for signing JSON WebTokens */\nconst privateKey = fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem'));\n\n/** Public certificate used for verification.  Note: you could also use the private key */\nconst publicKey = fs.readFileSync(path.join(__dirname, 'certs/certificate.pem'));\n\n/**\n * Creates a signed JSON WebToken and returns it.  Utilizes the private certificate to create\n * the signed JWT.  For more options and other things you can change this to, please see:\n * https://github.com/auth0/node-jsonwebtoken\n *\n * @param  {Number} exp - The number of seconds for this token to expire.  By default it will be 60\n *                        minutes (3600 seconds) if nothing is passed in.\n * @param  {String} sub - The subject or identity of the token.\n * @return {String} The JWT Token\n */\nexports.createToken = ({ exp = 3600, sub = '', aud = '', scope = '', name = '', role = '' } = {}) => {\n  const token = jwt.sign({\n    jti: uuid(),\n    iss: 'auth.arasaac.org',\n    sub,\n    aud,\n    role,\n    name,\n    exp: Math.floor(Date.now() / 1000) + exp,\n    scope\n  }, privateKey, {\n    algorithm: 'RS256'\n  });\n  return token;\n};\n\n/**\n * Verifies the token through the jwt library using the public certificate.\n * @param   {String} token - The token to verify\n * @throws  {Error} Error if the token could not be verified\n * @returns {Object} The token decoded and verified\n */\nexports.verifyToken = token => jwt.verify(token, publicKey);\n\nexports.logAndThrow = msg => {\n  // if (DEBUG) console.trace(msg)\n  throw new Error(msg);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJ1dWlkIiwiand0IiwiUHJldHR5RXJyb3IiLCJwZSIsIkRFQlVHIiwicHJvY2VzcyIsImVudiIsInByaXZhdGVLZXkiLCJyZWFkRmlsZVN5bmMiLCJqb2luIiwiX19kaXJuYW1lIiwicHVibGljS2V5IiwiZXhwb3J0cyIsImNyZWF0ZVRva2VuIiwiZXhwIiwic3ViIiwiYXVkIiwic2NvcGUiLCJuYW1lIiwicm9sZSIsInRva2VuIiwic2lnbiIsImp0aSIsImlzcyIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJhbGdvcml0aG0iLCJ2ZXJpZnlUb2tlbiIsInZlcmlmeSIsImxvZ0FuZFRocm93IiwibXNnIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLEtBQU9DLFFBQVEsSUFBUixDQUFiO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNRSxPQUFPRixRQUFRLFNBQVIsQ0FBYjtBQUNBLE1BQU1HLE1BQU9ILFFBQVEsY0FBUixDQUFiOztBQUVBLElBQUlJLGNBQWNKLFFBQVEsY0FBUixDQUFsQjtBQUNBLElBQUlLLEtBQUssSUFBSUQsV0FBSixFQUFUOztBQUVBO0FBQ0EsTUFBTUUsUUFBUUMsUUFBUUMsR0FBUixDQUFZRixLQUFaLEtBQXNCLElBQXBDOztBQUVBO0FBQ0EsTUFBTUcsYUFBYVYsR0FBR1csWUFBSCxDQUFnQlQsS0FBS1UsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLHNCQUFyQixDQUFoQixDQUFuQjs7QUFFQTtBQUNBLE1BQU1DLFlBQVlkLEdBQUdXLFlBQUgsQ0FBZ0JULEtBQUtVLElBQUwsQ0FBVUMsU0FBVixFQUFxQix1QkFBckIsQ0FBaEIsQ0FBbEI7O0FBRUE7Ozs7Ozs7Ozs7QUFVQUUsUUFBUUMsV0FBUixHQUFzQixDQUFDLEVBQUVDLE1BQU0sSUFBUixFQUFjQyxNQUFNLEVBQXBCLEVBQXdCQyxNQUFNLEVBQTlCLEVBQWtDQyxRQUFRLEVBQTFDLEVBQThDQyxPQUFPLEVBQXJELEVBQXlEQyxPQUFPLEVBQWhFLEtBQXVFLEVBQXhFLEtBQStFO0FBQ25HLFFBQU1DLFFBQVFuQixJQUFJb0IsSUFBSixDQUFTO0FBQ3JCQyxTQUFNdEIsTUFEZTtBQUVyQnVCLFNBQUssa0JBRmdCO0FBR3JCUixPQUhxQjtBQUlyQkMsT0FKcUI7QUFLckJHLFFBTHFCO0FBTXJCRCxRQU5xQjtBQU9yQkosU0FBTVUsS0FBS0MsS0FBTCxDQUFXQyxLQUFLQyxHQUFMLEtBQWEsSUFBeEIsSUFBZ0NiLEdBUGpCO0FBUXJCRztBQVJxQixHQUFULEVBU1hWLFVBVFcsRUFTQztBQUNicUIsZUFBVztBQURFLEdBVEQsQ0FBZDtBQVlBLFNBQU9SLEtBQVA7QUFDRCxDQWREOztBQWdCQTs7Ozs7O0FBTUFSLFFBQVFpQixXQUFSLEdBQXNCVCxTQUFTbkIsSUFBSTZCLE1BQUosQ0FBV1YsS0FBWCxFQUFrQlQsU0FBbEIsQ0FBL0I7O0FBRUFDLFFBQVFtQixXQUFSLEdBQXVCQyxHQUFELElBQVM7QUFDN0I7QUFDQSxRQUFNLElBQUlDLEtBQUosQ0FBVUQsR0FBVixDQUFOO0FBQ0QsQ0FIRCIsImZpbGUiOiJ1dGlscy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyAgID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCB1dWlkID0gcmVxdWlyZSgndXVpZC92NCcpO1xuY29uc3Qgand0ICA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xuXG52YXIgUHJldHR5RXJyb3IgPSByZXF1aXJlKCdwcmV0dHktZXJyb3InKTtcbnZhciBwZSA9IG5ldyBQcmV0dHlFcnJvcigpO1xuXG4vKiogU3VwcHJlc3MgdHJhY2luZyBmb3IgdGhpbmdzIGxpa2UgdW5pdCB0ZXN0aW5nICovXG5jb25zdCBERUJVRyA9IHByb2Nlc3MuZW52LkRFQlVHID09PSB0cnVlXG5cbi8qKiBQcml2YXRlIGNlcnRpZmljYXRlIHVzZWQgZm9yIHNpZ25pbmcgSlNPTiBXZWJUb2tlbnMgKi9cbmNvbnN0IHByaXZhdGVLZXkgPSBmcy5yZWFkRmlsZVN5bmMocGF0aC5qb2luKF9fZGlybmFtZSwgJ2NlcnRzL3ByaXZhdGVrZXkucGVtJykpO1xuXG4vKiogUHVibGljIGNlcnRpZmljYXRlIHVzZWQgZm9yIHZlcmlmaWNhdGlvbi4gIE5vdGU6IHlvdSBjb3VsZCBhbHNvIHVzZSB0aGUgcHJpdmF0ZSBrZXkgKi9cbmNvbnN0IHB1YmxpY0tleSA9IGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnY2VydHMvY2VydGlmaWNhdGUucGVtJykpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzaWduZWQgSlNPTiBXZWJUb2tlbiBhbmQgcmV0dXJucyBpdC4gIFV0aWxpemVzIHRoZSBwcml2YXRlIGNlcnRpZmljYXRlIHRvIGNyZWF0ZVxuICogdGhlIHNpZ25lZCBKV1QuICBGb3IgbW9yZSBvcHRpb25zIGFuZCBvdGhlciB0aGluZ3MgeW91IGNhbiBjaGFuZ2UgdGhpcyB0bywgcGxlYXNlIHNlZTpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hdXRoMC9ub2RlLWpzb253ZWJ0b2tlblxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gZXhwIC0gVGhlIG51bWJlciBvZiBzZWNvbmRzIGZvciB0aGlzIHRva2VuIHRvIGV4cGlyZS4gIEJ5IGRlZmF1bHQgaXQgd2lsbCBiZSA2MFxuICogICAgICAgICAgICAgICAgICAgICAgICBtaW51dGVzICgzNjAwIHNlY29uZHMpIGlmIG5vdGhpbmcgaXMgcGFzc2VkIGluLlxuICogQHBhcmFtICB7U3RyaW5nfSBzdWIgLSBUaGUgc3ViamVjdCBvciBpZGVudGl0eSBvZiB0aGUgdG9rZW4uXG4gKiBAcmV0dXJuIHtTdHJpbmd9IFRoZSBKV1QgVG9rZW5cbiAqL1xuZXhwb3J0cy5jcmVhdGVUb2tlbiA9ICh7IGV4cCA9IDM2MDAsIHN1YiA9ICcnLCBhdWQgPSAnJywgc2NvcGUgPSAnJywgbmFtZSA9ICcnLCByb2xlID0gJycgfSA9IHt9KSA9PiB7XG4gIGNvbnN0IHRva2VuID0gand0LnNpZ24oe1xuICAgIGp0aSA6IHV1aWQoKSxcbiAgICBpc3M6ICdhdXRoLmFyYXNhYWMub3JnJyxcbiAgICBzdWIsXG4gICAgYXVkLFxuICAgIHJvbGUsXG4gICAgbmFtZSxcbiAgICBleHAgOiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSArIGV4cCxcbiAgICBzY29wZVxuICB9LCBwcml2YXRlS2V5LCB7XG4gICAgYWxnb3JpdGhtOiAnUlMyNTYnLFxuICB9KTtcbiAgcmV0dXJuIHRva2VuO1xufTtcblxuLyoqXG4gKiBWZXJpZmllcyB0aGUgdG9rZW4gdGhyb3VnaCB0aGUgand0IGxpYnJhcnkgdXNpbmcgdGhlIHB1YmxpYyBjZXJ0aWZpY2F0ZS5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9IHRva2VuIC0gVGhlIHRva2VuIHRvIHZlcmlmeVxuICogQHRocm93cyAge0Vycm9yfSBFcnJvciBpZiB0aGUgdG9rZW4gY291bGQgbm90IGJlIHZlcmlmaWVkXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgdG9rZW4gZGVjb2RlZCBhbmQgdmVyaWZpZWRcbiAqL1xuZXhwb3J0cy52ZXJpZnlUb2tlbiA9IHRva2VuID0+IGp3dC52ZXJpZnkodG9rZW4sIHB1YmxpY0tleSk7XG5cbmV4cG9ydHMubG9nQW5kVGhyb3cgPSAobXNnKSA9PiB7XG4gIC8vIGlmIChERUJVRykgY29uc29sZS50cmFjZShtc2cpXG4gIHRocm93IG5ldyBFcnJvcihtc2cpXG59XG5cblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "uuid",
        "jwt",
        "PrettyError",
        "pe",
        "DEBUG",
        "process",
        "env",
        "privateKey",
        "readFileSync",
        "join",
        "__dirname",
        "publicKey",
        "exports",
        "createToken",
        "exp",
        "sub",
        "aud",
        "scope",
        "name",
        "role",
        "token",
        "sign",
        "jti",
        "iss",
        "Math",
        "floor",
        "Date",
        "now",
        "algorithm",
        "verifyToken",
        "verify",
        "logAndThrow",
        "msg",
        "Error"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,KAAOC,QAAQ,IAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,OAAOF,QAAQ,SAAR,CAAb;AACA,MAAMG,MAAOH,QAAQ,cAAR,CAAb;;AAEA,IAAII,cAAcJ,QAAQ,cAAR,CAAlB;AACA,IAAIK,KAAK,IAAID,WAAJ,EAAT;;AAEA;AACA,MAAME,QAAQC,QAAQC,GAAR,CAAYF,KAAZ,KAAsB,IAApC;;AAEA;AACA,MAAMG,aAAaV,GAAGW,YAAH,CAAgBT,KAAKU,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAhB,CAAnB;;AAEA;AACA,MAAMC,YAAYd,GAAGW,YAAH,CAAgBT,KAAKU,IAAL,CAAUC,SAAV,EAAqB,uBAArB,CAAhB,CAAlB;;AAEA;;;;;;;;;;AAUAE,QAAQC,WAAR,GAAsB,CAAC,EAAEC,MAAM,IAAR,EAAcC,MAAM,EAApB,EAAwBC,MAAM,EAA9B,EAAkCC,QAAQ,EAA1C,EAA8CC,OAAO,EAArD,EAAyDC,OAAO,EAAhE,KAAuE,EAAxE,KAA+E;AACnG,QAAMC,QAAQnB,IAAIoB,IAAJ,CAAS;AACrBC,SAAMtB,MADe;AAErBuB,SAAK,kBAFgB;AAGrBR,OAHqB;AAIrBC,OAJqB;AAKrBG,QALqB;AAMrBD,QANqB;AAOrBJ,SAAMU,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAxB,IAAgCb,GAPjB;AAQrBG;AARqB,GAAT,EASXV,UATW,EASC;AACbqB,eAAW;AADE,GATD,CAAd;AAYA,SAAOR,KAAP;AACD,CAdD;;AAgBA;;;;;;AAMAR,QAAQiB,WAAR,GAAsBT,SAASnB,IAAI6B,MAAJ,CAAWV,KAAX,EAAkBT,SAAlB,CAA/B;;AAEAC,QAAQmB,WAAR,GAAuBC,GAAD,IAAS;AAC7B;AACA,QAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD,CAHD",
      "file": "utils.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst fs   = require('fs');\nconst path = require('path');\nconst uuid = require('uuid/v4');\nconst jwt  = require('jsonwebtoken');\n\nvar PrettyError = require('pretty-error');\nvar pe = new PrettyError();\n\n/** Suppress tracing for things like unit testing */\nconst DEBUG = process.env.DEBUG === true\n\n/** Private certificate used for signing JSON WebTokens */\nconst privateKey = fs.readFileSync(path.join(__dirname, 'certs/privatekey.pem'));\n\n/** Public certificate used for verification.  Note: you could also use the private key */\nconst publicKey = fs.readFileSync(path.join(__dirname, 'certs/certificate.pem'));\n\n/**\n * Creates a signed JSON WebToken and returns it.  Utilizes the private certificate to create\n * the signed JWT.  For more options and other things you can change this to, please see:\n * https://github.com/auth0/node-jsonwebtoken\n *\n * @param  {Number} exp - The number of seconds for this token to expire.  By default it will be 60\n *                        minutes (3600 seconds) if nothing is passed in.\n * @param  {String} sub - The subject or identity of the token.\n * @return {String} The JWT Token\n */\nexports.createToken = ({ exp = 3600, sub = '', aud = '', scope = '', name = '', role = '' } = {}) => {\n  const token = jwt.sign({\n    jti : uuid(),\n    iss: 'auth.arasaac.org',\n    sub,\n    aud,\n    role,\n    name,\n    exp : Math.floor(Date.now() / 1000) + exp,\n    scope\n  }, privateKey, {\n    algorithm: 'RS256',\n  });\n  return token;\n};\n\n/**\n * Verifies the token through the jwt library using the public certificate.\n * @param   {String} token - The token to verify\n * @throws  {Error} Error if the token could not be verified\n * @returns {Object} The token decoded and verified\n */\nexports.verifyToken = token => jwt.verify(token, publicKey);\n\nexports.logAndThrow = (msg) => {\n  // if (DEBUG) console.trace(msg)\n  throw new Error(msg)\n}\n\n\n"
      ]
    },
    "mtime": 1518626869000
  },
  "{\"filename\":\"/app/oauth2.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/oauth2.js",
      "filenameRelative": "/app/oauth2.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "oauth2.js",
      "sourceFileName": "oauth2.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "oauth2"
    },
    "ignored": false,
    "code": "'use strict';\n\n// Register supported grant types.\n//\n// OAuth 2.0 specifies a framework that allows users to grant client\n// applications limited access to their protected resources.  It does this\n// through a process of the user granting access, and the client exchanging the\n// grant for an access token.\n\nconst config = require('./config');\nconst db = require('./db');\nconst User = require('./db/users');\nconst Client = require('./db/clients');\nconst login = require('connect-ensure-login');\nconst oauth2orize = require('oauth2orize');\nconst passport = require('passport');\nconst { createToken, logAndThrow } = require('./utils');\nconst validate = require('./validate');\n// var changeHeaderAuthSecret = require('./authHeader');\n\n// create OAuth 2.0 server\nconst server = oauth2orize.createServer();\n\n// var oauth2orizeFacebook = require('oauth2orize-facebook');\nvar oauth2orizeFacebook = require('./oauth2orize-facebook');\nvar oauth2orizeGoogle = require('./oauth2orize-google');\n\n// Configured expiresIn\nconst expiresIn = {\n  expires_in: config.token.expiresIn\n};\n\n/**\n * Grant authorization codes\n *\n * The callback takes the `client` requesting authorization, the `redirectURI`\n * (which is used as a verifier in the subsequent exchange), the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a code,\n * which is bound to these values, and will be exchanged for an access token.\n */\nserver.grant(oauth2orize.grant.code((client, redirectURI, user, ares, done) => {\n  const code = createToken({ sub: user.username, aud: client.name, name: user.username, role: user.role, exp: config.codeToken.expiresIn });\n  db.authorizationCodes.save(code, client.id, redirectURI, user.id, client.scope).then(() => done(null, code)).catch(err => done(err));\n}));\n\n/**\n * Grant implicit authorization.\n *\n * The callback takes the `client` requesting authorization, the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a token,\n * which is bound to these values.\n */\nserver.grant(oauth2orize.grant.token((client, user, ares, done) => {\n  const scope = getScopes(user);\n  const token = createToken({ sub: user.username, aud: client.name, name: user.username, scope, role: user.role, exp: config.token.expiresIn });\n  const expiration = config.token.calculateExpirationDate();\n\n  db.accessTokens.save(token, expiration, user.id, client.id, client.scope).then(() => done(null, token, expiresIn)).catch(err => done(err));\n}));\n\n/**\n * Exchange authorization codes for access tokens.\n *\n * The callback accepts the `client`, which is exchanging `code` and any\n * `redirectURI` from the authorization request for verification.  If these values\n * are validated, the application issues an access token on behalf of the user who\n * authorized the code.\n */\nserver.exchange(oauth2orize.exchange.code((client, code, redirectURI, done) => {\n  db.authorizationCodes.delete(code).then(authCode => validate.authCode(code, authCode, client, redirectURI)).then(authCode => validate.generateTokens(authCode)).then(tokens => {\n    if (tokens.length === 1) {\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging auth code for tokens');\n  }).catch(() => done(null, false));\n}));\n\n/**\n * Get scope (api priviledges) for a user role\n *\n * \n */\n\nconst getScopes = user => {\n  if (user.role === 'admin') return ['read', 'write', 'translate', 'admin'];else if (user.role === 'translator') return ['read', 'write', 'translate'];else return ['read', 'write'];\n};\n\n/**\n * Exchange user id and password for access tokens.\n *\n * The callback accepts the `client`, which is exchanging the user's name and password\n * from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the user who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.password((client, username, password, scope, done) => {\n  /* this should be use just by our app, other spa should use implicit grant */\n  User.findOne({ email: username }).then(user => user ? user.validate(password) : logAndThrow(`User ${username} not found`)).then(user => {\n    const scope = getScopes(user);\n    return validate.generateTokens({ scope, userID: user._id, clientID: client.clientId });\n  }).then(tokens => {\n    if (tokens === false) {\n      return done(null, false);\n    }\n    if (tokens.length === 1) {\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging password for tokens');\n  }).catch(err => {\n    console.log(err);done(null, false);\n  });\n}));\n\n/**\n * Exchange the client id and password/secret for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id and\n * password/secret from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the client who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.clientCredentials((client, scope, done) => {\n  const token = createToken({ sub: client.name, aud: client.name, name: client.name, role: 'app', exp: config.token.expiresIn });\n  const expiration = config.token.calculateExpirationDate();\n  // Pass in a null for user id since there is no user when using this grant type\n  db.accessTokens.save(token, expiration, null, client.id, scope).then(() => done(null, token, null, expiresIn)).catch(err => done(err));\n}));\n\n/**\n * Exchange the refresh token for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id from the token\n * request for verification.  If this value is validated, the application issues an access\n * token on behalf of the client who authorized the code\n */\nserver.exchange(oauth2orize.exchange.refreshToken((client, refreshToken, scope, done) => {\n  db.refreshTokens.find(refreshToken).then(foundRefreshToken => validate.refreshToken(foundRefreshToken, refreshToken, client)).then(foundRefreshToken => validate.generateToken(foundRefreshToken)).then(token => done(null, token, null, expiresIn)).catch(() => done(null, false));\n}));\n\nserver.exchange(oauth2orizeFacebook(function (client, profile, scope, done) {\n\n  //if user does not exists we create it\n  const query = { 'facebook.id': profile.id };\n  const update = { lastLogin: new Date(), 'facebook.name': profile.name, 'facebook.id': profile.id, 'facebook.picture': `https://graph.facebook.com/${profile.id}/picture?type=large` };\n  const options = { upsert: true, new: true, setDefaultsOnInsert: true };\n\n  User.findOneAndUpdate(query, update, options).then(user => {\n    const scope = getScopes(user);\n    return validate.generateTokens({ scope, userID: user._id, clientID: client.clientId });\n  }).then(tokens => {\n    if (tokens === false) {\n      return done(null, false);\n    }\n    if (tokens.length === 1) {\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging facebook authcode for tokens');\n  }).catch(err => {\n    console.log(err);done(null, false);\n  });\n}));\n\nvar option = {\n  googleConfig: {}\n};\nserver.exchange(oauth2orizeGoogle(option, function (client, profile, scope, done) {\n  //if user does not exists we create it\n  const query = { 'google.id': profile.id };\n  const update = { lastLogin: new Date(), 'google.name': profile.name, 'google.id': profile.sub, 'google.picture': profile.picture };\n  const options = { upsert: true, new: true, setDefaultsOnInsert: true };\n\n  User.findOneAndUpdate(query, update, options).then(user => {\n    const scope = getScopes(user);\n    return validate.generateTokens({ scope, userID: user._id, clientID: client.clientId });\n  }).then(tokens => {\n    if (tokens === false) {\n      return done(null, false);\n    }\n    if (tokens.length === 1) {\n      return done(null, tokens[0], null, expiresIn);\n    }\n    if (tokens.length === 2) {\n      return done(null, tokens[0], tokens[1], expiresIn);\n    }\n    throw new Error('Error exchanging google authcode for tokens');\n  }).catch(err => {\n    console.log(err);done(null, false);\n  });\n}));\n\n/*\n * User authorization endpoint\n *\n * `authorization` middleware accepts a `validate` callback which is\n * responsible for validating the client making the authorization request.  In\n * doing so, is recommended that the `redirectURI` be checked against a\n * registered value, although security requirements may vary accross\n * implementations.  Once validated, the `done` callback must be invoked with\n * a `client` instance, as well as the `redirectURI` to which the user will be\n * redirected after an authorization decision is obtained.\n *\n * This middleware simply initializes a new authorization transaction.  It is\n * the application's responsibility to authenticate the user and render a dialog\n * to obtain their approval (displaying details about the client requesting\n * authorization).  We accomplish that here by routing through `ensureLoggedIn()`\n * first, and rendering the `dialog` view.\n */\nexports.authorization = [login.ensureLoggedIn(), server.authorization((clientID, redirectURI, scope, done) => {\n  Client.findOne({ clientId: clientID }).then(client => {\n    if (!client) logAndThrow(`Client with id ${clientId} not found`);\n    client.scope = scope;\n    done(null, client, redirectURI);\n  })\n  // WARNING: For security purposes, it is highly advisable to check that\n  // redirectURI provided by the client matches one registered with the\n  // server.  For simplicity, this example does not. You have been\n  // warned.  \n  .catch(err => done(err));\n}), (req, res, next) => {\n  // Render the decision dialog if the client isn't a trusted client\n  // TODO:  Make a mechanism so that if this isn't a trusted client, the user can\n  // record that they have consented but also make a mechanism so that if the user\n  // revokes access to any of the clients then they will have to re-consent.\n  Client.findOne({ clientId: req.query.client_id }).then(client => {\n    if (client != null && client.trustedClient && client.trustedClient === true) {\n      // This is how we short call the decision like the dialog below does\n      server.decision({\n        loadTransaction: false\n      }, (serverReq, callback) => {\n        callback(null, { allow: true });\n      })(req, res, next);\n    } else {\n      res.render('dialog', {\n        transactionID: req.oauth2.transactionID,\n        user: req.user,\n        client: req.oauth2.client\n      });\n    }\n  }).catch(() => res.render('dialog', {\n    transactionID: req.oauth2.transactionID,\n    user: req.user,\n    client: req.oauth2.client\n  }));\n}];\n\n/**\n * User decision endpoint\n *\n * `decision` middleware processes a user's decision to allow or deny access\n * requested by a client application.  Based on the grant type requested by the\n * client, the above grant middleware configured above will be invoked to send\n * a response.\n */\nexports.decision = [login.ensureLoggedIn(), server.decision()];\n\n/**\n * Token endpoint\n *\n * `token` middleware handles client requests to exchange authorization grants\n * for access tokens.  Based on the grant type being exchanged, the above\n * exchange middleware will be invoked to handle the request.  Clients must\n * authenticate when making requests to this endpoint.\n */\nexports.token = [\n// changeHeaderAuthSecret({ clientId: 'abc123', secretId: 'ttttt' }),\npassport.authenticate(['basic', 'oauth2-client-password'], { session: false }), server.token(), server.errorHandler()];\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\nserver.serializeClient((client, done) => done(null, client.clientId));\n\nserver.deserializeClient((id, done) => {\n  Client.findOne({ clientId: id }, (err, client) => {\n    if (err) done(err);\n    if (!client) done(null, null);\n    done(null, client);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "oauth2.js"
      ],
      "names": [
        "config",
        "require",
        "db",
        "User",
        "Client",
        "login",
        "oauth2orize",
        "passport",
        "createToken",
        "logAndThrow",
        "validate",
        "server",
        "createServer",
        "oauth2orizeFacebook",
        "oauth2orizeGoogle",
        "expiresIn",
        "expires_in",
        "token",
        "grant",
        "code",
        "client",
        "redirectURI",
        "user",
        "ares",
        "done",
        "sub",
        "username",
        "aud",
        "name",
        "role",
        "exp",
        "codeToken",
        "authorizationCodes",
        "save",
        "id",
        "scope",
        "then",
        "catch",
        "err",
        "getScopes",
        "expiration",
        "calculateExpirationDate",
        "accessTokens",
        "exchange",
        "delete",
        "authCode",
        "generateTokens",
        "tokens",
        "length",
        "Error",
        "password",
        "findOne",
        "email",
        "userID",
        "_id",
        "clientID",
        "clientId",
        "console",
        "log",
        "clientCredentials",
        "refreshToken",
        "refreshTokens",
        "find",
        "foundRefreshToken",
        "generateToken",
        "profile",
        "query",
        "update",
        "lastLogin",
        "Date",
        "options",
        "upsert",
        "new",
        "setDefaultsOnInsert",
        "findOneAndUpdate",
        "option",
        "googleConfig",
        "picture",
        "exports",
        "authorization",
        "ensureLoggedIn",
        "req",
        "res",
        "next",
        "client_id",
        "trustedClient",
        "decision",
        "loadTransaction",
        "serverReq",
        "callback",
        "allow",
        "render",
        "transactionID",
        "oauth2",
        "authenticate",
        "session",
        "errorHandler",
        "serializeClient",
        "deserializeClient"
      ],
      "mappings": "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",
      "file": "oauth2.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\n// Register supported grant types.\n//\n// OAuth 2.0 specifies a framework that allows users to grant client\n// applications limited access to their protected resources.  It does this\n// through a process of the user granting access, and the client exchanging the\n// grant for an access token.\n\nconst config = require('./config');\nconst db = require('./db');\nconst User = require('./db/users')\nconst Client = require('./db/clients')\nconst login = require('connect-ensure-login');\nconst oauth2orize = require('oauth2orize');\nconst passport = require('passport');\nconst { createToken, logAndThrow } = require('./utils');\nconst validate = require('./validate');\n// var changeHeaderAuthSecret = require('./authHeader');\n\n// create OAuth 2.0 server\nconst server = oauth2orize.createServer();\n\n// var oauth2orizeFacebook = require('oauth2orize-facebook');\nvar oauth2orizeFacebook = require('./oauth2orize-facebook');\nvar oauth2orizeGoogle = require('./oauth2orize-google');\n\n// Configured expiresIn\nconst expiresIn = {\n  expires_in: config.token.expiresIn\n};\n\n/**\n * Grant authorization codes\n *\n * The callback takes the `client` requesting authorization, the `redirectURI`\n * (which is used as a verifier in the subsequent exchange), the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a code,\n * which is bound to these values, and will be exchanged for an access token.\n */\nserver.grant(oauth2orize.grant.code((client, redirectURI, user, ares, done) => {\n  const code = createToken({sub: user.username, aud: client.name, name: user.username, role: user.role, exp: config.codeToken.expiresIn});\n  db\n    .authorizationCodes\n    .save(code, client.id, redirectURI, user.id, client.scope)\n    .then(() => done(null, code))\n    .catch(err => done(err));\n}));\n\n/**\n * Grant implicit authorization.\n *\n * The callback takes the `client` requesting authorization, the authenticated\n * `user` granting access, and their response, which contains approved scope,\n * duration, etc. as parsed by the application.  The application issues a token,\n * which is bound to these values.\n */\nserver.grant(oauth2orize.grant.token((client, user, ares, done) => {\n  const scope = getScopes(user)\n  const token = createToken({ sub: user.username, aud: client.name, name: user.username, scope, role: user.role, exp: config.token.expiresIn});\n  const expiration = config\n    .token\n    .calculateExpirationDate();\n\n  db\n    .accessTokens\n    .save(token, expiration, user.id, client.id, client.scope)\n    .then(() => done(null, token, expiresIn))\n    .catch(err => done(err));\n}));\n\n/**\n * Exchange authorization codes for access tokens.\n *\n * The callback accepts the `client`, which is exchanging `code` and any\n * `redirectURI` from the authorization request for verification.  If these values\n * are validated, the application issues an access token on behalf of the user who\n * authorized the code.\n */\nserver.exchange(oauth2orize.exchange.code((client, code, redirectURI, done) => {\n  db\n    .authorizationCodes\n    .delete(code)\n    .then(authCode => validate.authCode(code, authCode, client, redirectURI))\n    .then(authCode => validate.generateTokens(authCode))\n    .then((tokens) => {\n      if (tokens.length === 1) {\n        return done(null, tokens[0], null, expiresIn);\n      }\n      if (tokens.length === 2) {\n        return done(null, tokens[0], tokens[1], expiresIn);\n      }\n      throw new Error('Error exchanging auth code for tokens');\n    })\n    .catch(() => done(null, false));\n}));\n\n/**\n * Get scope (api priviledges) for a user role\n *\n * \n */\n\nconst getScopes = (user) => { \n  if (user.role === 'admin') return ['read', 'write', 'translate', 'admin']\n  else if (user.role === 'translator') return ['read', 'write', 'translate']\n  else return ['read', 'write']\n}\n\n/**\n * Exchange user id and password for access tokens.\n *\n * The callback accepts the `client`, which is exchanging the user's name and password\n * from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the user who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.password((client, username, password, scope, done) => {\n  /* this should be use just by our app, other spa should use implicit grant */\n  User\n    .findOne({email: username})\n    .then(user => user\n      ? user.validate(password)\n      : logAndThrow(`User ${username} not found`))\n    .then(user => {\n      const scope = getScopes(user)\n      return validate.generateTokens({scope, userID: user._id, clientID: client.clientId})\n    })\n    .then((tokens) => {\n      if (tokens === false) {\n        return done(null, false);\n      }\n      if (tokens.length === 1) {\n        return done(null, tokens[0], null, expiresIn);\n      }\n      if (tokens.length === 2) {\n        return done(null, tokens[0], tokens[1], expiresIn);\n      }\n      throw new Error('Error exchanging password for tokens');\n    })\n    .catch((err) => {console.log(err); done(null, false)});\n}));\n\n/**\n * Exchange the client id and password/secret for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id and\n * password/secret from the token request for verification. If these values are validated, the\n * application issues an access token on behalf of the client who authorized the code.\n */\nserver.exchange(oauth2orize.exchange.clientCredentials((client, scope, done) => {\n  const token = createToken({sub: client.name, aud: client.name, name: client.name, role: 'app', exp: config.token.expiresIn});\n  const expiration = config\n    .token\n    .calculateExpirationDate();\n  // Pass in a null for user id since there is no user when using this grant type\n  db\n    .accessTokens\n    .save(token, expiration, null, client.id, scope)\n    .then(() => done(null, token, null, expiresIn))\n    .catch(err => done(err));\n}));\n\n\n/**\n * Exchange the refresh token for an access token.\n *\n * The callback accepts the `client`, which is exchanging the client's id from the token\n * request for verification.  If this value is validated, the application issues an access\n * token on behalf of the client who authorized the code\n */\nserver.exchange(oauth2orize.exchange.refreshToken((client, refreshToken, scope, done) => {\n  db\n    .refreshTokens\n    .find(refreshToken)\n    .then(foundRefreshToken => validate.refreshToken(foundRefreshToken, refreshToken, client))\n    .then(foundRefreshToken => validate.generateToken(foundRefreshToken))\n    .then(token => done(null, token, null, expiresIn))\n    .catch(() => done(null, false));\n}));\n\nserver.exchange(oauth2orizeFacebook(function (client, profile, scope, done) {\n\n  //if user does not exists we create it\n  const query = {'facebook.id': profile.id}\n  const update = { lastLogin: new Date(), 'facebook.name': profile.name, 'facebook.id': profile.id, 'facebook.picture': `https://graph.facebook.com/${profile.id}/picture?type=large` }\n  const options = { upsert: true, new: true, setDefaultsOnInsert: true }\n\n  User\n    .findOneAndUpdate(query, update, options)\n    .then(user => {\n      const scope = getScopes(user)\n      return validate.generateTokens({scope, userID: user._id, clientID: client.clientId})\n    })\n    .then((tokens) => {\n      if (tokens === false) {\n        return done(null, false);\n      }\n      if (tokens.length === 1) {\n        return done(null, tokens[0], null, expiresIn);\n      }\n      if (tokens.length === 2) {\n        return done(null, tokens[0], tokens[1], expiresIn);\n      }\n      throw new Error('Error exchanging facebook authcode for tokens');\n    })\n    .catch((err) => {console.log(err); done(null, false)});\n}));\n\n\nvar option = {\n  googleConfig: {\n  }\n}\nserver.exchange(oauth2orizeGoogle(option, function (client, profile, scope, done) {\n  //if user does not exists we create it\n  const query = {'google.id': profile.id}\n  const update = { lastLogin: new Date(), 'google.name': profile.name, 'google.id': profile.sub, 'google.picture': profile.picture }\n  const options = { upsert: true, new: true, setDefaultsOnInsert: true }\n\n  User\n    .findOneAndUpdate(query, update, options)\n    .then(user => {\n      const scope = getScopes(user)\n      return validate.generateTokens({scope, userID: user._id, clientID: client.clientId})\n    })\n    .then((tokens) => {\n      if (tokens === false) {\n        return done(null, false);\n      }\n      if (tokens.length === 1) {\n        return done(null, tokens[0], null, expiresIn);\n      }\n      if (tokens.length === 2) {\n        return done(null, tokens[0], tokens[1], expiresIn);\n      }\n      throw new Error('Error exchanging google authcode for tokens');\n    })\n    .catch((err) => {console.log(err); done(null, false)});\n}));\n\n/*\n * User authorization endpoint\n *\n * `authorization` middleware accepts a `validate` callback which is\n * responsible for validating the client making the authorization request.  In\n * doing so, is recommended that the `redirectURI` be checked against a\n * registered value, although security requirements may vary accross\n * implementations.  Once validated, the `done` callback must be invoked with\n * a `client` instance, as well as the `redirectURI` to which the user will be\n * redirected after an authorization decision is obtained.\n *\n * This middleware simply initializes a new authorization transaction.  It is\n * the application's responsibility to authenticate the user and render a dialog\n * to obtain their approval (displaying details about the client requesting\n * authorization).  We accomplish that here by routing through `ensureLoggedIn()`\n * first, and rendering the `dialog` view.\n */\nexports.authorization = [\n  login.ensureLoggedIn(),\n  server.authorization((clientID, redirectURI, scope, done) => {\n    Client.findOne({ clientId: clientID })\n    .then(client => {\n      if (!client) logAndThrow(`Client with id ${clientId} not found`)\n      client.scope = scope\n      done(null, client, redirectURI)\n    })\n    // WARNING: For security purposes, it is highly advisable to check that\n    // redirectURI provided by the client matches one registered with the\n    // server.  For simplicity, this example does not. You have been\n    // warned.  \n    .catch(err => done(err));\n  }),\n  (req, res, next) => {\n    // Render the decision dialog if the client isn't a trusted client\n    // TODO:  Make a mechanism so that if this isn't a trusted client, the user can\n    // record that they have consented but also make a mechanism so that if the user\n    // revokes access to any of the clients then they will have to re-consent.\n    Client.findOne({ clientId: req.query.client_id })\n      .then((client) => { \n        if (client != null && client.trustedClient && client.trustedClient === true) {\n          // This is how we short call the decision like the dialog below does\n          server.decision({\n            loadTransaction: false\n          }, (serverReq, callback) => {\n            callback(null, {allow: true});\n          })(req, res, next);\n        } else {\n          res.render('dialog', {\n            transactionID: req.oauth2.transactionID,\n            user: req.user,\n            client: req.oauth2.client\n          });\n        }\n      })\n      .catch(() => res.render('dialog', {\n        transactionID: req.oauth2.transactionID,\n        user: req.user,\n        client: req.oauth2.client\n      }));\n  }\n];\n\n/**\n * User decision endpoint\n *\n * `decision` middleware processes a user's decision to allow or deny access\n * requested by a client application.  Based on the grant type requested by the\n * client, the above grant middleware configured above will be invoked to send\n * a response.\n */\nexports.decision = [\n  login.ensureLoggedIn(),\n  server.decision()\n];\n\n/**\n * Token endpoint\n *\n * `token` middleware handles client requests to exchange authorization grants\n * for access tokens.  Based on the grant type being exchanged, the above\n * exchange middleware will be invoked to handle the request.  Clients must\n * authenticate when making requests to this endpoint.\n */\nexports.token = [\n  // changeHeaderAuthSecret({ clientId: 'abc123', secretId: 'ttttt' }),\n  passport.authenticate([\n    'basic', 'oauth2-client-password'\n  ], {session: false}),\n  server.token(),\n  server.errorHandler()\n];\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\nserver.serializeClient((client, done) => done(null, client.clientId));\n\nserver.deserializeClient((id, done) => {\n  Client.findOne({ clientId: id }, (err, client) => {\n    if (err) done(err)\n    if (!client) done(null, null)\n    done(null, client)\n  })\n})\n"
      ]
    },
    "mtime": 1520545034000
  },
  "{\"filename\":\"/app/validate.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/validate.js",
      "filenameRelative": "/app/validate.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "validate.js",
      "sourceFileName": "validate.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "validate"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst config = require('./config');\nconst db = require('./db');\nconst utils = require('./utils');\nconst process = require('process');\nconst User = require('./db/users');\n/** Validate object to attach all functions to  */\nconst validate = Object.create(null);\n\n/**\n * Given a client and a client secret this return the client if it exists and its clientSecret\n * matches, otherwise this will throw an error\n * @param   {Object} client       - The client profile\n * @param   {String} clientSecret - The client's secret\n * @throws  {Error}  If the client or the client secret does not match\n * @returns {Object} The client if valid\n */\nvalidate.client = (client, clientSecret) => {\n  validate.clientExists(client);\n  if (client.clientSecret !== clientSecret) {\n    validate.logAndThrow('Client secret does not match');\n  }\n  return client;\n};\n\n/**\n * Given a client this will return the client if it exists , otherwise this will throw an error\n * @param   {Object} client - The client profile\n * @throws  {Error}  If the client does not exist\n * @returns {Object} The client if valid\n */\nvalidate.clientExists = client => {\n  if (client == null) {\n    validate.logAndThrow('Client does not exist');\n  }\n  return client;\n};\n\n/**\n * Given a token and accessToken this will return either the user or the client associated with\n * the token if valid.  Otherwise this will throw.\n * @param   {Object}  token       - The token\n * @param   {Object}  accessToken - The access token\n * @throws  {Error}   If the token is not valid\n * @returns {Promise} Resolved with the user or client associated with the token if valid\n */\nvalidate.token = (token, accessToken) => {\n  utils.verifyToken(accessToken);\n\n  // token is a user token\n  if (token.userID != null) {\n    return User.findOne({ id: token.userID }).then(user => user ? user : logAndThrow(`User ${username} not found`));\n  }\n  // token is a client token\n  return db.clients.find(token.clientID).then(client => validate.clientExists(client)).then(client => client);\n};\n\n/**\n * Given a refresh token and client this will return the refresh token if it exists and the client\n * id's match otherwise this will throw an error\n * throw an error\n * @param   {Object} token        - The token record from the DB\n * @param   {Object} refreshToken - The raw refresh token\n * @param   {Object} client       - The client profile\n * @throws  {Error}  If the refresh token does not exist or the client id's don't match\n * @returns {Object} The refresh token if valid\n */\nvalidate.refreshToken = (token, refreshToken, client) => {\n  utils.verifyToken(refreshToken);\n  if (client.id !== token.clientID) {\n    validate.logAndThrow('RefreshToken clientID does not match client id given');\n  }\n  return refreshToken;\n};\n\n/**\n * Given a auth code, client, and redirectURI this will return the auth code if it exists and is\n * not 0, the client id matches it, and the redirectURI matches it, otherwise this will throw an\n * error.\n * @param  {Object}  code        - The auth code record from the DB\n * @param  {Object}  authCode    - The raw auth code\n * @param  {Object}  client      - The client profile\n * @param  {Object}  redirectURI - The redirectURI to check against\n * @throws {Error}   If the auth code does not exist or is zero or does not match the client or\n *                   the redirectURI\n * @returns {Object} The auth code token if valid\n */\nvalidate.authCode = (code, authCode, client, redirectURI) => {\n  utils.verifyToken(code);\n  if (client.id !== authCode.clientID) {\n    validate.logAndThrow('AuthCode clientID does not match client id given');\n  }\n  if (redirectURI !== authCode.redirectURI) {\n    validate.logAndThrow('AuthCode redirectURI does not match redirectURI given');\n  }\n  return authCode;\n};\n\n/**\n * I mimic openid connect's offline scope to determine if we send a refresh token or not\n * @param   {Array}   scope - The scope to check if is a refresh token if it has 'offline_access'\n * @returns {Boolean} true If the scope is offline_access, otherwise false\n */\nvalidate.isRefreshToken = ({ scope }) => scope != null && scope.indexOf('offline_access') === 0;\n\n/**\n * Given a userId, clientID, and scope this will generate a refresh token, save it, and return it\n * @param   {Object}  userId   - The user profile\n * @throws  {Object}  clientID - the client profile\n * @throws  {Object}  scope    - the scope\n * @returns {Promise} The resolved refresh token after saved\n */\nvalidate.generateRefreshToken = ({ userId, clientID, scope }) => {\n  const refreshToken = utils.createToken({ sub: userId, exp: config.refreshToken.expiresIn });\n  return db.refreshTokens.save(refreshToken, userId, clientID, scope).then(() => refreshToken);\n};\n\n/**\n * Given an auth code this will generate a access token, save that token and then return it.\n * @param   {userID}   userID   - The user profile\n * @param   {clientID} clientID - The client profile\n * @param   {scope}    scope    - The scope\n * @returns {Promise}  The resolved refresh token after saved\n */\nvalidate.generateToken = ({ userID, clientID, scope }) => {\n  const token = utils.createToken({ sub: userID, exp: config.token.expiresIn, scope });\n  const expiration = config.token.calculateExpirationDate();\n  return db.accessTokens.save(token, expiration, userID, clientID, scope).then(() => token);\n};\n\n/**\n * Given an auth code this will generate a access and refresh token, save both of those and return\n * them if the auth code indicates to return both.  Otherwise only an access token will be returned.\n * @param   {Object}  authCode - The auth code\n * @throws  {Error}   If the auth code does not exist or is zero\n * @returns {Promise} The resolved refresh and access tokens as an array\n */\nvalidate.generateTokens = authCode => {\n  if (validate.isRefreshToken(authCode)) {\n    return Promise.all([validate.generateToken(authCode), validate.generateRefreshToken(authCode)]);\n  }\n  return Promise.all([validate.generateToken(authCode)]);\n};\n\n/**\n * Given a token this will resolve a promise with the token if it is not null and the expiration\n * date has not been exceeded.  Otherwise this will throw a HTTP error.\n * @param   {Object}  token - The token to check\n * @returns {Promise} Resolved with the token if it is a valid token otherwise rejected with error\n */\nvalidate.tokenForHttp = token => new Promise((resolve, reject) => {\n  try {\n    utils.verifyToken(token);\n  } catch (err) {\n    const error = new Error('invalid_token');\n    error.status = 400;\n    reject(error);\n  }\n  resolve(token);\n});\n\n/**\n * Given a token this will return the token if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} token - The token to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.tokenExistsForHttp = token => {\n  if (token == null) {\n    const error = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return token;\n};\n\n/**\n * Given a client this will return the client if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} client - The client to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.clientExistsForHttp = client => {\n  if (client == null) {\n    const error = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return client;\n};\n\nmodule.exports = validate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "validate.js"
      ],
      "names": [
        "config",
        "require",
        "db",
        "utils",
        "process",
        "User",
        "validate",
        "Object",
        "create",
        "client",
        "clientSecret",
        "clientExists",
        "logAndThrow",
        "token",
        "accessToken",
        "verifyToken",
        "userID",
        "findOne",
        "id",
        "then",
        "user",
        "username",
        "clients",
        "find",
        "clientID",
        "refreshToken",
        "authCode",
        "code",
        "redirectURI",
        "isRefreshToken",
        "scope",
        "indexOf",
        "generateRefreshToken",
        "userId",
        "createToken",
        "sub",
        "exp",
        "expiresIn",
        "refreshTokens",
        "save",
        "generateToken",
        "expiration",
        "calculateExpirationDate",
        "accessTokens",
        "generateTokens",
        "Promise",
        "all",
        "tokenForHttp",
        "resolve",
        "reject",
        "err",
        "error",
        "Error",
        "status",
        "tokenExistsForHttp",
        "clientExistsForHttp",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,SAASC,QAAQ,UAAR,CAAf;AACA,MAAMC,KAAKD,QAAQ,MAAR,CAAX;AACA,MAAME,QAAQF,QAAQ,SAAR,CAAd;AACA,MAAMG,UAAUH,QAAQ,SAAR,CAAhB;AACA,MAAMI,OAAOJ,QAAQ,YAAR,CAAb;AACA;AACA,MAAMK,WAAWC,OAAOC,MAAP,CAAc,IAAd,CAAjB;;AAEA;;;;;;;;AAQAF,SAASG,MAAT,GAAkB,CAACA,MAAD,EAASC,YAAT,KAA0B;AAC1CJ,WAASK,YAAT,CAAsBF,MAAtB;AACA,MAAIA,OAAOC,YAAP,KAAwBA,YAA5B,EAA0C;AACxCJ,aAASM,WAAT,CAAqB,8BAArB;AACD;AACD,SAAOH,MAAP;AACD,CAND;;AAQA;;;;;;AAMAH,SAASK,YAAT,GAAyBF,MAAD,IAAY;AAClC,MAAIA,UAAU,IAAd,EAAoB;AAClBH,aAASM,WAAT,CAAqB,uBAArB;AACD;AACD,SAAOH,MAAP;AACD,CALD;;AAOA;;;;;;;;AAQAH,SAASO,KAAT,GAAiB,CAACA,KAAD,EAAQC,WAAR,KAAwB;AACvCX,QAAMY,WAAN,CAAkBD,WAAlB;;AAEA;AACA,MAAID,MAAMG,MAAN,IAAgB,IAApB,EAA0B;AACxB,WAAOX,KACJY,OADI,CACI,EAACC,IAAIL,MAAMG,MAAX,EADJ,EAEJG,IAFI,CAECC,QAAQA,OACVA,IADU,GAEVR,YAAa,QAAOS,QAAS,YAA7B,CAJC,CAAP;AAKD;AACD;AACA,SAAOnB,GACJoB,OADI,CAEJC,IAFI,CAECV,MAAMW,QAFP,EAGJL,IAHI,CAGCV,UAAUH,SAASK,YAAT,CAAsBF,MAAtB,CAHX,EAIJU,IAJI,CAICV,UAAUA,MAJX,CAAP;AAKD,CAjBD;;AAmBA;;;;;;;;;;AAUAH,SAASmB,YAAT,GAAwB,CAACZ,KAAD,EAAQY,YAAR,EAAsBhB,MAAtB,KAAiC;AACvDN,QAAMY,WAAN,CAAkBU,YAAlB;AACA,MAAIhB,OAAOS,EAAP,KAAcL,MAAMW,QAAxB,EAAkC;AAChClB,aAASM,WAAT,CAAqB,sDAArB;AACD;AACD,SAAOa,YAAP;AACD,CAND;;AAQA;;;;;;;;;;;;AAYAnB,SAASoB,QAAT,GAAoB,CAACC,IAAD,EAAOD,QAAP,EAAiBjB,MAAjB,EAAyBmB,WAAzB,KAAyC;AAC3DzB,QAAMY,WAAN,CAAkBY,IAAlB;AACA,MAAIlB,OAAOS,EAAP,KAAcQ,SAASF,QAA3B,EAAqC;AACnClB,aAASM,WAAT,CAAqB,kDAArB;AACD;AACD,MAAIgB,gBAAgBF,SAASE,WAA7B,EAA0C;AACxCtB,aAASM,WAAT,CAAqB,uDAArB;AACD;AACD,SAAOc,QAAP;AACD,CATD;;AAWA;;;;;AAKApB,SAASuB,cAAT,GAA0B,CAAC,EAACC,KAAD,EAAD,KAAaA,SAAS,IAAT,IAAiBA,MAAMC,OAAN,CAAc,gBAAd,MAAoC,CAA5F;;AAEA;;;;;;;AAOAzB,SAAS0B,oBAAT,GAAgC,CAAC,EAACC,MAAD,EAAST,QAAT,EAAmBM,KAAnB,EAAD,KAA+B;AAC7D,QAAML,eAAetB,MAAM+B,WAAN,CAAkB,EAACC,KAAKF,MAAN,EAAcG,KAAKpC,OAAOyB,YAAP,CAAoBY,SAAvC,EAAlB,CAArB;AACA,SAAOnC,GACJoC,aADI,CAEJC,IAFI,CAECd,YAFD,EAEeQ,MAFf,EAEuBT,QAFvB,EAEiCM,KAFjC,EAGJX,IAHI,CAGC,MAAMM,YAHP,CAAP;AAID,CAND;;AAQA;;;;;;;AAOAnB,SAASkC,aAAT,GAAyB,CAAC,EAACxB,MAAD,EAASQ,QAAT,EAAmBM,KAAnB,EAAD,KAA+B;AACtD,QAAMjB,QAAQV,MAAM+B,WAAN,CAAkB,EAACC,KAAKnB,MAAN,EAAcoB,KAAKpC,OAAOa,KAAP,CAAawB,SAAhC,EAA2CP,KAA3C,EAAlB,CAAd;AACA,QAAMW,aAAazC,OAChBa,KADgB,CAEhB6B,uBAFgB,EAAnB;AAGA,SAAOxC,GACJyC,YADI,CAEJJ,IAFI,CAEC1B,KAFD,EAEQ4B,UAFR,EAEoBzB,MAFpB,EAE4BQ,QAF5B,EAEsCM,KAFtC,EAGJX,IAHI,CAGC,MAAMN,KAHP,CAAP;AAID,CATD;;AAWA;;;;;;;AAOAP,SAASsC,cAAT,GAA2BlB,QAAD,IAAc;AACtC,MAAIpB,SAASuB,cAAT,CAAwBH,QAAxB,CAAJ,EAAuC;AACrC,WAAOmB,QAAQC,GAAR,CAAY,CACjBxC,SAASkC,aAAT,CAAuBd,QAAvB,CADiB,EAEjBpB,SAAS0B,oBAAT,CAA8BN,QAA9B,CAFiB,CAAZ,CAAP;AAID;AACD,SAAOmB,QAAQC,GAAR,CAAY,CAACxC,SAASkC,aAAT,CAAuBd,QAAvB,CAAD,CAAZ,CAAP;AACD,CARD;;AAUA;;;;;;AAMApB,SAASyC,YAAT,GAAwBlC,SAAS,IAAIgC,OAAJ,CAAY,CAACG,OAAD,EAAUC,MAAV,KAAqB;AAChE,MAAI;AACF9C,UAAMY,WAAN,CAAkBF,KAAlB;AACD,GAFD,CAEE,OAAOqC,GAAP,EAAY;AACZ,UAAMC,QAAQ,IAAIC,KAAJ,CAAU,eAAV,CAAd;AACAD,UAAME,MAAN,GAAe,GAAf;AACAJ,WAAOE,KAAP;AACD;AACDH,UAAQnC,KAAR;AACD,CATgC,CAAjC;;AAWA;;;;;;;AAOAP,SAASgD,kBAAT,GAA+BzC,KAAD,IAAW;AACvC,MAAIA,SAAS,IAAb,EAAmB;AACjB,UAAMsC,QAAQ,IAAIC,KAAJ,CAAU,eAAV,CAAd;AACAD,UAAME,MAAN,GAAe,GAAf;AACA,UAAMF,KAAN;AACD;AACD,SAAOtC,KAAP;AACD,CAPD;;AASA;;;;;;;AAOAP,SAASiD,mBAAT,GAAgC9C,MAAD,IAAY;AACzC,MAAIA,UAAU,IAAd,EAAoB;AAClB,UAAM0C,QAAQ,IAAIC,KAAJ,CAAU,eAAV,CAAd;AACAD,UAAME,MAAN,GAAe,GAAf;AACA,UAAMF,KAAN;AACD;AACD,SAAO1C,MAAP;AACD,CAPD;;AASA+C,OAAOC,OAAP,GAAiBnD,QAAjB",
      "file": "validate.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst config = require('./config');\nconst db = require('./db');\nconst utils = require('./utils');\nconst process = require('process');\nconst User = require('./db/users')\n/** Validate object to attach all functions to  */\nconst validate = Object.create(null);\n\n/**\n * Given a client and a client secret this return the client if it exists and its clientSecret\n * matches, otherwise this will throw an error\n * @param   {Object} client       - The client profile\n * @param   {String} clientSecret - The client's secret\n * @throws  {Error}  If the client or the client secret does not match\n * @returns {Object} The client if valid\n */\nvalidate.client = (client, clientSecret) => {\n  validate.clientExists(client);\n  if (client.clientSecret !== clientSecret) {\n    validate.logAndThrow('Client secret does not match');\n  }\n  return client;\n};\n\n/**\n * Given a client this will return the client if it exists , otherwise this will throw an error\n * @param   {Object} client - The client profile\n * @throws  {Error}  If the client does not exist\n * @returns {Object} The client if valid\n */\nvalidate.clientExists = (client) => {\n  if (client == null) {\n    validate.logAndThrow('Client does not exist');\n  }\n  return client;\n};\n\n/**\n * Given a token and accessToken this will return either the user or the client associated with\n * the token if valid.  Otherwise this will throw.\n * @param   {Object}  token       - The token\n * @param   {Object}  accessToken - The access token\n * @throws  {Error}   If the token is not valid\n * @returns {Promise} Resolved with the user or client associated with the token if valid\n */\nvalidate.token = (token, accessToken) => {\n  utils.verifyToken(accessToken);\n\n  // token is a user token\n  if (token.userID != null) {\n    return User\n      .findOne({id: token.userID})\n      .then(user => user\n        ? user\n        : logAndThrow(`User ${username} not found`))\n  }\n  // token is a client token\n  return db\n    .clients\n    .find(token.clientID)\n    .then(client => validate.clientExists(client))\n    .then(client => client);\n};\n\n/**\n * Given a refresh token and client this will return the refresh token if it exists and the client\n * id's match otherwise this will throw an error\n * throw an error\n * @param   {Object} token        - The token record from the DB\n * @param   {Object} refreshToken - The raw refresh token\n * @param   {Object} client       - The client profile\n * @throws  {Error}  If the refresh token does not exist or the client id's don't match\n * @returns {Object} The refresh token if valid\n */\nvalidate.refreshToken = (token, refreshToken, client) => {\n  utils.verifyToken(refreshToken);\n  if (client.id !== token.clientID) {\n    validate.logAndThrow('RefreshToken clientID does not match client id given');\n  }\n  return refreshToken;\n};\n\n/**\n * Given a auth code, client, and redirectURI this will return the auth code if it exists and is\n * not 0, the client id matches it, and the redirectURI matches it, otherwise this will throw an\n * error.\n * @param  {Object}  code        - The auth code record from the DB\n * @param  {Object}  authCode    - The raw auth code\n * @param  {Object}  client      - The client profile\n * @param  {Object}  redirectURI - The redirectURI to check against\n * @throws {Error}   If the auth code does not exist or is zero or does not match the client or\n *                   the redirectURI\n * @returns {Object} The auth code token if valid\n */\nvalidate.authCode = (code, authCode, client, redirectURI) => {\n  utils.verifyToken(code);\n  if (client.id !== authCode.clientID) {\n    validate.logAndThrow('AuthCode clientID does not match client id given');\n  }\n  if (redirectURI !== authCode.redirectURI) {\n    validate.logAndThrow('AuthCode redirectURI does not match redirectURI given');\n  }\n  return authCode;\n};\n\n/**\n * I mimic openid connect's offline scope to determine if we send a refresh token or not\n * @param   {Array}   scope - The scope to check if is a refresh token if it has 'offline_access'\n * @returns {Boolean} true If the scope is offline_access, otherwise false\n */\nvalidate.isRefreshToken = ({scope}) => scope != null && scope.indexOf('offline_access') === 0;\n\n/**\n * Given a userId, clientID, and scope this will generate a refresh token, save it, and return it\n * @param   {Object}  userId   - The user profile\n * @throws  {Object}  clientID - the client profile\n * @throws  {Object}  scope    - the scope\n * @returns {Promise} The resolved refresh token after saved\n */\nvalidate.generateRefreshToken = ({userId, clientID, scope}) => {\n  const refreshToken = utils.createToken({sub: userId, exp: config.refreshToken.expiresIn});\n  return db\n    .refreshTokens\n    .save(refreshToken, userId, clientID, scope)\n    .then(() => refreshToken);\n};\n\n/**\n * Given an auth code this will generate a access token, save that token and then return it.\n * @param   {userID}   userID   - The user profile\n * @param   {clientID} clientID - The client profile\n * @param   {scope}    scope    - The scope\n * @returns {Promise}  The resolved refresh token after saved\n */\nvalidate.generateToken = ({userID, clientID, scope}) => {\n  const token = utils.createToken({sub: userID, exp: config.token.expiresIn, scope});\n  const expiration = config\n    .token\n    .calculateExpirationDate();\n  return db\n    .accessTokens\n    .save(token, expiration, userID, clientID, scope)\n    .then(() => token);\n};\n\n/**\n * Given an auth code this will generate a access and refresh token, save both of those and return\n * them if the auth code indicates to return both.  Otherwise only an access token will be returned.\n * @param   {Object}  authCode - The auth code\n * @throws  {Error}   If the auth code does not exist or is zero\n * @returns {Promise} The resolved refresh and access tokens as an array\n */\nvalidate.generateTokens = (authCode) => {\n  if (validate.isRefreshToken(authCode)) {\n    return Promise.all([\n      validate.generateToken(authCode),\n      validate.generateRefreshToken(authCode)\n    ]);\n  }\n  return Promise.all([validate.generateToken(authCode)]);\n};\n\n/**\n * Given a token this will resolve a promise with the token if it is not null and the expiration\n * date has not been exceeded.  Otherwise this will throw a HTTP error.\n * @param   {Object}  token - The token to check\n * @returns {Promise} Resolved with the token if it is a valid token otherwise rejected with error\n */\nvalidate.tokenForHttp = token => new Promise((resolve, reject) => {\n  try {\n    utils.verifyToken(token);\n  } catch (err) {\n    const error = new Error('invalid_token');\n    error.status = 400;\n    reject(error);\n  }\n  resolve(token);\n});\n\n/**\n * Given a token this will return the token if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} token - The token to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.tokenExistsForHttp = (token) => {\n  if (token == null) {\n    const error = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return token;\n};\n\n/**\n * Given a client this will return the client if it is not null. Otherwise this will throw a\n * HTTP error.\n * @param   {Object} client - The client to check\n * @throws  {Error}  If the client is null\n * @returns {Object} The client if it is a valid client\n */\nvalidate.clientExistsForHttp = (client) => {\n  if (client == null) {\n    const error = new Error('invalid_token');\n    error.status = 400;\n    throw error;\n  }\n  return client;\n};\n\nmodule.exports = validate;\n"
      ]
    },
    "mtime": 1518626536000
  },
  "{\"filename\":\"/app/site.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/site.js",
      "filenameRelative": "/app/site.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "site.js",
      "sourceFileName": "site.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "site"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst login = require('connect-ensure-login');\nconst passport = require('passport');\n\n/**\n * Render the index.ejs or index-with-code.js depending on if query param has code or not\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.index = (req, res) => {\n  if (!req.query.code) {\n    res.render('index');\n  } else {\n    res.render('index-with-code');\n  }\n};\n\n/**\n * Render the login.ejs\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.loginForm = (req, res) => {\n  res.render('login');\n};\n\n/**\n * Authenticate normal login page using strategy of authenticate\n */\nexports.login = [passport.authenticate('local', { successReturnToOrRedirect: '/', failureRedirect: '/login' })];\n\n/**\n * Logout of the system and redirect to root\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.logout = (req, res) => {\n  req.logout();\n  res.redirect('/');\n};\n\n/**\n * Render account.ejs but ensure the user is logged in before rendering\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.account = [login.ensureLoggedIn(), (req, res) => {\n  res.render('account', { user: req.user });\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdGUuanMiXSwibmFtZXMiOlsibG9naW4iLCJyZXF1aXJlIiwicGFzc3BvcnQiLCJleHBvcnRzIiwiaW5kZXgiLCJyZXEiLCJyZXMiLCJxdWVyeSIsImNvZGUiLCJyZW5kZXIiLCJsb2dpbkZvcm0iLCJhdXRoZW50aWNhdGUiLCJzdWNjZXNzUmV0dXJuVG9PclJlZGlyZWN0IiwiZmFpbHVyZVJlZGlyZWN0IiwibG9nb3V0IiwicmVkaXJlY3QiLCJhY2NvdW50IiwiZW5zdXJlTG9nZ2VkSW4iLCJ1c2VyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxRQUFXQyxRQUFRLHNCQUFSLENBQWpCO0FBQ0EsTUFBTUMsV0FBV0QsUUFBUSxVQUFSLENBQWpCOztBQUVBOzs7Ozs7QUFNQUUsUUFBUUMsS0FBUixHQUFnQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUM1QixNQUFJLENBQUNELElBQUlFLEtBQUosQ0FBVUMsSUFBZixFQUFxQjtBQUNuQkYsUUFBSUcsTUFBSixDQUFXLE9BQVg7QUFDRCxHQUZELE1BRU87QUFDTEgsUUFBSUcsTUFBSixDQUFXLGlCQUFYO0FBQ0Q7QUFDRixDQU5EOztBQVFBOzs7Ozs7QUFNQU4sUUFBUU8sU0FBUixHQUFvQixDQUFDTCxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNoQ0EsTUFBSUcsTUFBSixDQUFXLE9BQVg7QUFDRCxDQUZEOztBQUlBOzs7QUFHQU4sUUFBUUgsS0FBUixHQUFnQixDQUNkRSxTQUFTUyxZQUFULENBQXNCLE9BQXRCLEVBQStCLEVBQUVDLDJCQUEyQixHQUE3QixFQUFrQ0MsaUJBQWlCLFFBQW5ELEVBQS9CLENBRGMsQ0FBaEI7O0FBSUE7Ozs7OztBQU1BVixRQUFRVyxNQUFSLEdBQWlCLENBQUNULEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzdCRCxNQUFJUyxNQUFKO0FBQ0FSLE1BQUlTLFFBQUosQ0FBYSxHQUFiO0FBQ0QsQ0FIRDs7QUFLQTs7Ozs7O0FBTUFaLFFBQVFhLE9BQVIsR0FBa0IsQ0FDaEJoQixNQUFNaUIsY0FBTixFQURnQixFQUVoQixDQUFDWixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNaQSxNQUFJRyxNQUFKLENBQVcsU0FBWCxFQUFzQixFQUFFUyxNQUFNYixJQUFJYSxJQUFaLEVBQXRCO0FBQ0QsQ0FKZSxDQUFsQiIsImZpbGUiOiJzaXRlLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGxvZ2luICAgID0gcmVxdWlyZSgnY29ubmVjdC1lbnN1cmUtbG9naW4nKTtcbmNvbnN0IHBhc3Nwb3J0ID0gcmVxdWlyZSgncGFzc3BvcnQnKTtcblxuLyoqXG4gKiBSZW5kZXIgdGhlIGluZGV4LmVqcyBvciBpbmRleC13aXRoLWNvZGUuanMgZGVwZW5kaW5nIG9uIGlmIHF1ZXJ5IHBhcmFtIGhhcyBjb2RlIG9yIG5vdFxuICogQHBhcmFtICAge09iamVjdH0gcmVxIC0gVGhlIHJlcXVlc3RcbiAqIEBwYXJhbSAgIHtPYmplY3R9IHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZXhwb3J0cy5pbmRleCA9IChyZXEsIHJlcykgPT4ge1xuICBpZiAoIXJlcS5xdWVyeS5jb2RlKSB7XG4gICAgcmVzLnJlbmRlcignaW5kZXgnKTtcbiAgfSBlbHNlIHtcbiAgICByZXMucmVuZGVyKCdpbmRleC13aXRoLWNvZGUnKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZW5kZXIgdGhlIGxvZ2luLmVqc1xuICogQHBhcmFtICAge09iamVjdH0gcmVxIC0gVGhlIHJlcXVlc3RcbiAqIEBwYXJhbSAgIHtPYmplY3R9IHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZXhwb3J0cy5sb2dpbkZvcm0gPSAocmVxLCByZXMpID0+IHtcbiAgcmVzLnJlbmRlcignbG9naW4nKTtcbn07XG5cbi8qKlxuICogQXV0aGVudGljYXRlIG5vcm1hbCBsb2dpbiBwYWdlIHVzaW5nIHN0cmF0ZWd5IG9mIGF1dGhlbnRpY2F0ZVxuICovXG5leHBvcnRzLmxvZ2luID0gW1xuICBwYXNzcG9ydC5hdXRoZW50aWNhdGUoJ2xvY2FsJywgeyBzdWNjZXNzUmV0dXJuVG9PclJlZGlyZWN0OiAnLycsIGZhaWx1cmVSZWRpcmVjdDogJy9sb2dpbicgfSksXG5dO1xuXG4vKipcbiAqIExvZ291dCBvZiB0aGUgc3lzdGVtIGFuZCByZWRpcmVjdCB0byByb290XG4gKiBAcGFyYW0gICB7T2JqZWN0fSAgIHJlcSAtIFRoZSByZXF1ZXN0XG4gKiBAcGFyYW0gICB7T2JqZWN0fSAgIHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZXhwb3J0cy5sb2dvdXQgPSAocmVxLCByZXMpID0+IHtcbiAgcmVxLmxvZ291dCgpO1xuICByZXMucmVkaXJlY3QoJy8nKTtcbn07XG5cbi8qKlxuICogUmVuZGVyIGFjY291bnQuZWpzIGJ1dCBlbnN1cmUgdGhlIHVzZXIgaXMgbG9nZ2VkIGluIGJlZm9yZSByZW5kZXJpbmdcbiAqIEBwYXJhbSAgIHtPYmplY3R9ICAgcmVxIC0gVGhlIHJlcXVlc3RcbiAqIEBwYXJhbSAgIHtPYmplY3R9ICAgcmVzIC0gVGhlIHJlc3BvbnNlXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICovXG5leHBvcnRzLmFjY291bnQgPSBbXG4gIGxvZ2luLmVuc3VyZUxvZ2dlZEluKCksXG4gIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5yZW5kZXIoJ2FjY291bnQnLCB7IHVzZXI6IHJlcS51c2VyIH0pO1xuICB9LFxuXTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "site.js"
      ],
      "names": [
        "login",
        "require",
        "passport",
        "exports",
        "index",
        "req",
        "res",
        "query",
        "code",
        "render",
        "loginForm",
        "authenticate",
        "successReturnToOrRedirect",
        "failureRedirect",
        "logout",
        "redirect",
        "account",
        "ensureLoggedIn",
        "user"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,QAAWC,QAAQ,sBAAR,CAAjB;AACA,MAAMC,WAAWD,QAAQ,UAAR,CAAjB;;AAEA;;;;;;AAMAE,QAAQC,KAAR,GAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,MAAI,CAACD,IAAIE,KAAJ,CAAUC,IAAf,EAAqB;AACnBF,QAAIG,MAAJ,CAAW,OAAX;AACD,GAFD,MAEO;AACLH,QAAIG,MAAJ,CAAW,iBAAX;AACD;AACF,CAND;;AAQA;;;;;;AAMAN,QAAQO,SAAR,GAAoB,CAACL,GAAD,EAAMC,GAAN,KAAc;AAChCA,MAAIG,MAAJ,CAAW,OAAX;AACD,CAFD;;AAIA;;;AAGAN,QAAQH,KAAR,GAAgB,CACdE,SAASS,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,2BAA2B,GAA7B,EAAkCC,iBAAiB,QAAnD,EAA/B,CADc,CAAhB;;AAIA;;;;;;AAMAV,QAAQW,MAAR,GAAiB,CAACT,GAAD,EAAMC,GAAN,KAAc;AAC7BD,MAAIS,MAAJ;AACAR,MAAIS,QAAJ,CAAa,GAAb;AACD,CAHD;;AAKA;;;;;;AAMAZ,QAAQa,OAAR,GAAkB,CAChBhB,MAAMiB,cAAN,EADgB,EAEhB,CAACZ,GAAD,EAAMC,GAAN,KAAc;AACZA,MAAIG,MAAJ,CAAW,SAAX,EAAsB,EAAES,MAAMb,IAAIa,IAAZ,EAAtB;AACD,CAJe,CAAlB",
      "file": "site.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst login    = require('connect-ensure-login');\nconst passport = require('passport');\n\n/**\n * Render the index.ejs or index-with-code.js depending on if query param has code or not\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.index = (req, res) => {\n  if (!req.query.code) {\n    res.render('index');\n  } else {\n    res.render('index-with-code');\n  }\n};\n\n/**\n * Render the login.ejs\n * @param   {Object} req - The request\n * @param   {Object} res - The response\n * @returns {undefined}\n */\nexports.loginForm = (req, res) => {\n  res.render('login');\n};\n\n/**\n * Authenticate normal login page using strategy of authenticate\n */\nexports.login = [\n  passport.authenticate('local', { successReturnToOrRedirect: '/', failureRedirect: '/login' }),\n];\n\n/**\n * Logout of the system and redirect to root\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.logout = (req, res) => {\n  req.logout();\n  res.redirect('/');\n};\n\n/**\n * Render account.ejs but ensure the user is logged in before rendering\n * @param   {Object}   req - The request\n * @param   {Object}   res - The response\n * @returns {undefined}\n */\nexports.account = [\n  login.ensureLoggedIn(),\n  (req, res) => {\n    res.render('account', { user: req.user });\n  },\n];\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/token.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/token.js",
      "filenameRelative": "/app/token.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "token.js",
      "sourceFileName": "token.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "token"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst db = require('./db');\nconst Client = require('./db/clients');\nconst validate = require('./validate');\n\n/**\n * This endpoint is for verifying a token.  This has the same signature to\n * Google's token verification system from:\n * https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\n *\n * You call it like so\n * https://localhost:3000/api/tokeninfo?access_token=someToken\n *\n * If the token is valid you get returned\n * {\n *   \"audience\": someClientId\n * }\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing only\n */\nexports.info = (req, res) => validate.tokenForHttp(req.query.access_token).then(() => db.accessTokens.find(req.query.access_token)).then(token => validate.tokenExistsForHttp(token)).then(token => Client.findOne({ clientId: token.clientID }).then(client => validate.clientExistsForHttp(client)).then(client => ({ client, token }))).then(({ client, token }) => {\n  const expirationLeft = Math.floor((token.expirationDate.getTime() - Date.now()) / 1000);\n  res.json({ audience: client.clientId, expires_in: expirationLeft });\n}).catch(err => {\n  res.status(err.status);\n  res.json({ error: err.message });\n});\n\n/**\n * This endpoint is for revoking a token.  This has the same signature to\n * Google's token revocation system from:\n * https://developers.google.com/identity/protocols/OAuth2WebServer\n *\n * You call it like so\n * https://localhost:3000/api/revoke?token=someToken\n *\n * If the token is valid you get returned a 200 and an empty object\n * {}\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * This will first try to delete the token as an access token.  If one is not found it will try and\n * delete the token as a refresh token.  If both fail then an error is returned.\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing\n */\nexports.revoke = (req, res) => validate.tokenForHttp(req.query.token).then(() => db.accessTokens.delete(req.query.token)).then(token => {\n  if (token == null) {\n    return db.refreshTokens.delete(req.query.token);\n  }\n  return token;\n}).then(tokenDeleted => validate.tokenExistsForHttp(tokenDeleted)).then(() => {\n  res.json({});\n}).catch(err => {\n  res.status(err.status);\n  res.json({ error: err.message });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuLmpzIl0sIm5hbWVzIjpbImRiIiwicmVxdWlyZSIsIkNsaWVudCIsInZhbGlkYXRlIiwiZXhwb3J0cyIsImluZm8iLCJyZXEiLCJyZXMiLCJ0b2tlbkZvckh0dHAiLCJxdWVyeSIsImFjY2Vzc190b2tlbiIsInRoZW4iLCJhY2Nlc3NUb2tlbnMiLCJmaW5kIiwidG9rZW4iLCJ0b2tlbkV4aXN0c0Zvckh0dHAiLCJmaW5kT25lIiwiY2xpZW50SWQiLCJjbGllbnRJRCIsImNsaWVudCIsImNsaWVudEV4aXN0c0Zvckh0dHAiLCJleHBpcmF0aW9uTGVmdCIsIk1hdGgiLCJmbG9vciIsImV4cGlyYXRpb25EYXRlIiwiZ2V0VGltZSIsIkRhdGUiLCJub3ciLCJqc29uIiwiYXVkaWVuY2UiLCJleHBpcmVzX2luIiwiY2F0Y2giLCJlcnIiLCJzdGF0dXMiLCJlcnJvciIsIm1lc3NhZ2UiLCJyZXZva2UiLCJkZWxldGUiLCJyZWZyZXNoVG9rZW5zIiwidG9rZW5EZWxldGVkIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxLQUFXQyxRQUFRLE1BQVIsQ0FBakI7QUFDQSxNQUFNQyxTQUFTRCxRQUFRLGNBQVIsQ0FBZjtBQUNBLE1BQU1FLFdBQVdGLFFBQVEsWUFBUixDQUFqQjs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBRyxRQUFRQyxJQUFSLEdBQWUsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQ2JKLFNBQVNLLFlBQVQsQ0FBc0JGLElBQUlHLEtBQUosQ0FBVUMsWUFBaEMsRUFDQ0MsSUFERCxDQUNNLE1BQU1YLEdBQUdZLFlBQUgsQ0FBZ0JDLElBQWhCLENBQXFCUCxJQUFJRyxLQUFKLENBQVVDLFlBQS9CLENBRFosRUFFQ0MsSUFGRCxDQUVNRyxTQUFTWCxTQUFTWSxrQkFBVCxDQUE0QkQsS0FBNUIsQ0FGZixFQUdDSCxJQUhELENBR01HLFNBQ0paLE9BQU9jLE9BQVAsQ0FBZSxFQUFFQyxVQUFVSCxNQUFNSSxRQUFsQixFQUFmLEVBQ0NQLElBREQsQ0FDTVEsVUFBVWhCLFNBQVNpQixtQkFBVCxDQUE2QkQsTUFBN0IsQ0FEaEIsRUFFQ1IsSUFGRCxDQUVNUSxXQUFXLEVBQUVBLE1BQUYsRUFBVUwsS0FBVixFQUFYLENBRk4sQ0FKRixFQU9DSCxJQVBELENBT00sQ0FBQyxFQUFFUSxNQUFGLEVBQVVMLEtBQVYsRUFBRCxLQUF1QjtBQUMzQixRQUFNTyxpQkFBaUJDLEtBQUtDLEtBQUwsQ0FBVyxDQUFDVCxNQUFNVSxjQUFOLENBQXFCQyxPQUFyQixLQUFpQ0MsS0FBS0MsR0FBTCxFQUFsQyxJQUFnRCxJQUEzRCxDQUF2QjtBQUNBcEIsTUFBSXFCLElBQUosQ0FBUyxFQUFFQyxVQUFXVixPQUFPRixRQUFwQixFQUE4QmEsWUFBYVQsY0FBM0MsRUFBVDtBQUNELENBVkQsRUFXQ1UsS0FYRCxDQVdRQyxHQUFELElBQVM7QUFDZHpCLE1BQUkwQixNQUFKLENBQVdELElBQUlDLE1BQWY7QUFDQTFCLE1BQUlxQixJQUFKLENBQVMsRUFBRU0sT0FBT0YsSUFBSUcsT0FBYixFQUFUO0FBQ0QsQ0FkRCxDQURGOztBQWtCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBL0IsUUFBUWdDLE1BQVIsR0FBaUIsQ0FBQzlCLEdBQUQsRUFBTUMsR0FBTixLQUNmSixTQUFTSyxZQUFULENBQXNCRixJQUFJRyxLQUFKLENBQVVLLEtBQWhDLEVBQ0NILElBREQsQ0FDTSxNQUFNWCxHQUFHWSxZQUFILENBQWdCeUIsTUFBaEIsQ0FBdUIvQixJQUFJRyxLQUFKLENBQVVLLEtBQWpDLENBRFosRUFFQ0gsSUFGRCxDQUVPRyxLQUFELElBQVc7QUFDZixNQUFJQSxTQUFTLElBQWIsRUFBbUI7QUFDakIsV0FBT2QsR0FBR3NDLGFBQUgsQ0FBaUJELE1BQWpCLENBQXdCL0IsSUFBSUcsS0FBSixDQUFVSyxLQUFsQyxDQUFQO0FBQ0Q7QUFDRCxTQUFPQSxLQUFQO0FBQ0QsQ0FQRCxFQVFDSCxJQVJELENBUU00QixnQkFBZ0JwQyxTQUFTWSxrQkFBVCxDQUE0QndCLFlBQTVCLENBUnRCLEVBU0M1QixJQVRELENBU00sTUFBTTtBQUNWSixNQUFJcUIsSUFBSixDQUFTLEVBQVQ7QUFDRCxDQVhELEVBWUNHLEtBWkQsQ0FZUUMsR0FBRCxJQUFTO0FBQ2R6QixNQUFJMEIsTUFBSixDQUFXRCxJQUFJQyxNQUFmO0FBQ0ExQixNQUFJcUIsSUFBSixDQUFTLEVBQUVNLE9BQU9GLElBQUlHLE9BQWIsRUFBVDtBQUNELENBZkQsQ0FERiIsImZpbGUiOiJ0b2tlbi5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBkYiAgICAgICA9IHJlcXVpcmUoJy4vZGInKTtcbmNvbnN0IENsaWVudCA9IHJlcXVpcmUoJy4vZGIvY2xpZW50cycpXG5jb25zdCB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vdmFsaWRhdGUnKTtcblxuLyoqXG4gKiBUaGlzIGVuZHBvaW50IGlzIGZvciB2ZXJpZnlpbmcgYSB0b2tlbi4gIFRoaXMgaGFzIHRoZSBzYW1lIHNpZ25hdHVyZSB0b1xuICogR29vZ2xlJ3MgdG9rZW4gdmVyaWZpY2F0aW9uIHN5c3RlbSBmcm9tOlxuICogaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vYWNjb3VudHMvZG9jcy9PQXV0aDJVc2VyQWdlbnQjdmFsaWRhdGV0b2tlblxuICpcbiAqIFlvdSBjYWxsIGl0IGxpa2Ugc29cbiAqIGh0dHBzOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Rva2VuaW5mbz9hY2Nlc3NfdG9rZW49c29tZVRva2VuXG4gKlxuICogSWYgdGhlIHRva2VuIGlzIHZhbGlkIHlvdSBnZXQgcmV0dXJuZWRcbiAqIHtcbiAqICAgXCJhdWRpZW5jZVwiOiBzb21lQ2xpZW50SWRcbiAqIH1cbiAqXG4gKiBJZiB0aGUgdG9rZW4gaXMgbm90IHZhbGlkIHlvdSBnZXQgYSA0MDAgU3RhdHVzIGFuZCB0aGlzIHJldHVybmVkXG4gKiB7XG4gKiAgIFwiZXJyb3JcIjogXCJpbnZhbGlkX3Rva2VuXCJcbiAqIH1cbiAqIEBwYXJhbSAgIHtPYmplY3R9ICByZXEgLSBUaGUgcmVxdWVzdFxuICogQHBhcmFtICAge09iamVjdH0gIHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge1Byb21pc2V9IFJldHVybnMgdGhlIHByb21pc2UgZm9yIHRlc3Rpbmcgb25seVxuICovXG5leHBvcnRzLmluZm8gPSAocmVxLCByZXMpID0+XG4gIHZhbGlkYXRlLnRva2VuRm9ySHR0cChyZXEucXVlcnkuYWNjZXNzX3Rva2VuKVxuICAudGhlbigoKSA9PiBkYi5hY2Nlc3NUb2tlbnMuZmluZChyZXEucXVlcnkuYWNjZXNzX3Rva2VuKSlcbiAgLnRoZW4odG9rZW4gPT4gdmFsaWRhdGUudG9rZW5FeGlzdHNGb3JIdHRwKHRva2VuKSlcbiAgLnRoZW4odG9rZW4gPT5cbiAgICBDbGllbnQuZmluZE9uZSh7IGNsaWVudElkOiB0b2tlbi5jbGllbnRJRCB9KVxuICAgIC50aGVuKGNsaWVudCA9PiB2YWxpZGF0ZS5jbGllbnRFeGlzdHNGb3JIdHRwKGNsaWVudCkpXG4gICAgLnRoZW4oY2xpZW50ID0+ICh7IGNsaWVudCwgdG9rZW4gfSkpKVxuICAudGhlbigoeyBjbGllbnQsIHRva2VuIH0pID0+IHtcbiAgICBjb25zdCBleHBpcmF0aW9uTGVmdCA9IE1hdGguZmxvb3IoKHRva2VuLmV4cGlyYXRpb25EYXRlLmdldFRpbWUoKSAtIERhdGUubm93KCkpIC8gMTAwMCk7XG4gICAgcmVzLmpzb24oeyBhdWRpZW5jZSA6IGNsaWVudC5jbGllbnRJZCwgZXhwaXJlc19pbiA6IGV4cGlyYXRpb25MZWZ0IH0pO1xuICB9KVxuICAuY2F0Y2goKGVycikgPT4ge1xuICAgIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyk7XG4gICAgcmVzLmpzb24oeyBlcnJvcjogZXJyLm1lc3NhZ2UgfSk7XG4gIH0pO1xuXG5cbi8qKlxuICogVGhpcyBlbmRwb2ludCBpcyBmb3IgcmV2b2tpbmcgYSB0b2tlbi4gIFRoaXMgaGFzIHRoZSBzYW1lIHNpZ25hdHVyZSB0b1xuICogR29vZ2xlJ3MgdG9rZW4gcmV2b2NhdGlvbiBzeXN0ZW0gZnJvbTpcbiAqIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2lkZW50aXR5L3Byb3RvY29scy9PQXV0aDJXZWJTZXJ2ZXJcbiAqXG4gKiBZb3UgY2FsbCBpdCBsaWtlIHNvXG4gKiBodHRwczovL2xvY2FsaG9zdDozMDAwL2FwaS9yZXZva2U/dG9rZW49c29tZVRva2VuXG4gKlxuICogSWYgdGhlIHRva2VuIGlzIHZhbGlkIHlvdSBnZXQgcmV0dXJuZWQgYSAyMDAgYW5kIGFuIGVtcHR5IG9iamVjdFxuICoge31cbiAqXG4gKiBJZiB0aGUgdG9rZW4gaXMgbm90IHZhbGlkIHlvdSBnZXQgYSA0MDAgU3RhdHVzIGFuZCB0aGlzIHJldHVybmVkXG4gKiB7XG4gKiAgIFwiZXJyb3JcIjogXCJpbnZhbGlkX3Rva2VuXCJcbiAqIH1cbiAqIFRoaXMgd2lsbCBmaXJzdCB0cnkgdG8gZGVsZXRlIHRoZSB0b2tlbiBhcyBhbiBhY2Nlc3MgdG9rZW4uICBJZiBvbmUgaXMgbm90IGZvdW5kIGl0IHdpbGwgdHJ5IGFuZFxuICogZGVsZXRlIHRoZSB0b2tlbiBhcyBhIHJlZnJlc2ggdG9rZW4uICBJZiBib3RoIGZhaWwgdGhlbiBhbiBlcnJvciBpcyByZXR1cm5lZC5cbiAqIEBwYXJhbSAgIHtPYmplY3R9ICByZXEgLSBUaGUgcmVxdWVzdFxuICogQHBhcmFtICAge09iamVjdH0gIHJlcyAtIFRoZSByZXNwb25zZVxuICogQHJldHVybnMge1Byb21pc2V9IFJldHVybnMgdGhlIHByb21pc2UgZm9yIHRlc3RpbmdcbiAqL1xuZXhwb3J0cy5yZXZva2UgPSAocmVxLCByZXMpID0+XG4gIHZhbGlkYXRlLnRva2VuRm9ySHR0cChyZXEucXVlcnkudG9rZW4pXG4gIC50aGVuKCgpID0+IGRiLmFjY2Vzc1Rva2Vucy5kZWxldGUocmVxLnF1ZXJ5LnRva2VuKSlcbiAgLnRoZW4oKHRva2VuKSA9PiB7XG4gICAgaWYgKHRva2VuID09IG51bGwpIHtcbiAgICAgIHJldHVybiBkYi5yZWZyZXNoVG9rZW5zLmRlbGV0ZShyZXEucXVlcnkudG9rZW4pO1xuICAgIH1cbiAgICByZXR1cm4gdG9rZW47XG4gIH0pXG4gIC50aGVuKHRva2VuRGVsZXRlZCA9PiB2YWxpZGF0ZS50b2tlbkV4aXN0c0Zvckh0dHAodG9rZW5EZWxldGVkKSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIHJlcy5qc29uKHt9KTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMpO1xuICAgIHJlcy5qc29uKHsgZXJyb3I6IGVyci5tZXNzYWdlIH0pO1xuICB9KTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "token.js"
      ],
      "names": [
        "db",
        "require",
        "Client",
        "validate",
        "exports",
        "info",
        "req",
        "res",
        "tokenForHttp",
        "query",
        "access_token",
        "then",
        "accessTokens",
        "find",
        "token",
        "tokenExistsForHttp",
        "findOne",
        "clientId",
        "clientID",
        "client",
        "clientExistsForHttp",
        "expirationLeft",
        "Math",
        "floor",
        "expirationDate",
        "getTime",
        "Date",
        "now",
        "json",
        "audience",
        "expires_in",
        "catch",
        "err",
        "status",
        "error",
        "message",
        "revoke",
        "delete",
        "refreshTokens",
        "tokenDeleted"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,KAAWC,QAAQ,MAAR,CAAjB;AACA,MAAMC,SAASD,QAAQ,cAAR,CAAf;AACA,MAAME,WAAWF,QAAQ,YAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAG,QAAQC,IAAR,GAAe,CAACC,GAAD,EAAMC,GAAN,KACbJ,SAASK,YAAT,CAAsBF,IAAIG,KAAJ,CAAUC,YAAhC,EACCC,IADD,CACM,MAAMX,GAAGY,YAAH,CAAgBC,IAAhB,CAAqBP,IAAIG,KAAJ,CAAUC,YAA/B,CADZ,EAECC,IAFD,CAEMG,SAASX,SAASY,kBAAT,CAA4BD,KAA5B,CAFf,EAGCH,IAHD,CAGMG,SACJZ,OAAOc,OAAP,CAAe,EAAEC,UAAUH,MAAMI,QAAlB,EAAf,EACCP,IADD,CACMQ,UAAUhB,SAASiB,mBAAT,CAA6BD,MAA7B,CADhB,EAECR,IAFD,CAEMQ,WAAW,EAAEA,MAAF,EAAUL,KAAV,EAAX,CAFN,CAJF,EAOCH,IAPD,CAOM,CAAC,EAAEQ,MAAF,EAAUL,KAAV,EAAD,KAAuB;AAC3B,QAAMO,iBAAiBC,KAAKC,KAAL,CAAW,CAACT,MAAMU,cAAN,CAAqBC,OAArB,KAAiCC,KAAKC,GAAL,EAAlC,IAAgD,IAA3D,CAAvB;AACApB,MAAIqB,IAAJ,CAAS,EAAEC,UAAWV,OAAOF,QAApB,EAA8Ba,YAAaT,cAA3C,EAAT;AACD,CAVD,EAWCU,KAXD,CAWQC,GAAD,IAAS;AACdzB,MAAI0B,MAAJ,CAAWD,IAAIC,MAAf;AACA1B,MAAIqB,IAAJ,CAAS,EAAEM,OAAOF,IAAIG,OAAb,EAAT;AACD,CAdD,CADF;;AAkBA;;;;;;;;;;;;;;;;;;;;;AAqBA/B,QAAQgC,MAAR,GAAiB,CAAC9B,GAAD,EAAMC,GAAN,KACfJ,SAASK,YAAT,CAAsBF,IAAIG,KAAJ,CAAUK,KAAhC,EACCH,IADD,CACM,MAAMX,GAAGY,YAAH,CAAgByB,MAAhB,CAAuB/B,IAAIG,KAAJ,CAAUK,KAAjC,CADZ,EAECH,IAFD,CAEOG,KAAD,IAAW;AACf,MAAIA,SAAS,IAAb,EAAmB;AACjB,WAAOd,GAAGsC,aAAH,CAAiBD,MAAjB,CAAwB/B,IAAIG,KAAJ,CAAUK,KAAlC,CAAP;AACD;AACD,SAAOA,KAAP;AACD,CAPD,EAQCH,IARD,CAQM4B,gBAAgBpC,SAASY,kBAAT,CAA4BwB,YAA5B,CARtB,EASC5B,IATD,CASM,MAAM;AACVJ,MAAIqB,IAAJ,CAAS,EAAT;AACD,CAXD,EAYCG,KAZD,CAYQC,GAAD,IAAS;AACdzB,MAAI0B,MAAJ,CAAWD,IAAIC,MAAf;AACA1B,MAAIqB,IAAJ,CAAS,EAAEM,OAAOF,IAAIG,OAAb,EAAT;AACD,CAfD,CADF",
      "file": "token.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst db       = require('./db');\nconst Client = require('./db/clients')\nconst validate = require('./validate');\n\n/**\n * This endpoint is for verifying a token.  This has the same signature to\n * Google's token verification system from:\n * https://developers.google.com/accounts/docs/OAuth2UserAgent#validatetoken\n *\n * You call it like so\n * https://localhost:3000/api/tokeninfo?access_token=someToken\n *\n * If the token is valid you get returned\n * {\n *   \"audience\": someClientId\n * }\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing only\n */\nexports.info = (req, res) =>\n  validate.tokenForHttp(req.query.access_token)\n  .then(() => db.accessTokens.find(req.query.access_token))\n  .then(token => validate.tokenExistsForHttp(token))\n  .then(token =>\n    Client.findOne({ clientId: token.clientID })\n    .then(client => validate.clientExistsForHttp(client))\n    .then(client => ({ client, token })))\n  .then(({ client, token }) => {\n    const expirationLeft = Math.floor((token.expirationDate.getTime() - Date.now()) / 1000);\n    res.json({ audience : client.clientId, expires_in : expirationLeft });\n  })\n  .catch((err) => {\n    res.status(err.status);\n    res.json({ error: err.message });\n  });\n\n\n/**\n * This endpoint is for revoking a token.  This has the same signature to\n * Google's token revocation system from:\n * https://developers.google.com/identity/protocols/OAuth2WebServer\n *\n * You call it like so\n * https://localhost:3000/api/revoke?token=someToken\n *\n * If the token is valid you get returned a 200 and an empty object\n * {}\n *\n * If the token is not valid you get a 400 Status and this returned\n * {\n *   \"error\": \"invalid_token\"\n * }\n * This will first try to delete the token as an access token.  If one is not found it will try and\n * delete the token as a refresh token.  If both fail then an error is returned.\n * @param   {Object}  req - The request\n * @param   {Object}  res - The response\n * @returns {Promise} Returns the promise for testing\n */\nexports.revoke = (req, res) =>\n  validate.tokenForHttp(req.query.token)\n  .then(() => db.accessTokens.delete(req.query.token))\n  .then((token) => {\n    if (token == null) {\n      return db.refreshTokens.delete(req.query.token);\n    }\n    return token;\n  })\n  .then(tokenDeleted => validate.tokenExistsForHttp(tokenDeleted))\n  .then(() => {\n    res.json({});\n  })\n  .catch((err) => {\n    res.status(err.status);\n    res.json({ error: err.message });\n  });\n"
      ]
    },
    "mtime": 1518027404000
  },
  "{\"filename\":\"/app/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/user.js",
      "filenameRelative": "/app/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst passport = require('passport');\n\n/**\n * Simple informational end point, if you want to get information\n * about a particular user.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n * @param {Object} req The request\n * @param {Object} res The response\n * @returns {undefined}\n */\nexports.info = [passport.authenticate('bearer', { session: false }), (req, res) => {\n  // req.authInfo is set using the `info` argument supplied by\n  // `BearerStrategy`.  It is typically used to indicate scope of the token,\n  // and used in access control checks.  For illustrative purposes, this\n  // example simply returns the scope in the response.\n  res.json({ user_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsicGFzc3BvcnQiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImluZm8iLCJhdXRoZW50aWNhdGUiLCJzZXNzaW9uIiwicmVxIiwicmVzIiwianNvbiIsInVzZXJfaWQiLCJ1c2VyIiwiaWQiLCJuYW1lIiwic2NvcGUiLCJhdXRoSW5mbyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTUEsV0FBV0MsUUFBUSxVQUFSLENBQWpCOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQUMsUUFBUUMsSUFBUixHQUFlLENBQ2JILFNBQVNJLFlBQVQsQ0FBc0IsUUFBdEIsRUFBZ0MsRUFBRUMsU0FBUyxLQUFYLEVBQWhDLENBRGEsRUFFYixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0FBLE1BQUlDLElBQUosQ0FBUyxFQUFFQyxTQUFTSCxJQUFJSSxJQUFKLENBQVNDLEVBQXBCLEVBQXdCQyxNQUFNTixJQUFJSSxJQUFKLENBQVNFLElBQXZDLEVBQTZDQyxPQUFPUCxJQUFJUSxRQUFKLENBQWFELEtBQWpFLEVBQVQ7QUFDRCxDQVJZLENBQWYiLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBwYXNzcG9ydCA9IHJlcXVpcmUoJ3Bhc3Nwb3J0Jyk7XG5cbi8qKlxuICogU2ltcGxlIGluZm9ybWF0aW9uYWwgZW5kIHBvaW50LCBpZiB5b3Ugd2FudCB0byBnZXQgaW5mb3JtYXRpb25cbiAqIGFib3V0IGEgcGFydGljdWxhciB1c2VyLiAgWW91IHdvdWxkIGNhbGwgdGhpcyB3aXRoIGFuIGFjY2VzcyB0b2tlblxuICogaW4gdGhlIGJvZHkgb2YgdGhlIG1lc3NhZ2UgYWNjb3JkaW5nIHRvIE9BdXRoIDIuMCBzdGFuZGFyZHNcbiAqIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NTAjc2VjdGlvbi0yLjFcbiAqXG4gKiBFeGFtcGxlIHdvdWxkIGJlIHVzaW5nIHRoZSBlbmRwb2ludCBvZlxuICogaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvdXNlcmluZm9cbiAqXG4gKiBXaXRoIGEgR0VUIHVzaW5nIGFuIEF1dGhvcml6YXRpb24gQmVhcmVyIHRva2VuIHNpbWlsYXIgdG9cbiAqIEdFVCAvYXBpL3VzZXJpbmZvXG4gKiBIb3N0OiBodHRwczovL2xvY2FsaG9zdDozMDAwXG4gKiBBdXRob3JpemF0aW9uOiBCZWFyZXIgc29tZUFjY2Vzc1Rva2VuSGVyZVxuICogQHBhcmFtIHtPYmplY3R9IHJlcSBUaGUgcmVxdWVzdFxuICogQHBhcmFtIHtPYmplY3R9IHJlcyBUaGUgcmVzcG9uc2VcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKi9cbmV4cG9ydHMuaW5mbyA9IFtcbiAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdiZWFyZXInLCB7IHNlc3Npb246IGZhbHNlIH0pLFxuICAocmVxLCByZXMpID0+IHtcbiAgICAvLyByZXEuYXV0aEluZm8gaXMgc2V0IHVzaW5nIHRoZSBgaW5mb2AgYXJndW1lbnQgc3VwcGxpZWQgYnlcbiAgICAvLyBgQmVhcmVyU3RyYXRlZ3lgLiAgSXQgaXMgdHlwaWNhbGx5IHVzZWQgdG8gaW5kaWNhdGUgc2NvcGUgb2YgdGhlIHRva2VuLFxuICAgIC8vIGFuZCB1c2VkIGluIGFjY2VzcyBjb250cm9sIGNoZWNrcy4gIEZvciBpbGx1c3RyYXRpdmUgcHVycG9zZXMsIHRoaXNcbiAgICAvLyBleGFtcGxlIHNpbXBseSByZXR1cm5zIHRoZSBzY29wZSBpbiB0aGUgcmVzcG9uc2UuXG4gICAgcmVzLmpzb24oeyB1c2VyX2lkOiByZXEudXNlci5pZCwgbmFtZTogcmVxLnVzZXIubmFtZSwgc2NvcGU6IHJlcS5hdXRoSW5mby5zY29wZSB9KTtcbiAgfSxcbl07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "passport",
        "require",
        "exports",
        "info",
        "authenticate",
        "session",
        "req",
        "res",
        "json",
        "user_id",
        "user",
        "id",
        "name",
        "scope",
        "authInfo"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;AAiBAC,QAAQC,IAAR,GAAe,CACbH,SAASI,YAAT,CAAsB,QAAtB,EAAgC,EAAEC,SAAS,KAAX,EAAhC,CADa,EAEb,CAACC,GAAD,EAAMC,GAAN,KAAc;AACZ;AACA;AACA;AACA;AACAA,MAAIC,IAAJ,CAAS,EAAEC,SAASH,IAAII,IAAJ,CAASC,EAApB,EAAwBC,MAAMN,IAAII,IAAJ,CAASE,IAAvC,EAA6CC,OAAOP,IAAIQ,QAAJ,CAAaD,KAAjE,EAAT;AACD,CARY,CAAf",
      "file": "user.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst passport = require('passport');\n\n/**\n * Simple informational end point, if you want to get information\n * about a particular user.  You would call this with an access token\n * in the body of the message according to OAuth 2.0 standards\n * http://tools.ietf.org/html/rfc6750#section-2.1\n *\n * Example would be using the endpoint of\n * https://localhost:3000/api/userinfo\n *\n * With a GET using an Authorization Bearer token similar to\n * GET /api/userinfo\n * Host: https://localhost:3000\n * Authorization: Bearer someAccessTokenHere\n * @param {Object} req The request\n * @param {Object} res The response\n * @returns {undefined}\n */\nexports.info = [\n  passport.authenticate('bearer', { session: false }),\n  (req, res) => {\n    // req.authInfo is set using the `info` argument supplied by\n    // `BearerStrategy`.  It is typically used to indicate scope of the token,\n    // and used in access control checks.  For illustrative purposes, this\n    // example simply returns the scope in the response.\n    res.json({ user_id: req.user.id, name: req.user.name, scope: req.authInfo.scope });\n  },\n];\n"
      ]
    },
    "mtime": 1517499336000
  },
  "{\"filename\":\"/app/auth.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/auth.js",
      "filenameRelative": "/app/auth.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "auth.js",
      "sourceFileName": "auth.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "auth"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst db = require('./db');\nconst User = require('./db/users');\nconst Client = require('./db/clients');\nconst passport = require('passport');\nconst { Strategy: LocalStrategy } = require('passport-local');\nconst { BasicStrategy } = require('passport-http');\nconst { Strategy: ClientPasswordStrategy } = require('passport-oauth2-client-password');\nconst { Strategy: BearerStrategy } = require('passport-http-bearer');\nconst validate = require('./validate');\nconst { logAndThrow } = require('./utils');\n\n/**\n * LocalStrategy\n *\n * This strategy is used to authenticate users based on a username and password.\n * Anytime a request is made to authorize an application, we must ensure that\n * a user is logged in before asking them to approve the request.\n */\npassport.use(new LocalStrategy((username, password, done) => {\n  console.log(username);\n  User.findOne({ email: username }).then(user => user ? user.validate(password) : logAndThrow(`User ${username} not found`)).then(user => done(null, user)).catch(error => {\n    console.log(`Login error: ${error.message}`);\n    done(null, false);\n  });\n}));\n\n/**\n * BasicStrategy & ClientPasswordStrategy\n *\n * These strategies are used to authenticate registered OAuth clients.  They are\n * employed to protect the `token` endpoint, which consumers use to obtain\n * access tokens.  The OAuth 2.0 specification suggests that clients use the\n * HTTP Basic scheme to authenticate.  Use of the client password strategy\n * allows clients to send the same credentials in the request body (as opposed\n * to the `Authorization` header).  While this approach is not recommended by\n * the specification, in practice it is quite common.\n */\npassport.use(new BasicStrategy((clientId, clientSecret, done) => {\n  Client.findOne({ clientId: clientId }).then(client => client ? client.validate(clientSecret) : logAndThrow(`Client with id ${clientId} not found`)).then(client => done(null, client)).catch(error => {\n    console.log(`Login error: ${error.message}`);\n    done(null, false);\n  });\n}));\n/*\nconsole.log('enter client login....')\nClient.findOne({ clientId: clientId }, (err, client) => {\n  if (err) { return done(err) }\n  if (!client) {\n    console.log(`Login: clientId ${clientId} does not exist`)\n    return done(null, false)\n  }\n  if (client.clientSecret !== clientSecret) {\n    console.log(`Login: Client secret does not match for client ${clientId}`)\n    return done(null, false)\n  }\n  console.log(`Login successful: client ${clientId}`)\n  return done(null, client)\n})\n*/\n\n/**\n * Client Password strategy\n *\n * The OAuth 2.0 client password authentication strategy authenticates clients\n * using a client ID and client secret. The strategy requires a verify callback,\n * which accepts those credentials and calls done providing a client.\n */\npassport.use(new ClientPasswordStrategy((clientId, clientSecret, done) => {\n  Client.findOne({ clientId: clientId }).then(client => client ? client.validate(clientSecret) : logAndThrow(`Client with id ${clientId} not2 found`)).then(client => done(null, client)).catch(error => {\n    console.log(`Login error: ${error.message}`);\n    done(null, false);\n  });\n}));\n\n/**\n * BearerStrategy\n *\n * This strategy is used to authenticate either users or clients based on an access token\n * (aka a bearer token).  If a user, they must have previously authorized a client\n * application, which is issued an access token to make requests on behalf of\n * the authorizing user.\n *\n * To keep this example simple, restricted scopes are not implemented, and this is just for\n * illustrative purposes\n */\npassport.use(new BearerStrategy((accessToken, done) => {\n  db.accessTokens.find(accessToken).then(token => validate.token(token, accessToken)).then(token => done(null, token, { scope: '*' })).catch(() => done(null, false));\n}));\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\npassport.serializeUser((user, done) => {\n  done(null, user._id);\n});\n\npassport.deserializeUser((id, done) => {\n  User.findOne({ _id: ObjectId(id) }, (err, user) => {\n    if (err) done(err);\n    if (!user) done(null, null);\n    done(null, user);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "require",
        "User",
        "Client",
        "passport",
        "Strategy",
        "LocalStrategy",
        "BasicStrategy",
        "ClientPasswordStrategy",
        "BearerStrategy",
        "validate",
        "logAndThrow",
        "use",
        "username",
        "password",
        "done",
        "console",
        "log",
        "findOne",
        "email",
        "then",
        "user",
        "catch",
        "error",
        "message",
        "clientId",
        "clientSecret",
        "client",
        "accessToken",
        "accessTokens",
        "find",
        "token",
        "scope",
        "serializeUser",
        "_id",
        "deserializeUser",
        "id",
        "ObjectId",
        "err"
      ],
      "mappings": "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",
      "file": "auth.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nconst db = require('./db');\nconst User = require ('./db/users')\nconst Client = require('./db/clients')\nconst passport = require('passport');\nconst { Strategy: LocalStrategy } = require('passport-local');\nconst { BasicStrategy } = require('passport-http');\nconst { Strategy: ClientPasswordStrategy } = require('passport-oauth2-client-password');\nconst { Strategy: BearerStrategy } = require('passport-http-bearer');\nconst validate = require('./validate');\nconst { logAndThrow } = require ('./utils')\n\n/**\n * LocalStrategy\n *\n * This strategy is used to authenticate users based on a username and password.\n * Anytime a request is made to authorize an application, we must ensure that\n * a user is logged in before asking them to approve the request.\n */\npassport.use(new LocalStrategy((username, password, done) => {\n  console.log(username);\n  User.findOne({ email: username })\n    .then(user =>  user ? user.validate(password): logAndThrow(`User ${username} not found`))\n    .then(user => done(null, user))\n    .catch((error) => {\n      console.log(`Login error: ${error.message}`)\n      done(null, false)\n    })\n}))\n\n/**\n * BasicStrategy & ClientPasswordStrategy\n *\n * These strategies are used to authenticate registered OAuth clients.  They are\n * employed to protect the `token` endpoint, which consumers use to obtain\n * access tokens.  The OAuth 2.0 specification suggests that clients use the\n * HTTP Basic scheme to authenticate.  Use of the client password strategy\n * allows clients to send the same credentials in the request body (as opposed\n * to the `Authorization` header).  While this approach is not recommended by\n * the specification, in practice it is quite common.\n */\npassport.use(new BasicStrategy((clientId, clientSecret, done) => {\n  Client.findOne({ clientId: clientId })\n    .then(client => client ? client.validate(clientSecret) : logAndThrow(`Client with id ${clientId} not found`))\n    .then(client => done(null, client))\n    .catch((error) => {\n      console.log(`Login error: ${error.message}`)\n      done(null, false)\n    })\n}))\n  /*\n  console.log('enter client login....')\n  Client.findOne({ clientId: clientId }, (err, client) => {\n    if (err) { return done(err) }\n    if (!client) {\n      console.log(`Login: clientId ${clientId} does not exist`)\n      return done(null, false)\n    }\n    if (client.clientSecret !== clientSecret) {\n      console.log(`Login: Client secret does not match for client ${clientId}`)\n      return done(null, false)\n    }\n    console.log(`Login successful: client ${clientId}`)\n    return done(null, client)\n  })\n  */\n\n\n/**\n * Client Password strategy\n *\n * The OAuth 2.0 client password authentication strategy authenticates clients\n * using a client ID and client secret. The strategy requires a verify callback,\n * which accepts those credentials and calls done providing a client.\n */\npassport.use(new ClientPasswordStrategy((clientId, clientSecret, done) => {\n  Client.findOne({ clientId: clientId })\n    .then(client => client ? client.validate(clientSecret) : logAndThrow(`Client with id ${clientId} not2 found`))\n    .then(client => done(null, client))\n    .catch((error) => {\n      console.log(`Login error: ${error.message}`)\n      done(null, false)\n    })\n}))\n\n/**\n * BearerStrategy\n *\n * This strategy is used to authenticate either users or clients based on an access token\n * (aka a bearer token).  If a user, they must have previously authorized a client\n * application, which is issued an access token to make requests on behalf of\n * the authorizing user.\n *\n * To keep this example simple, restricted scopes are not implemented, and this is just for\n * illustrative purposes\n */\npassport.use(new BearerStrategy((accessToken, done) => {\n  db.accessTokens.find(accessToken)\n  .then(token => validate.token(token, accessToken))\n  .then(token => done(null, token, { scope: '*' }))\n  .catch(() => done(null, false));\n}));\n\n// Register serialialization and deserialization functions.\n//\n// When a client redirects a user to user authorization endpoint, an\n// authorization transaction is initiated.  To complete the transaction, the\n// user must authenticate and approve the authorization request.  Because this\n// may involve multiple HTTPS request/response exchanges, the transaction is\n// stored in the session.\n//\n// An application must supply serialization functions, which determine how the\n// client object is serialized into the session.  Typically this will be a\n// simple matter of serializing the client's ID, and deserializing by finding\n// the client by ID from the database.\n\npassport.serializeUser((user, done) => {\n  done(null, user._id);\n});\n\npassport.deserializeUser((id, done) => {\n  User.findOne({ _id: ObjectId(id) }, (err, user) => {\n    if (err) done(err)\n    if (!user) done(null, null)\n    done(null, user)\n  })\n})\n\n\n"
      ]
    },
    "mtime": 1518884610000
  },
  "{\"filename\":\"/app/authHeader.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/authHeader.js",
      "filenameRelative": "/app/authHeader.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "authHeader.js",
      "sourceFileName": "authHeader.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "authHeader"
    },
    "ignored": false,
    "code": "/*!\n * changeHeaderAuthSecret\n * Oauth2 resource own\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n * @private\n */\nvar Base64 = require('js-base64').Base64;\n\n/**\n * Module exports.\n*/\n\nmodule.exports = changeHeaderAuthSecret;\n\nfunction changeHeaderAuthSecret(options) {\n  const opts = options || {};\n  // options\n  const clientId = opts.clientId || '';\n  const secretId = opts.secretId || '';\n  const debug = opts.debug || false;\n  return function (req, res, next) {\n    const userAuth = req.headers.authorization.split(' ').pop();\n    const userAuthDecoded = Base64.decode(userAuth);\n    if (debug) console.log(`Authorization header: ${userAuthDecoded}`);\n    const parts = userAuthDecoded.split(':', 2);\n    if (parts[0] === clientId) {\n      const newUserAuth = `${clientId}:${secretId}`;\n      if (debug) console.log(`Change auth: ${userAuthDecoded}`);\n      req.headers.authorization = `Basic ${Base64.encode(newUserAuth)}`;\n    } else if (debug) console.log(`Authorization header: ${userAuthDecoded}`);\n    next();\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhIZWFkZXIuanMiXSwibmFtZXMiOlsiQmFzZTY0IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjaGFuZ2VIZWFkZXJBdXRoU2VjcmV0Iiwib3B0aW9ucyIsIm9wdHMiLCJjbGllbnRJZCIsInNlY3JldElkIiwiZGVidWciLCJyZXEiLCJyZXMiLCJuZXh0IiwidXNlckF1dGgiLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInNwbGl0IiwicG9wIiwidXNlckF1dGhEZWNvZGVkIiwiZGVjb2RlIiwiY29uc29sZSIsImxvZyIsInBhcnRzIiwibmV3VXNlckF1dGgiLCJlbmNvZGUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFNQTs7OztBQUlBLElBQUlBLFNBQVNDLFFBQVEsV0FBUixFQUFxQkQsTUFBbEM7O0FBRUE7Ozs7QUFJQUUsT0FBT0MsT0FBUCxHQUFpQkMsc0JBQWpCOztBQUdBLFNBQVNBLHNCQUFULENBQWdDQyxPQUFoQyxFQUF5QztBQUN2QyxRQUFNQyxPQUFPRCxXQUFXLEVBQXhCO0FBQ0E7QUFDQSxRQUFNRSxXQUFXRCxLQUFLQyxRQUFMLElBQWlCLEVBQWxDO0FBQ0EsUUFBTUMsV0FBV0YsS0FBS0UsUUFBTCxJQUFpQixFQUFsQztBQUNBLFFBQU1DLFFBQVFILEtBQUtHLEtBQUwsSUFBYyxLQUE1QjtBQUNBLFNBQU8sVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUM5QixVQUFNQyxXQUFXSCxJQUFJSSxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLEtBQTFCLENBQWdDLEdBQWhDLEVBQXFDQyxHQUFyQyxFQUFqQjtBQUNBLFVBQU1DLGtCQUFrQmxCLE9BQU9tQixNQUFQLENBQWNOLFFBQWQsQ0FBeEI7QUFDQSxRQUFJSixLQUFKLEVBQVdXLFFBQVFDLEdBQVIsQ0FBYSx5QkFBd0JILGVBQWdCLEVBQXJEO0FBQ1gsVUFBTUksUUFBUUosZ0JBQWdCRixLQUFoQixDQUFzQixHQUF0QixFQUEyQixDQUEzQixDQUFkO0FBQ0EsUUFBSU0sTUFBTSxDQUFOLE1BQWFmLFFBQWpCLEVBQTJCO0FBQ3pCLFlBQU1nQixjQUFlLEdBQUVoQixRQUFTLElBQUdDLFFBQVMsRUFBNUM7QUFDQSxVQUFJQyxLQUFKLEVBQVdXLFFBQVFDLEdBQVIsQ0FBYSxnQkFBZUgsZUFBZ0IsRUFBNUM7QUFDWFIsVUFBSUksT0FBSixDQUFZQyxhQUFaLEdBQTZCLFNBQVFmLE9BQU93QixNQUFQLENBQWNELFdBQWQsQ0FBMkIsRUFBaEU7QUFDRCxLQUpELE1BS0ssSUFBSWQsS0FBSixFQUFZVyxRQUFRQyxHQUFSLENBQWEseUJBQXdCSCxlQUFnQixFQUFyRDtBQUNqQk47QUFDRCxHQVpEO0FBYUQiLCJmaWxlIjoiYXV0aEhlYWRlci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBjaGFuZ2VIZWFkZXJBdXRoU2VjcmV0XG4gKiBPYXV0aDIgcmVzb3VyY2Ugb3duXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG52YXIgQmFzZTY0ID0gcmVxdWlyZSgnanMtYmFzZTY0JykuQmFzZTY0O1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuKi9cblxubW9kdWxlLmV4cG9ydHMgPSBjaGFuZ2VIZWFkZXJBdXRoU2VjcmV0XG5cblxuZnVuY3Rpb24gY2hhbmdlSGVhZGVyQXV0aFNlY3JldChvcHRpb25zKSB7XG4gIGNvbnN0IG9wdHMgPSBvcHRpb25zIHx8IHt9XG4gIC8vIG9wdGlvbnNcbiAgY29uc3QgY2xpZW50SWQgPSBvcHRzLmNsaWVudElkIHx8ICcnXG4gIGNvbnN0IHNlY3JldElkID0gb3B0cy5zZWNyZXRJZCB8fCAnJ1xuICBjb25zdCBkZWJ1ZyA9IG9wdHMuZGVidWcgfHwgZmFsc2VcbiAgcmV0dXJuIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29uc3QgdXNlckF1dGggPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uLnNwbGl0KCcgJykucG9wKCk7XG4gICAgY29uc3QgdXNlckF1dGhEZWNvZGVkID0gQmFzZTY0LmRlY29kZSh1c2VyQXV0aCk7XG4gICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhgQXV0aG9yaXphdGlvbiBoZWFkZXI6ICR7dXNlckF1dGhEZWNvZGVkfWApXG4gICAgY29uc3QgcGFydHMgPSB1c2VyQXV0aERlY29kZWQuc3BsaXQoJzonLCAyKTtcbiAgICBpZiAocGFydHNbMF0gPT09IGNsaWVudElkKSB7XG4gICAgICBjb25zdCBuZXdVc2VyQXV0aCA9IGAke2NsaWVudElkfToke3NlY3JldElkfWA7XG4gICAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKGBDaGFuZ2UgYXV0aDogJHt1c2VyQXV0aERlY29kZWR9YClcbiAgICAgIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24gPSBgQmFzaWMgJHtCYXNlNjQuZW5jb2RlKG5ld1VzZXJBdXRoKX1gO1xuICAgIH1cbiAgICBlbHNlIGlmIChkZWJ1ZykgIGNvbnNvbGUubG9nKGBBdXRob3JpemF0aW9uIGhlYWRlcjogJHt1c2VyQXV0aERlY29kZWR9YClcbiAgICBuZXh0KClcbiAgfVxufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "authHeader.js"
      ],
      "names": [
        "Base64",
        "require",
        "module",
        "exports",
        "changeHeaderAuthSecret",
        "options",
        "opts",
        "clientId",
        "secretId",
        "debug",
        "req",
        "res",
        "next",
        "userAuth",
        "headers",
        "authorization",
        "split",
        "pop",
        "userAuthDecoded",
        "decode",
        "console",
        "log",
        "parts",
        "newUserAuth",
        "encode"
      ],
      "mappings": "AAAA;;;;;;AAMA;;;;AAIA,IAAIA,SAASC,QAAQ,WAAR,EAAqBD,MAAlC;;AAEA;;;;AAIAE,OAAOC,OAAP,GAAiBC,sBAAjB;;AAGA,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AACvC,QAAMC,OAAOD,WAAW,EAAxB;AACA;AACA,QAAME,WAAWD,KAAKC,QAAL,IAAiB,EAAlC;AACA,QAAMC,WAAWF,KAAKE,QAAL,IAAiB,EAAlC;AACA,QAAMC,QAAQH,KAAKG,KAAL,IAAc,KAA5B;AACA,SAAO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9B,UAAMC,WAAWH,IAAII,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqCC,GAArC,EAAjB;AACA,UAAMC,kBAAkBlB,OAAOmB,MAAP,CAAcN,QAAd,CAAxB;AACA,QAAIJ,KAAJ,EAAWW,QAAQC,GAAR,CAAa,yBAAwBH,eAAgB,EAArD;AACX,UAAMI,QAAQJ,gBAAgBF,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAd;AACA,QAAIM,MAAM,CAAN,MAAaf,QAAjB,EAA2B;AACzB,YAAMgB,cAAe,GAAEhB,QAAS,IAAGC,QAAS,EAA5C;AACA,UAAIC,KAAJ,EAAWW,QAAQC,GAAR,CAAa,gBAAeH,eAAgB,EAA5C;AACXR,UAAII,OAAJ,CAAYC,aAAZ,GAA6B,SAAQf,OAAOwB,MAAP,CAAcD,WAAd,CAA2B,EAAhE;AACD,KAJD,MAKK,IAAId,KAAJ,EAAYW,QAAQC,GAAR,CAAa,yBAAwBH,eAAgB,EAArD;AACjBN;AACD,GAZD;AAaD",
      "file": "authHeader.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "/*!\n * changeHeaderAuthSecret\n * Oauth2 resource own\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n * @private\n */\nvar Base64 = require('js-base64').Base64;\n\n/**\n * Module exports.\n*/\n\nmodule.exports = changeHeaderAuthSecret\n\n\nfunction changeHeaderAuthSecret(options) {\n  const opts = options || {}\n  // options\n  const clientId = opts.clientId || ''\n  const secretId = opts.secretId || ''\n  const debug = opts.debug || false\n  return function(req, res, next) {\n    const userAuth = req.headers.authorization.split(' ').pop();\n    const userAuthDecoded = Base64.decode(userAuth);\n    if (debug) console.log(`Authorization header: ${userAuthDecoded}`)\n    const parts = userAuthDecoded.split(':', 2);\n    if (parts[0] === clientId) {\n      const newUserAuth = `${clientId}:${secretId}`;\n      if (debug) console.log(`Change auth: ${userAuthDecoded}`)\n      req.headers.authorization = `Basic ${Base64.encode(newUserAuth)}`;\n    }\n    else if (debug)  console.log(`Authorization header: ${userAuthDecoded}`)\n    next()\n  }\n}"
      ]
    },
    "mtime": 1518816669000
  },
  "{\"filename\":\"/app/oauth2orize-facebook.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/oauth2orize-facebook.js",
      "filenameRelative": "/app/oauth2orize-facebook.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "oauth2orize-facebook.js",
      "sourceFileName": "oauth2orize-facebook.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "oauth2orize-facebook"
    },
    "ignored": false,
    "code": "var AuthorizationError = require('oauth2orize').AuthorizationError;\nvar objectAssign = require('object-assign');\nvar request = require('request');\n\nmodule.exports = function (opts, issue) {\n  if (typeof opts === 'function') {\n    issue = opts;\n    opts = null;\n  }\n\n  if (typeof issue !== 'function') {\n    throw new Error('OAuth 2.0 password exchange middleware ' + 'requires an issue function.');\n  }\n\n  opts = opts || {};\n\n  var userProperty = opts.userProperty || 'user';\n  var separators = opts.scopeSeparator || ' ';\n\n  if (!Array.isArray(separators)) {\n    separators = [separators];\n  }\n\n  return function facebook(req, res, next) {\n    if (!req.body) {\n      return next(new Error('Request body not parsed. ' + 'Use bodyParser middleware.'));\n    }\n\n    // The `user` property of `req` holds the authenticated user. In the case\n    // of the token end-point, this property will contain the OAuth 2.0 client.\n    var client = req[userProperty];\n\n    var token = req.body.token;\n    var scope = req.body.scope;\n\n    if (!token) {\n      return next(new AuthorizationError('Missing Facebook access token!', 'invalid_request'));\n    }\n\n    getFacebookProfile(token, function (err, profile) {\n      if (err) {\n        return next(new AuthorizationError('Could not get Facebook profile using provided access token.', 'invalid_request'));\n      }\n\n      if (scope) {\n        for (var i = 0, len = separators.length; i < len; i++) {\n          // Only separates on the first matching separator.\n          // This allows for a sort of separator \"priority\"\n          // (ie, favors spaces then fallback to commas).\n          var separated = scope.split(separators[i]);\n\n          if (separated.length > 1) {\n            scope = separated;\n            break;\n          }\n        }\n\n        if (!Array.isArray(scope)) {\n          scope = [scope];\n        }\n      }\n\n      var issued = function (err, accessToken, refreshToken, params) {\n        if (err) {\n          return next(err);\n        }\n\n        if (!accessToken) {\n          return next(new AuthorizationError('Permissions was not granted.', 'invalid_grant'));\n        }\n\n        var json = { 'access_token': accessToken };\n\n        if (refreshToken) {\n          json['refresh_token'] = refreshToken;\n        }\n\n        if (params) {\n          objectAssign(json, params);\n        }\n\n        json['token_type'] = json['token_type'] || 'bearer';\n        json = JSON.stringify(json);\n\n        res.setHeader('Content-Type', 'application/json');\n        res.setHeader('Cache-Control', 'no-store');\n        res.setHeader('Pragma', 'no-cache');\n        res.end(json);\n      };\n\n      issue(client, profile, scope, issued);\n    });\n  };\n};\n\nfunction getFacebookProfile(accessToken, cb) {\n  request({\n    // url: 'https://graph.facebook.com/me?fields=name,email,picture&access_token=' + accessToken,\n    // we get picture by https://graph.facebook.com/user_id/picture?type=large\n    url: 'https://graph.facebook.com/me?access_token=' + accessToken,\n    json: true\n  }, function (err, res, body) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (body && body.error) {\n      var msg = body.error.message || 'Could not get Facebook profile.';\n      return cb(new Error(msg));\n    }\n\n    cb(null, body);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "oauth2orize-facebook.js"
      ],
      "names": [
        "AuthorizationError",
        "require",
        "objectAssign",
        "request",
        "module",
        "exports",
        "opts",
        "issue",
        "Error",
        "userProperty",
        "separators",
        "scopeSeparator",
        "Array",
        "isArray",
        "facebook",
        "req",
        "res",
        "next",
        "body",
        "client",
        "token",
        "scope",
        "getFacebookProfile",
        "err",
        "profile",
        "i",
        "len",
        "length",
        "separated",
        "split",
        "issued",
        "accessToken",
        "refreshToken",
        "params",
        "json",
        "JSON",
        "stringify",
        "setHeader",
        "end",
        "cb",
        "url",
        "error",
        "msg",
        "message"
      ],
      "mappings": "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",
      "file": "oauth2orize-facebook.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "var AuthorizationError = require('oauth2orize').AuthorizationError;\nvar objectAssign = require('object-assign');\nvar request = require('request');\n\nmodule.exports = function (opts, issue) {\n  if (typeof opts === 'function') {\n    issue = opts;\n    opts = null;\n  }\n\n  if (typeof issue !== 'function') {\n    throw new Error('OAuth 2.0 password exchange middleware ' +\n      'requires an issue function.')\n  }\n\n  opts = opts || {};\n\n  var userProperty = opts.userProperty || 'user';\n  var separators = opts.scopeSeparator || ' ';\n\n  if (!Array.isArray(separators)) {\n    separators = [ separators ];\n  }\n\n  return function facebook(req, res, next) {\n    if (!req.body) {\n      return next(new Error('Request body not parsed. ' +\n        'Use bodyParser middleware.'));\n    }\n\n    // The `user` property of `req` holds the authenticated user. In the case\n    // of the token end-point, this property will contain the OAuth 2.0 client.\n    var client = req[userProperty];\n\n    var token = req.body.token;\n    var scope = req.body.scope;\n\n    if (!token) {\n      return next(new AuthorizationError(\n        'Missing Facebook access token!', 'invalid_request'));\n    }\n\n    getFacebookProfile(token, function (err, profile) {\n      if (err) {\n        return next(new AuthorizationError(\n          'Could not get Facebook profile using provided access token.',\n          'invalid_request'\n        ));\n      }\n\n      if (scope) {\n        for (var i = 0, len = separators.length; i < len; i++) {\n          // Only separates on the first matching separator.\n          // This allows for a sort of separator \"priority\"\n          // (ie, favors spaces then fallback to commas).\n          var separated = scope.split(separators[i]);\n\n          if (separated.length > 1) {\n            scope = separated;\n            break;\n          }\n        }\n\n        if (!Array.isArray(scope)) {\n          scope = [ scope ];\n        }\n      }\n\n      var issued = function (err, accessToken, refreshToken, params) {\n        if (err) {\n          return next(err);\n        }\n\n        if (!accessToken) {\n          return next(new AuthorizationError(\n            'Permissions was not granted.', 'invalid_grant'));\n        }\n\n        var json = { 'access_token': accessToken };\n\n        if (refreshToken) {\n          json['refresh_token'] = refreshToken;\n        }\n\n        if (params) {\n          objectAssign(json, params);\n        }\n\n        json['token_type'] = json['token_type'] || 'bearer';\n        json = JSON.stringify(json);\n\n        res.setHeader('Content-Type', 'application/json');\n        res.setHeader('Cache-Control', 'no-store');\n        res.setHeader('Pragma', 'no-cache');\n        res.end(json);\n      };\n\n      issue(client, profile, scope, issued);\n    });\n  };\n};\n\n\nfunction getFacebookProfile(accessToken, cb) {\n  request({\n    // url: 'https://graph.facebook.com/me?fields=name,email,picture&access_token=' + accessToken,\n    // we get picture by https://graph.facebook.com/user_id/picture?type=large\n    url: 'https://graph.facebook.com/me?access_token=' + accessToken,\n    json: true\n  },\n  function (err, res, body) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (body && body.error) {\n      var msg = body.error.message || 'Could not get Facebook profile.';\n      return cb(new Error(msg));\n    }\n\n    cb(null, body);\n  });\n}\n"
      ]
    },
    "mtime": 1520545034000
  },
  "{\"filename\":\"/app/oauth2orize-google.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:production": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/oauth2orize-google.js",
      "filenameRelative": "/app/oauth2orize-google.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "oauth2orize-google.js",
      "sourceFileName": "oauth2orize-google.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "oauth2orize-google"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar AuthorizationError = require('oauth2orize').AuthorizationError;\nvar request = require('request');\nvar objectAssign = require('object-assign');\n\n// var getGoogleProfile = require('./oauth2orize-google-utils').getGoogleProfile;\n\nmodule.exports = function (opts, issue) {\n  if (typeof opts === 'function') {\n    issue = opts;\n    opts = null;\n  }\n\n  if (typeof issue !== 'function') {\n    throw new Error('OAuth 2.0 password exchange middleware ' + 'requires an issue function.');\n  }\n\n  opts = opts || {};\n\n  var userProperty = opts.userProperty || 'user';\n  var separators = opts.scopeSeparator || ' ';\n  var googleConfig = opts.googleConfig || {};\n\n  if (!Array.isArray(separators)) {\n    separators = [separators];\n  }\n\n  return function google(req, res, next) {\n    if (!req.body) {\n      return next(new Error('Request body not parsed. ' + 'Use bodyParser middleware.'));\n    }\n\n    // The `user` property of `req` holds the authenticated user. In the case\n    // of the token end-point, this property will contain the OAuth 2.0 client.\n    var client = req[userProperty];\n\n    var token = req.body.token;\n    var scope = req.body.scope;\n    if (!token) {\n      return next(new AuthorizationError('Missing Google token!', 'invalid_request'));\n    }\n\n    // googleConfig.redirect_uri = req.get('origin') || googleConfig.redirect_uri\n    getGoogleProfile(token, function (err, profile) {\n      if (err) {\n        return next(new AuthorizationError(err.message || 'Could not get Google profile using provided token.', 'invalid_request'));\n      }\n\n      if (scope) {\n        for (var i = 0, len = separators.length; i < len; i++) {\n          // Only separates on the first matching separator.\n          // This allows for a sort of separator \"priority\"\n          // (ie, favors spaces then fallback to commas).\n          var separated = scope.split(separators[i]);\n\n          if (separated.length > 1) {\n            scope = separated;\n            break;\n          }\n        }\n\n        if (!Array.isArray(scope)) {\n          scope = [scope];\n        }\n      }\n\n      var issued = function (err, accessToken, refreshToken, params) {\n        if (err) {\n          return next(err);\n        }\n\n        if (!accessToken) {\n          return next(new AuthorizationError('Permissions was not granted.', 'invalid_grant'));\n        }\n\n        var json = { 'access_token': accessToken };\n\n        if (refreshToken) {\n          json['refresh_token'] = refreshToken;\n        }\n\n        if (params) {\n          objectAssign(json, params);\n        }\n\n        json['token_type'] = json['token_type'] || 'bearer';\n        json = JSON.stringify(json);\n\n        res.setHeader('Content-Type', 'application/json');\n        res.setHeader('Cache-Control', 'no-store');\n        res.setHeader('Pragma', 'no-cache');\n        res.end(json);\n      };\n\n      issue(client, profile, scope, issued);\n    });\n  };\n};\n\nfunction getGoogleProfile(accessToken, cb) {\n  request({\n    url: 'https://www.googleapis.com/oauth2/v3/userinfo?access_token=' + accessToken,\n    json: true\n  }, function (err, res, body) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (body && body.error) {\n      var msg = body.error.message || 'Could not get Google profile.';\n      return cb(new Error(msg));\n    }\n\n    cb(null, body);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9hdXRoMm9yaXplLWdvb2dsZS5qcyJdLCJuYW1lcyI6WyJBdXRob3JpemF0aW9uRXJyb3IiLCJyZXF1aXJlIiwicmVxdWVzdCIsIm9iamVjdEFzc2lnbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJvcHRzIiwiaXNzdWUiLCJFcnJvciIsInVzZXJQcm9wZXJ0eSIsInNlcGFyYXRvcnMiLCJzY29wZVNlcGFyYXRvciIsImdvb2dsZUNvbmZpZyIsIkFycmF5IiwiaXNBcnJheSIsImdvb2dsZSIsInJlcSIsInJlcyIsIm5leHQiLCJib2R5IiwiY2xpZW50IiwidG9rZW4iLCJzY29wZSIsImdldEdvb2dsZVByb2ZpbGUiLCJlcnIiLCJwcm9maWxlIiwibWVzc2FnZSIsImkiLCJsZW4iLCJsZW5ndGgiLCJzZXBhcmF0ZWQiLCJzcGxpdCIsImlzc3VlZCIsImFjY2Vzc1Rva2VuIiwicmVmcmVzaFRva2VuIiwicGFyYW1zIiwianNvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZXRIZWFkZXIiLCJlbmQiLCJjYiIsInVybCIsImVycm9yIiwibXNnIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxxQkFBcUJDLFFBQVEsYUFBUixFQUF1QkQsa0JBQWhEO0FBQ0EsSUFBSUUsVUFBVUQsUUFBUSxTQUFSLENBQWQ7QUFDQSxJQUFJRSxlQUFlRixRQUFRLGVBQVIsQ0FBbkI7O0FBRUE7O0FBRUFHLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsSUFBVixFQUFnQkMsS0FBaEIsRUFBdUI7QUFDdEMsTUFBSSxPQUFPRCxJQUFQLEtBQWdCLFVBQXBCLEVBQWdDO0FBQzlCQyxZQUFRRCxJQUFSO0FBQ0FBLFdBQU8sSUFBUDtBQUNEOztBQUVELE1BQUksT0FBT0MsS0FBUCxLQUFpQixVQUFyQixFQUFpQztBQUMvQixVQUFNLElBQUlDLEtBQUosQ0FBVSw0Q0FDZCw2QkFESSxDQUFOO0FBRUQ7O0FBRURGLFNBQU9BLFFBQVEsRUFBZjs7QUFFQSxNQUFJRyxlQUFlSCxLQUFLRyxZQUFM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QW9HQSxTQUFTVCxnQkFBVCxDQUEwQlUsV0FBMUIsRUFBdUNRLEVBQXZDLEVBQTJDO0FBQ3pDdkMsVUFBUTtBQUNOd0MsU0FBSyxnRUFBZ0VULFdBRC9EO0FBRU5HLFVBQU07QUFGQSxHQUFSLEVBSUEsVUFBVVosR0FBVixFQUFlUCxHQUFmLEVBQW9CRSxJQUFwQixFQUEwQjtBQUN4QixRQUFJSyxHQUFKLEVBQVM7QUFDUCxhQUFPaUIsR0FBR2pCLEdBQUgsQ0FBUDtBQUNEOztBQUVELFFBQUlMLFFBQVFBLEtBQUt3QixLQUFqQixFQUF3QjtBQUN0QixVQUFJQyxNQUFNekIsS0FBS3dCLEtBQUwsQ0FBV2pCLE9BQVgsSUFBc0IsK0JBQWhDO0FBQ0EsYUFBT2UsR0FBRyxJQUFJakMsS0FBSixDQUFVb0MsR0FBVixDQUFILENBQVA7QUFDRDs7QUFFREgsT0FBRyxJQUFILEVBQVN0QixJQUFUO0FBQ0QsR0FmRDtBQWdCRCIsImZpbGUiOiJvYXV0aDJvcml6ZS1nb29nbGUuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEF1dGhvcml6YXRpb25FcnJvciA9IHJlcXVpcmUoJ29hdXRoMm9yaXplJykuQXV0aG9yaXphdGlvbkVycm9yO1xudmFyIHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0Jyk7XG52YXIgb2JqZWN0QXNzaWduID0gcmVxdWlyZSgnb2JqZWN0LWFzc2lnbicpO1xuXG4vLyB2YXIgZ2V0R29vZ2xlUHJvZmlsZSA9IHJlcXVpcmUoJy4vb2F1dGgyb3JpemUtZ29vZ2xlLXV0aWxzJykuZ2V0R29vZ2xlUHJvZmlsZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3B0cywgaXNzdWUpIHtcbiAgaWYgKHR5cGVvZiBvcHRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaXNzdWUgPSBvcHRzO1xuICAgIG9wdHMgPSBudWxsO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBpc3N1ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignT0F1dGggMi4wIHBhc3N3b3JkIGV4Y2hhbmdlIG1pZGRsZXdhcmUgJyArXG4gICAgICAncmVxdWlyZXMgYW4gaXNzdWUgZnVuY3Rpb24uJyk7XG4gIH1cblxuICBvcHRzID0gb3B0cyB8fCB7fTtcblxuICB2YXIgdXNlclByb3BlcnR5ID0gb3B0cy51c2VyUHJvcGVydHkgfHwgJ3VzZXInO1xuICB2YXIgc2VwYXJhdG9ycyA9IG9wdHMuc2NvcGVTZXBhcmF0b3IgfHwgJyAnO1xuICB2YXIgZ29vZ2xlQ29uZmlnID0gb3B0cy5nb29nbGVDb25maWcgfHwge307XG5cbiAgaWYgKCFBcnJheS5pc0FycmF5KHNlcGFyYXRvcnMpKSB7XG4gICAgc2VwYXJhdG9ycyA9IFsgc2VwYXJhdG9ycyBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGdvb2dsZShyZXEsIHJlcywgbmV4dCkge1xuICAgIGlmICghcmVxLmJvZHkpIHtcbiAgICAgIHJldHVybiBuZXh0KG5ldyBFcnJvcignUmVxdWVzdCBib2R5IG5vdCBwYXJzZWQuICcgK1xuICAgICAgICAnVXNlIGJvZHlQYXJzZXIgbWlkZGxld2FyZS4nKSk7XG4gICAgfVxuXG4gICAgLy8gVGhlIGB1c2VyYCBwcm9wZXJ0eSBvZiBgcmVxYCBob2xkcyB0aGUgYXV0aGVudGljYXRlZCB1c2VyLiBJbiB0aGUgY2FzZVxuICAgIC8vIG9mIHRoZSB0b2tlbiBlbmQtcG9pbnQsIHRoaXMgcHJvcGVydHkgd2lsbCBjb250YWluIHRoZSBPQXV0aCAyLjAgY2xpZW50LlxuICAgIHZhciBjbGllbnQgPSByZXFbdXNlclByb3BlcnR5XTtcblxuICAgIHZhciB0b2tlbiA9IHJlcS5ib2R5LnRva2VuO1xuICAgIHZhciBzY29wZSA9IHJlcS5ib2R5LnNjb3BlO1xuICAgIGlmICghdG9rZW4pIHtcbiAgICAgIHJldHVybiBuZXh0KG5ldyBBdXRob3JpemF0aW9uRXJyb3IoXG4gICAgICAgICdNaXNzaW5nIEdvb2dsZSB0b2tlbiEnLCAnaW52YWxpZF9yZXF1ZXN0JykpO1xuICAgIH1cblxuICAgIC8vIGdvb2dsZUNvbmZpZy5yZWRpcmVjdF91cmkgPSByZXEuZ2V0KCdvcmlnaW4nKSB8fCBnb29nbGVDb25maWcucmVkaXJlY3RfdXJpXG4gICAgZ2V0R29vZ2xlUHJvZmlsZSh0b2tlbiwgZnVuY3Rpb24gKGVyciwgcHJvZmlsZSkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXR1cm4gbmV4dChuZXcgQXV0aG9yaXphdGlvbkVycm9yKFxuICAgICAgICAgIGVyci5tZXNzYWdlIHx8ICdDb3VsZCBub3QgZ2V0IEdvb2dsZSBwcm9maWxlIHVzaW5nIHByb3ZpZGVkIHRva2VuLicsXG4gICAgICAgICAgJ2ludmFsaWRfcmVxdWVzdCdcbiAgICAgICAgKSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzY29wZSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gc2VwYXJhdG9ycy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgIC8vIE9ubHkgc2VwYXJhdGVzIG9uIHRoZSBmaXJzdCBtYXRjaGluZyBzZXBhcmF0b3IuXG4gICAgICAgICAgLy8gVGhpcyBhbGxvd3MgZm9yIGEgc29ydCBvZiBzZXBhcmF0b3IgXCJwcmlvcml0eVwiXG4gICAgICAgICAgLy8gKGllLCBmYXZvcnMgc3BhY2VzIHRoZW4gZmFsbGJhY2sgdG8gY29tbWFzKS5cbiAgICAgICAgICB2YXIgc2VwYXJhdGVkID0gc2NvcGUuc3BsaXQoc2VwYXJhdG9yc1tpXSk7XG5cbiAgICAgICAgICBpZiAoc2VwYXJhdGVkLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIHNjb3BlID0gc2VwYXJhdGVkO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHNjb3BlKSkge1xuICAgICAgICAgIHNjb3BlID0gWyBzY29wZSBdO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciBpc3N1ZWQgPSBmdW5jdGlvbiAoZXJyLCBhY2Nlc3NUb2tlbiwgcmVmcmVzaFRva2VuLCBwYXJhbXMpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWFjY2Vzc1Rva2VuKSB7XG4gICAgICAgICAgcmV0dXJuIG5leHQobmV3IEF1dGhvcml6YXRpb25FcnJvcihcbiAgICAgICAgICAgICdQZXJtaXNzaW9ucyB3YXMgbm90IGdyYW50ZWQuJywgJ2ludmFsaWRfZ3JhbnQnKSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIganNvbiA9IHsgJ2FjY2Vzc190b2tlbic6IGFjY2Vzc1Rva2VuIH07XG5cbiAgICAgICAgaWYgKHJlZnJlc2hUb2tlbikge1xuICAgICAgICAgIGpzb25bJ3JlZnJlc2hfdG9rZW4nXSA9IHJlZnJlc2hUb2tlbjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJhbXMpIHtcbiAgICAgICAgICBvYmplY3RBc3NpZ24oanNvbiwgcGFyYW1zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGpzb25bJ3Rva2VuX3R5cGUnXSA9IGpzb25bJ3Rva2VuX3R5cGUnXSB8fCAnYmVhcmVyJztcbiAgICAgICAganNvbiA9IEpTT04uc3RyaW5naWZ5KGpzb24pO1xuXG4gICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnLCAnbm8tc3RvcmUnKTtcbiAgICAgICAgcmVzLnNldEhlYWRlcignUHJhZ21hJywgJ25vLWNhY2hlJyk7XG4gICAgICAgIHJlcy5lbmQoanNvbik7XG4gICAgICB9O1xuXG4gICAgICBpc3N1ZShjbGllbnQsIHByb2ZpbGUsIHNjb3BlLCBpc3N1ZWQpO1xuICAgIH0pO1xuICB9O1xufTtcblxuXG5mdW5jdGlvbiBnZXRHb29nbGVQcm9maWxlKGFjY2Vzc1Rva2VuLCBjYikge1xuICByZXF1ZXN0KHtcbiAgICB1cmw6ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjMvdXNlcmluZm8/YWNjZXNzX3Rva2VuPScgKyBhY2Nlc3NUb2tlbixcbiAgICBqc29uOiB0cnVlXG4gIH0sXG4gIGZ1bmN0aW9uIChlcnIsIHJlcywgYm9keSkge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHJldHVybiBjYihlcnIpO1xuICAgIH1cblxuICAgIGlmIChib2R5ICYmIGJvZHkuZXJyb3IpIHtcbiAgICAgIHZhciBtc2cgPSBib2R5LmVycm9yLm1lc3NhZ2UgfHwgJ0NvdWxkIG5vdCBnZXQgR29vZ2xlIHByb2ZpbGUuJztcbiAgICAgIHJldHVybiBjYihuZXcgRXJyb3IobXNnKSk7XG4gICAgfVxuXG4gICAgY2IobnVsbCwgYm9keSk7XG4gIH0pO1xufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "oauth2orize-google.js"
      ],
      "names": [
        "AuthorizationError",
        "require",
        "request",
        "objectAssign",
        "module",
        "exports",
        "opts",
        "issue",
        "Error",
        "userProperty",
        "separators",
        "scopeSeparator",
        "googleConfig",
        "Array",
        "isArray",
        "google",
        "req",
        "res",
        "next",
        "body",
        "client",
        "token",
        "scope",
        "getGoogleProfile",
        "err",
        "profile",
        "message",
        "i",
        "len",
        "length",
        "separated",
        "split",
        "issued",
        "accessToken",
        "refreshToken",
        "params",
        "json",
        "JSON",
        "stringify",
        "setHeader",
        "end",
        "cb",
        "url",
        "error",
        "msg"
      ],
      "mappings": "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",
      "file": "oauth2orize-google.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "'use strict';\n\nvar AuthorizationError = require('oauth2orize').AuthorizationError;\nvar request = require('request');\nvar objectAssign = require('object-assign');\n\n// var getGoogleProfile = require('./oauth2orize-google-utils').getGoogleProfile;\n\nmodule.exports = function (opts, issue) {\n  if (typeof opts === 'function') {\n    issue = opts;\n    opts = null;\n  }\n\n  if (typeof issue !== 'function') {\n    throw new Error('OAuth 2.0 password exchange middleware ' +\n      'requires an issue function.');\n  }\n\n  opts = opts || {};\n\n  var userProperty = opts.userProperty || 'user';\n  var separators = opts.scopeSeparator || ' ';\n  var googleConfig = opts.googleConfig || {};\n\n  if (!Array.isArray(separators)) {\n    separators = [ separators ];\n  }\n\n  return function google(req, res, next) {\n    if (!req.body) {\n      return next(new Error('Request body not parsed. ' +\n        'Use bodyParser middleware.'));\n    }\n\n    // The `user` property of `req` holds the authenticated user. In the case\n    // of the token end-point, this property will contain the OAuth 2.0 client.\n    var client = req[userProperty];\n\n    var token = req.body.token;\n    var scope = req.body.scope;\n    if (!token) {\n      return next(new AuthorizationError(\n        'Missing Google token!', 'invalid_request'));\n    }\n\n    // googleConfig.redirect_uri = req.get('origin') || googleConfig.redirect_uri\n    getGoogleProfile(token, function (err, profile) {\n      if (err) {\n        return next(new AuthorizationError(\n          err.message || 'Could not get Google profile using provided token.',\n          'invalid_request'\n        ));\n      }\n\n      if (scope) {\n        for (var i = 0, len = separators.length; i < len; i++) {\n          // Only separates on the first matching separator.\n          // This allows for a sort of separator \"priority\"\n          // (ie, favors spaces then fallback to commas).\n          var separated = scope.split(separators[i]);\n\n          if (separated.length > 1) {\n            scope = separated;\n            break;\n          }\n        }\n\n        if (!Array.isArray(scope)) {\n          scope = [ scope ];\n        }\n      }\n\n      var issued = function (err, accessToken, refreshToken, params) {\n        if (err) {\n          return next(err);\n        }\n\n        if (!accessToken) {\n          return next(new AuthorizationError(\n            'Permissions was not granted.', 'invalid_grant'));\n        }\n\n        var json = { 'access_token': accessToken };\n\n        if (refreshToken) {\n          json['refresh_token'] = refreshToken;\n        }\n\n        if (params) {\n          objectAssign(json, params);\n        }\n\n        json['token_type'] = json['token_type'] || 'bearer';\n        json = JSON.stringify(json);\n\n        res.setHeader('Content-Type', 'application/json');\n        res.setHeader('Cache-Control', 'no-store');\n        res.setHeader('Pragma', 'no-cache');\n        res.end(json);\n      };\n\n      issue(client, profile, scope, issued);\n    });\n  };\n};\n\n\nfunction getGoogleProfile(accessToken, cb) {\n  request({\n    url: 'https://www.googleapis.com/oauth2/v3/userinfo?access_token=' + accessToken,\n    json: true\n  },\n  function (err, res, body) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (body && body.error) {\n      var msg = body.error.message || 'Could not get Google profile.';\n      return cb(new Error(msg));\n    }\n\n    cb(null, body);\n  });\n}"
      ]
    },
    "mtime": 1520545034000
  }
}