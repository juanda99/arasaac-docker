version: '3'

services:
  frontend:
    image: nginx
    hostname: frontend
    container_name: frontend
    volumes:
      - ./frontend/conf/:/etc/nginx/conf.d:ro
      - ./frontend/code/:/usr/share/nginx/html
      - ${SITEMAP_DIR}:/usr/share/nginx/html/sitemap:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=production
      - traefik.http.routers.frontend.rule=Host(`arasaac.org`, `www.arasaac.org`, `arasaac.es`, `www.arasaac.es`)
    networks:
      - proxy_frontend
    restart: always

  test:
    # image: fholzer/nginx-brotli
    image: nginx
    hostname: test
    container_name: test
    volumes:
      - ./test/conf/:/etc/nginx/conf.d:ro
      - ./test/code/:/usr/share/nginx/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.test.entrypoints=websecure
      - traefik.http.routers.test.tls=true
      - traefik.http.routers.test.tls.certresolver=production
      - traefik.http.routers.test.rule=Host(`test.arasaac.org`, `www.test.arasaac.org`, `test.arasaac.es`, `www.test.arasaac.es`)
    networks:
      - proxy_frontend
    restart: always

  admin:
    image: nginx
    hostname: admin
    container_name: admin
    volumes:
      - ./admin/conf/:/etc/nginx/conf.d:ro
      - ./admin/code/:/usr/share/nginx/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.admin.entrypoints=websecure
      - traefik.http.routers.admin.tls=true
      - traefik.http.routers.admin.tls.certresolver=production
      - traefik.http.routers.admin.rule=Host(`admin.arasaac.org`)
    networks:
      - proxy_frontend
    restart: always

  webstatic:
    image: nginx
    hostname: webstatic
    container_name: webstatic
    volumes:
      - ${MATERIAL_DIR}:/usr/share/nginx/html/materials:ro
      - ${SITEMAP_DIR}:/usr/share/nginx/html/sitemap:ro
      - ./images:/usr/share/nginx/html/images:ro
      - ./docs:/usr/share/nginx/html/docs:ro
      - ./map:/usr/share/nginx/html/map:ro
      - ./lim:/usr/share/nginx/html/lim:ro
      - ./fonts:/usr/share/nginx/html/fonts:ro
      - ${IMAGE_DIR}:/usr/share/nginx/html/pictograms:ro
      - ./locutions:/usr/share/nginx/html/locutions:ro
      - ./webstatic-conf/:/etc/nginx/conf.d:ro
      - ./LSE_acepciones:/usr/share/nginx/html/lse-acepciones:ro
      - ./LSE_definiciones:/usr/share/nginx/html/lse-definiciones:ro
      - ./LSE_images:/usr/share/nginx/html/lse-images:ro
      - ./templates:/usr/share/nginx/html/templates:ro
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.serviceheaders.headers.accessControlAllowOriginList=*
      - traefik.http.routers.static.middlewares=serviceheaders
      - traefik.http.routers.static.entrypoints=websecure
      - traefik.http.routers.static.tls=true
      - traefik.http.routers.static.tls.certresolver=production
      - traefik.http.routers.static.rule=Host(`static.arasaac.org`)
    networks:
      - proxy_frontend
    restart: always

  storage:
    image: nginx
    hostname: storage
    container_name: storage
    volumes:
      - ${STORAGE_DIR}:/usr/share/nginx/html

    labels:
      - traefik.enable=true
      - traefik.http.routers.storage.entrypoints=websecure
      - traefik.http.routers.storage.tls=true
      - traefik.http.routers.storage.tls.certresolver=production
      - traefik.http.routers.storage.rule=Host(`storage.arasaaac.org`)
    networks:
      - proxy_frontend
    restart: always

  watcher:
    hostname: watcher
    container_name: watcher
    build:
      context: ./watcher
    command: npm run serve
    volumes:
      - ./watcher:/app
      - ${MATERIAL_DIR}:/materials
      - watcher-libs:/app/node_modules
      - /app/.config
    environment:
      NODE_ENV: $NODE_ENV
    restart: always

  svgwatcher:
    hostname: svgwatcher
    container_name: svgwatcher
    build:
      context: ./svgwatcher
    command: npm run serve
    volumes:
      - ./svgwatcher:/app
      - ${SVG_DIR}:/svg:ro
      - svgwatcher-libs:/app/node_modules
      - /app/.config
      - ${IMAGE_DIR}:/pictograms
    environment:
      NODE_ENV: $NODE_ENV
      CHOKIDAR_USEPOLLING: $CHOKIDAR_USEPOLLING
      OVERWRITE: $OVERWRITE
    restart: always

  sftp:
    hostname: sftp
    container_name: sftp
    image: atmoz/sftp
    env_file:
      - ./.env
    volumes:
      - ./ssh_keys/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key
      - ./ssh_keys/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key
      - ${SVG_DIR}:/home/betaarasaac/svg
      - ${MATERIAL_DIR}:/home/betaarasaac/materials
      - ${IMAGE_DIR}:/home/betaarasaac/pictograms
      - ./images:/home/betaarasaac/images
      - ./fonts:/home/betaarasaac/fonts
      - ./map:/home/betaarasaac/map
      - ./lim:/home/betaarasaac/lim
      - ./docs:/home/betaarasaac/docs
      - ./templates:/home/betaarasaac/templates
      - ${OLDARASAAC_DIR}:/home/betaarasaac/oldarasaac
      - ${STORAGE_DIR}:/home/betaarasaac/storage
    ports:
      - '8005:22'
    command: betaarasaac:${SFTP_PASSWORD}
    networks:
      - proxy_frontend
    restart: always

  prerenderapp:
    hostname: prerenderapp
    container_name: prerenderapp
    build:
      context: ./prerenderapp
    command: npm start
    volumes:
      - ./prerenderapp:/app
      - /app/.config
      - prerenderapp-libs:/app/node_modules
    environment:
      CACHE_MAXSIZE: 10000
      CACHE_TTL: 864000 # 10 days
      ALLOWED_DOMAINS: 'arasaac.org'
    labels:
      - traefik.enable=true
      - traefik.http.routers.prerenderapp.entrypoints=websecure
      - traefik.http.routers.prerenderapp.tls=true
      - traefik.http.routers.prerenderapp.tls.certresolver=production
      - traefik.http.routers.prerenderapp.rule=Host(`prerenderapp.arasaaac.org`)
    restart: always
    networks:
      - proxy_frontend
      - backend

networks:
  proxy_frontend:
    external: true
  backend:
    driver: bridge

volumes:
  watcher-libs:
  svgwatcher-libs:
  prerenderapp-libs:
