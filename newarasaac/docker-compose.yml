version: '3'

services:

  frontend:
    image: nginx
    hostname: frontend
    container_name: frontend
    volumes:
       - ./frontend/conf/:/etc/nginx/conf.d:ro
       - ./frontend/code/:/usr/share/nginx/html
    environment:
      LETSENCRYPT_HOST: "beta.arasaac.org"
      LETSENCRYPT_EMAIL: "juandacorreo@gmail.com"
      VIRTUAL_HOST: "beta.arasaac.org"
    networks:
      - nginxproxy_frontend
  webstatic:
    image: nginx
    hostname: webstatic
    container_name: webstatic
    volumes:
       - ./materials:/usr/share/nginx/html/materials:ro
       - ./images:/usr/share/nginx/html/images:ro
       - ./webstatic-conf/:/etc/nginx/conf.d:ro
    environment:
      LETSENCRYPT_HOST: "static.arasaac.org"
      LETSENCRYPT_EMAIL: "juandacorreo@gmail.com"
      VIRTUAL_HOST: "static.arasaac.org"
    networks:
      - nginxproxy_frontend

  api:
    hostname: api
    container_name: api
    build:
      context: ./api
      dockerfile: dockerfile.yml
    command: yarn debug
    depends_on:
      - mongodb
      - auth
    volumes:
    - ./api:/app
    - ./materials:/app/materials
    - /app/node_modules
    environment:
      LETSENCRYPT_HOST: "api.arasaac.org"
      LETSENCRYPT_EMAIL: "juandacorreo@gmail.com"
      VIRTUAL_HOST: "api.arasaac.org"
      NODE_ENV: "production"
    networks:
      - nginxproxy_frontend
      - backend
    ports:
      - "9229:9229"
  
  auth:
    hostname: auth
    container_name: auth
    build:
      context: ./auth
      dockerfile: dockerfile.yml
    command: npm run debug
    depends_on:
      - mongodb
    volumes:
    - ./auth:/app
    - /app/node_modules
    environment:
      LETSENCRYPT_HOST: "auth.arasaac.org"
      LETSENCRYPT_EMAIL: "juandacorreo@gmail.com"
      VIRTUAL_HOST: "auth.arasaac.org"
      NODE_ENV: "production"
    networks:
      - nginxproxy_frontend
      - backend
    ports:
      - "9228:9229"
      - "5000:80"
  
  watcher:
    hostname: watcher
    container_name: watcher
    build:
      context: ./watcher
      dockerfile: watcher-dockerfile.yml
    command: yarn start
    volumes:
    - ./watcher:/app
    - ./materials:/app/materials
    - /app/node_modules

  mongodb:
    hostname: mongodb
    container_name: mongodb
    image: mongo
    volumes:
      - ./mongodb/dump:/docker-entrypoint-initdb.d
      - ./mongodb/dbdata:/data/db
    networks:
      - backend
    ports:
      - "27000:27017"

networks:
  nginxproxy_frontend:
    external: true
  backend:
    driver: bridge
