swagger: "2.0"
info:
  version: "0.0.1"
  description: "REST API for Arasaac pictograms. WIP!!!"
  title: "API Arasaac"
# during dev, should point to your local machine
host: api.arasaac.org
# basePath prefixes all resource paths 
basePath: /api
# 
schemes:
  # tip: remove http to make production-grade
  - https
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  login:
    type: oauth2
    tokenUrl: https://auth.arasaac.org/oauth/token
    flow: password
    scopes:
      admin: manage users and material approves user uploads
      translator: add translations to materials
      read: search pictos and materials
      write: upload materials
    description:
      For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.  
     A valid JWT token is generated by the API and returned as answer of a call
     to the route /login giving a valid user & password.
parameters:
  IdMaterial:
    name: idMaterial
    description: Material identifier
    type: integer
    in: path
    required: true
  IdPictogram:
    name: idPictogram
    description: Pictogram identifier
    type: integer
    in: path
    required: true
  Locale:
    name: locale
    type: string
    in: path
    required: true
    description: Provides more efficient searches. If you specify a language value of "none", then the text search uses simple tokenization with no list of stop words and no stemming.
    enum: ['es', 'ru', 'ro', 'ara', 'zhs', 'bg', 'pl', 'en', 'fr', 'ca', 'eu', 'de', 'it', 'pt', 'ga', 'br', 'cr', 'val', 'none']
  SearchText:
    name: searchText
    in: path
    description: Text for searching materials. By default, the phrase search makes an OR search on all the specified keywords. In case you would like to perform an exact phrase search (logical AND), you can do so by specifying double quotes in the search text. Prefixing a search keyword with â€“ (minus sign) excludes all the documents that contain the negated term. 
    required: true
    type: string
  User:
    name: user
    in: body
    description: User data for creating a new local user 
    required: true
    schema:
      type: object
      required:
      - name
      - email
      - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        locale:
          type: string
          enum: ["da", "nl", "en", "fi", "fr", "de", "hu", "it", "nb", "pt", "ro", "ru", "es", "sv", "tr", "ara", "prs", "pes", "urd", "zhs", "zht", "none"]
        company:
          type: string
        website:
          type: string
  Plural:
    name: plural
    in: query
    type: boolean
    description: Pictogram in singular or with plural symbol. It should only be applied to pictograms that represent a noun.
  Color:
    name: color
    in: query
    type: boolean
    description: Pictogram in color (default value) or in black and white.
  BackgroundColor:
    name: backgroundColor
    in: query
    type: string
    description: Hexadecimal value to set the background color of the pictogram. The pictograms are transparent by default (value 'none')
  Action:
    name: action
    in: query
    type: string
    enum: ['past', 'present', 'future']
    description: Pictograms in present (default value) or whith an extra symbol for indicating a past or future status. It should only be applied to pictograms that represent an action or a verb.
  Skin:
    name: skin
    in: query
    type: string
    enum: ['white', 'black', 'assian', 'mulatto', 'aztec']
    description: Pictograms in present (default value) or whith an extra symbol for indicating a past or future status. It should only be applied to pictograms that represent an action or a verb.
  Hair:
    name: hair
    in: query
    type: string
    enum: ['blonde', 'brown', 'darkBrown', 'gray', 'darkGray', 'red', 'black']
    description: Pictograms in present (default value) or whith an extra symbol for indicating a past or future status. It should only be applied to pictograms that represent an action or a verb.
  Resolution:
    name: resolution
    in: query
    type: integer
    enum: ['500', '2500']
    description: Pictogram resolution. 500px by default.
  Language:
    name: language
    description: Languages than we currently use for pictograms searches.
    type: string
    in: path
    required: true
    enum: ["es", "ru", "ro", "ar", "zh", "bg", "pl", "en", "fr", "ca", "eu", "de", "it", "pt", "ga", "br", "cr", "val"]
  Days:
    name: days
    description: Material identifier
    type: integer
    in: path
    required: true
    default: 30
  NumItems:
    name: numItems
    description: Number of items
    type: integer
    in: path
    required: true
tags:
  - name: materials
    description: Everything about materiales made with Arasaac pictograms
  - name: pictograms
    description: Everything about Arasaac pictograms
  - name: keywords
    description: words used to classify Arasaac pictograms
  - name: users
    description: everything about Arasaac users
paths:
  /keywords/{language}:
    # our controller name
    x-swagger-router-controller: keywords
    get:
      operationId: getAll
      description: Obtain a list of keywords for pictograms for an specific language (es, en...)
      tags:
      - keywords
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/Language'
      responses:
        "200":
          description: An object with the list of keywords for the specified language.
          schema:
            $ref: '#/definitions/Keywords'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /pictograms/{idPictogram}:
    x-swagger-router-controller: pictograms
    get:
      operationId: getPictogramFileById
      description: Obtain a custom pictogram image based on its identity key and some options like color, resolution, plural...
      tags:
      - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/IdPictogram'
        - $ref: '#/parameters/Plural'
        - $ref: '#/parameters/Color'
        - $ref: '#/parameters/BackgroundColor'
        - $ref: '#/parameters/Action'
        - $ref: '#/parameters/Resolution'
        - $ref: '#/parameters/Skin'
        - $ref: '#/parameters/Hair'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPictogramResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /pictograms/{locale}/{idPictogram}:
    x-swagger-router-controller: pictograms
    get:
      operationId: getPictogramById
      description: Obtain pictogram data based on its identity key. The pictogram url can be generated based on pictogram id value and the resolution desire (300px, 500px or 2500px). For example https://static.arasaac.org/pictograms/2340_2500.png for pictogram with idPictogram 2350 and resolution 2500px.
      tags:
      - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/Locale'
        - $ref: '#/parameters/IdPictogram'
      produces:
        - image/png
      responses:
        "200":
          description: Success

  /pictograms/{locale}/search/{searchText}:
    x-swagger-router-controller: pictograms
    get:
      operationId: searchPictograms
      description: Obtain a list of pictograms based on the searchText. WIP. Currently just for color pictos and singular. The pictogram url can be generated based on pictogram id value and the resolution desire (300px, 500px or 2500px). For example https://static.arasaac.org/pictograms/2340_2500.png for pictogram with idPictogram 2350 and resolution 2500px.
      tags:
      - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/Locale'
        - $ref: '#/parameters/SearchText'

      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Pictograms"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /pictograms/{locale}/days/{days}:
    x-swagger-router-controller: pictograms
    get:
      operationId: getNewPictograms
      description: Obtain pictograms created or updated in the last days.
      tags:
      - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/Locale'
        - $ref: '#/parameters/Days'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Pictograms"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /pictograms/{locale}/new/{numItems}:
    x-swagger-router-controller: pictograms
    get:
      operationId: getLastPictograms
      description: Obtain last modified or publish pictograms.
      tags:
      - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/Locale'
        - $ref: '#/parameters/NumItems'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Pictograms"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /materials/{idMaterial}:
    x-swagger-router-controller: materials
    get:
      operationId: getMaterialById
      description: Obtain a material based on its key.
      tags:
      - materials
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/IdMaterial'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMaterialResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /materials/days/{days}:
    x-swagger-router-controller: materials
    get:
      operationId: getNewMaterials
      description: Obtain materials.
      tags:
      - materials
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/Days'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Materials"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /materials/new/{numItems}:
    x-swagger-router-controller: materials
    get:
      operationId: getLastMaterials
      description: Obtain last modified or publish materials.
      tags:
      - materials
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/NumItems'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Materials"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /materials/{locale}/{searchText}:
    x-swagger-router-controller: materials
    get:
      operationId: searchMaterials
      description: Obtain a list of materials based on the searchText. It will search inside title and description of each material. Locale is only used for search optimization.
      tags:
      - materials
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/Locale'
        - $ref: '#/parameters/SearchText'

      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Materials"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: users
    post:
      operationId: createUser
      description: Create a new user
      tags:
      - users
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/parameters/User'
      responses:
        201:
          description: User created. Email verification sended.
          schema:
            type: object
            required:
              - message
              - _id
            properties:
              message:
                type: string
              _id: 
                type: string
        409:
          description: User already created. Needs email verification.
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/ErrorMessage"
    get:
      operationId: getUsers
      description: Obtain users general data
      tags:
      - users
      security:
        - login: [read, write, admin, translator]
      responses:
        200:
          description: List of verified users
          schema:
            $ref: "#/definitions/Users"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/ErrorMessage"
  /users/profile:
    x-swagger-router-controller: users
    post:
      operationId: setProfile
      description: Update user profile
      tags:
      - users
      security:
        - login: [read, write, admin, translator]
      parameters:
        - $ref: '#/parameters/User'
      responses:
        204:
          description: The profile was updated succesfully.
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/ErrorMessage"
    get:
      operationId: getProfile
      description: Obtain user profile
      tags:
      - users
      security:
        - login: [read, write, admin, translator]
      responses:
        200:
          description: All user specific data&#58; username, email... and their lists of favorites pictos and materials.
          schema:
            $ref: "#/definitions/UserProfile"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/ErrorMessage"
  /users/activate/{url}:
    x-swagger-router-controller: users
    post:
      operationId: activateUser
      description: Activate a new user
      tags:
      - users
      # define the type of response for Success "200" and Error
      parameters:
        - in: path
          name: url
          description: Random generated key for user activation
          required: true
          type: string
      responses:
        201:
          description: Permanent user created.
          schema:
            type: object
            required:
              - message
              - _id
              - name
              - email
              - username
            properties:
              message:
                type: string
              _id: 
                type: string
              name:
                type: string
              email:
                type: string
              username:
                type: string
              locale:
                type: string
        404:
          description: Temporal user not found or expired.
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/ErrorMessage"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:

  Keywords:
    type: object
    properties:
      locale:
        type: string
        enum: ["es", "ru", "ro", "ar", "zh", "bg", "pl", "en", "fr", "ca", "eu", "de", "it", "pt", "ga", "br", "cr", "val"]
        description: Language of the keywords (two letters code), same as requested locale parameter.
      words:
        type: array
        items:
          type: string
  Material:
    required:
      - authors
      - desc
      - files
      - title
    type: object
    properties: 
      _id:
        type: string
      activity: 
        type: array
        items: 
          type: integer
      area: 
        type: array
        items: 
          type: integer
      authors:
        type: array
        items: 
          type: object
      created:
        type: string
        format: date-time
      desc:
        type: string
      downloads:
        type: number
      file:
        type: object
      files:
        type: object
      idMaterial:
        type: integer
      screenshots:
        type: object
      lang:
        type: string
      language:
        type: string
      lastUpdate:
        type: string
        format: date-time
      score:
        type: number
      status:
        type: integer
      title:
        type: string
      translations:
        type: array
        items: 
          type: object
  Materials: 
    type: array
    items: 
      $ref: "#/definitions/Material"
  GetMaterialResponse:
    properties:
      material:
        type: object
  Pictogram:
    required:
      - keywords
      - authors
    type: object
    properties: 
      _id:
        type: string
      id:
        type: integer
      keywords: 
        type: array
        items: 
          type: object
      status: 
        type: string
      lastUpdate:
        type: string
        format: date-time
      created:
        type: string
        format: date-time
      license:
        type: string
      downloads:
        type: integer
      authors: 
        type: array
        items: 
          type: object
      tags:
        type: array
        items:
          type: object
  Pictograms: 
    type: array
    items: 
      $ref: "#/definitions/Pictogram"
  GetPictogramResponse:
    properties:
      material:
        type: object
  User:
    required:
      - email
      - name
    properties: 
      _id:
        type: string
      email: 
        type: string
      name: 
        type: string
      role:
        type: string
      lastlogin: 
        type: string
      company:
        type: string
      website:
        type: string
      locale: 
        type: string
        description: Two letters code
  Users: 
    type: array
    items: 
      $ref: "#/definitions/User"
      
  UserProfile:
    properties: 
      email: 
        type: string
      name: 
        type: string
      username: 
        type: string
      lastlogin: 
        type: string
      locale: 
        type: string
        description: Two letters code
      role:
        type: string
        enum:
          - admin
          - translator
          - user
      materials:
        type: object
      pictos:
        type: object
      provider:
        type: object
  ErrorMessage:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string