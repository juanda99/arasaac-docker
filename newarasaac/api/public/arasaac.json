{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1",
        "description": "REST API for Arasaac pictograms. WIP!!!",
        "title": "API Arasaac"
    },
    "host": "api.arasaac.org",
    "basePath": "/api",
    "schemes": [
        "https",
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "login": {
            "type": "oauth2",
            "tokenUrl": "https://auth.arasaac.org/oauth/token",
            "flow": "password",
            "scopes": {
                "admin": "manage users and material approves user uploads",
                "translator": "add translations to materials",
                "read": "search pictos and materials",
                "write": "upload materials"
            },
            "description": "For accessing the API a valid JWT token must be passed in all the queries in the 'Authorization' header. A valid JWT token is generated by the API and returned as answer of a call to the route /login giving a valid user & password."
        }
    },
    "parameters": {
        "IdMaterial": {
            "name": "idMaterial",
            "description": "Material identifier",
            "type": "integer",
            "in": "path",
            "required": true
        },
        "IdPictogram": {
            "name": "idPictogram",
            "description": "Pictogram identifier",
            "type": "integer",
            "in": "path",
            "required": true
        },
        "Locale": {
            "name": "locale",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Language associated with the searchText and the results.",
            "enum": [
                "es",
                "ru",
                "ro",
                "ar",
                "zh",
                "bg",
                "pl",
                "en",
                "fr",
                "ca",
                "eu",
                "de",
                "it",
                "pt",
                "gl",
                "br",
                "hr",
                "val"
            ]
        },
        "Wordnet": {
            "name": "wordnet",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Wordnet version.",
            "enum": [
                "1.5",
                "1.6",
                "1.7",
                "1.7.1",
                "2.0",
                "2.1",
                "3.0",
                "3.1"
            ]
        },
        "Synset": {
            "name": "synset",
            "in": "path",
            "description": "Wordnet identifier (synset).",
            "required": true,
            "type": "string"
        },
        "SearchText": {
            "name": "searchText",
            "in": "path",
            "description": "Text for searching materials. By default, the phrase search makes an OR search on all the specified keywords. In case you would like to perform an exact phrase search (logical AND), you can do so by specifying double quotes in the search text. Prefixing a search keyword with â€“ (minus sign) excludes all the documents that contain the negated term.",
            "required": true,
            "type": "string"
        },
        "User": {
            "name": "user",
            "in": "body",
            "description": "User data for creating a new local user .",
            "required": true,
            "schema": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "es",
                            "ru",
                            "ro",
                            "ar",
                            "zh",
                            "bg",
                            "pl",
                            "en",
                            "fr",
                            "ca",
                            "eu",
                            "de",
                            "it",
                            "pt",
                            "gl",
                            "br",
                            "hr",
                            "val"
                        ]
                    },
                    "company": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    }
                }
            }
        },
        "Plural": {
            "name": "plural",
            "in": "query",
            "type": "boolean",
            "description": "Pictogram in singular or with plural symbol. It should only be applied to pictograms that represent a noun."
        },
        "Color": {
            "name": "color",
            "in": "query",
            "type": "boolean",
            "description": "Pictogram in color (default value) or in black and white."
        },
        "BackgroundColor": {
            "name": "backgroundColor",
            "in": "query",
            "type": "string",
            "description": "Hexadecimal value to set the background color of the pictogram. The pictograms are transparent by default (value 'none')."
        },
        "Action": {
            "name": "action",
            "in": "query",
            "type": "string",
            "enum": [
                "past",
                "future"
            ],
            "description": "Add an extra symbol for indicating a past or future status. It should only be applied to pictograms that represent an action or a verb."
        },
        "Skin": {
            "name": "skin",
            "in": "query",
            "type": "string",
            "enum": [
                "white",
                "black",
                "assian",
                "mulatto",
                "aztec"
            ],
            "description": "Usefull for pictograms with people. Customize its skin"
        },
        "Hair": {
            "name": "hair",
            "in": "query",
            "type": "string",
            "enum": [
                "blonde",
                "brown",
                "darkBrown",
                "gray",
                "darkGray",
                "red",
                "black"
            ],
            "description": "Usefull for pictograms with people. Customize its hair."
        },
        "Resolution": {
            "name": "resolution",
            "in": "query",
            "type": "integer",
            "enum": [
                500,
                2500
            ],
            "description": "Pictogram resolution. 500px by default."
        },
        "Identifier": {
            "name": "identifier",
            "in": "query",
            "type": "string",
            "enum": [
                "classroom",
                "health",
                "library",
                "office"
            ],
            "description": "Classify the type of pictogram"
        },
        "IdentifierPosition": {
            "name": "identifierPosition",
            "in": "query",
            "type": "string",
            "enum": [
                "left",
                "right"
            ],
            "description": "Identity position. Only applies if an identifier has been provided."
        },
        "Url": {
            "name": "url",
            "in": "query",
            "type": "boolean",
            "description": "Get pictogram url or binary data (default value)"
        },
        "Download": {
            "name": "download",
            "in": "query",
            "type": "boolean",
            "description": "Defines if the pictogram response will be render in the browser or saved as a file (sets header Content Disposition as attachment). Only applies if url parameter is binary data.",
            "default": false
        },
        "Language": {
            "name": "language",
            "description": "Languages than we currently use for pictograms searches.",
            "type": "string",
            "in": "path",
            "required": true,
            "enum": [
                "es",
                "ru",
                "ro",
                "ar",
                "zh",
                "bg",
                "pl",
                "en",
                "fr",
                "ca",
                "eu",
                "de",
                "it",
                "pt",
                "gl",
                "br",
                "hr",
                "val"
            ]
        },
        "Days": {
            "name": "days",
            "description": "Material identifier",
            "type": "integer",
            "in": "path",
            "required": true,
            "default": 30
        },
        "NumItems": {
            "name": "numItems",
            "description": "Number of items",
            "type": "integer",
            "in": "path",
            "required": true
        }
    },
    "tags": [
        {
            "name": "materials",
            "description": "Everything about materiales made with Arasaac pictograms"
        },
        {
            "name": "pictograms",
            "description": "Everything about Arasaac pictograms"
        },
        {
            "name": "keywords",
            "description": "words used to classify Arasaac pictograms"
        },
        {
            "name": "users",
            "description": "everything about Arasaac users"
        }
    ],
    "paths": {
        "/keywords/{language}": {
            "x-swagger-router-controller": "keywords",
            "get": {
                "operationId": "getAll",
                "description": "Obtain a list of keywords for pictograms for an specific language (es, en...)",
                "tags": [
                    "keywords"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object with the list of keywords for the specified language.",
                        "schema": {
                            "$ref": "#/definitions/Suggestions"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pictograms/{idPictogram}": {
            "x-swagger-router-controller": "pictograms",
            "get": {
                "operationId": "getPictogramFileById",
                "description": "Obtain pictogram image file in png format based on its key. Pictogram can be customized with color, resolution, plural...",
                "tags": [
                    "pictograms"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/IdPictogram"
                    },
                    {
                        "$ref": "#/parameters/Plural"
                    },
                    {
                        "$ref": "#/parameters/Color"
                    },
                    {
                        "$ref": "#/parameters/BackgroundColor"
                    },
                    {
                        "$ref": "#/parameters/Action"
                    },
                    {
                        "$ref": "#/parameters/Resolution"
                    },
                    {
                        "$ref": "#/parameters/Skin"
                    },
                    {
                        "$ref": "#/parameters/Hair"
                    },
                    {
                        "$ref": "#/parameters/Url"
                    },
                    {
                        "$ref": "#/parameters/Download"
                    },
                    {
                        "$ref": "#/parameters/Identifier"
                    },
                    {
                        "$ref": "#/parameters/IdentifierPosition"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Pictogram image file in PNG formats",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "500": {
                        "description": "Error generating PNG file",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pictograms/{locale}/{idPictogram}": {
            "x-swagger-router-controller": "pictograms",
            "get": {
                "operationId": "getPictogramById",
                "description": "Obtain pictogram data based on its key (idPictogram). The pictogram image url can be generated based on pictogram key value and the desired resolution (300px, 500px or 2500px). For example https://static.arasaac.org/pictograms/2340_2500.png for pictogram with key 2350 and resolution 2500px.",
                "tags": [
                    "pictograms"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Locale"
                    },
                    {
                        "$ref": "#/parameters/IdPictogram"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error generating pictograms data",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pictograms/{locale}/search/{searchText}": {
            "x-swagger-router-controller": "pictograms",
            "get": {
                "operationId": "searchPictograms",
                "description": "Obtain a list of pictograms based on the searchText. The pictogram url can be generated based on pictogram id value and the resolution desire (300px, 500px or 2500px). There are some variations available for each pictogram using filename parameters (see below). You can see them in use and some more (available using API endpoint *GET /pictograms/{idPictogram}*) at https://beta.arasaac.org/pictograms/en/2349\n\n**Filename parameters**\n- *action* for verbal tense (*past*, *future*)\n- *hair* for hair color (brown *A65E26*, blonde *FDD700*, red *ED4120*, black *020100*, gray *EFEFEF*, darkGray *AAABAB*, darkBrown *6A2703*)\n- *skin* for skin color (white *F5E5DE*, black *A65C17*, assian *F4ECAD*, mulatto *E3AB72*, aztec *CF9D7C*)\n- *plural*\n- *nocolor*\n\n**Examples**\n- https://static.arasaac.org/pictograms/2349/2349_2500.png\n- https://static.arasaac.org/pictograms/2349/2349_action-past_300.png\n- https://static.arasaac.org/pictograms/2349/2349_nocolor_action-past_500.png\n- https://static.arasaac.org/pictograms/2349/2349_plural_nocolor_500.png\n- https://static.arasaac.org/pictograms/2349/2349_action-past_hair-FDD700_500.png\n- https://static.arasaac.org/pictograms/2349/2349_action-future_hair-020100_skin-A65C17_500.png",
                "tags": [
                    "pictograms"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Locale"
                    },
                    {
                        "$ref": "#/parameters/SearchText"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Pictograms"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pictograms/{locale}/wordnet/{wordnet}/id/{synset}": {
            "x-swagger-router-controller": "pictograms",
            "get": {
                "operationId": "getPictogramsBySynset",
                "description": "Obtain a list of pictograms based on the Wordnet identifier (synset). Wordnet version must be provided.",
                "tags": [
                    "pictograms"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Locale"
                    },
                    {
                        "$ref": "#/parameters/Wordnet"
                    },
                    {
                        "$ref": "#/parameters/Synset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Pictograms"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pictograms/{locale}/days/{days}": {
            "x-swagger-router-controller": "pictograms",
            "get": {
                "operationId": "getNewPictograms",
                "description": "Obtain pictograms created or updated in the last days.",
                "tags": [
                    "pictograms"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Locale"
                    },
                    {
                        "$ref": "#/parameters/Days"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Pictograms"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pictograms/{locale}/new/{numItems}": {
            "x-swagger-router-controller": "pictograms",
            "get": {
                "operationId": "getLastPictograms",
                "description": "Obtain last modified or publish pictograms.",
                "tags": [
                    "pictograms"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Locale"
                    },
                    {
                        "$ref": "#/parameters/NumItems"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Pictograms"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/materials/{idMaterial}": {
            "x-swagger-router-controller": "materials",
            "get": {
                "operationId": "getMaterialById",
                "description": "Obtain a material based on its key.",
                "tags": [
                    "materials"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/IdMaterial"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GetMaterialResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/materials/days/{days}": {
            "x-swagger-router-controller": "materials",
            "get": {
                "operationId": "getNewMaterials",
                "description": "Obtain materials.",
                "tags": [
                    "materials"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Days"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Materials"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/materials/new/{numItems}": {
            "x-swagger-router-controller": "materials",
            "get": {
                "operationId": "getLastMaterials",
                "description": "Obtain last modified or publish materials.",
                "tags": [
                    "materials"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/NumItems"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Materials"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/materials/{locale}/{searchText}": {
            "x-swagger-router-controller": "materials",
            "get": {
                "operationId": "searchMaterials",
                "description": "Obtain a list of materials based on the searchText. It will search inside title and description of each material. Locale is only used for search optimization.",
                "tags": [
                    "materials"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Locale"
                    },
                    {
                        "$ref": "#/parameters/SearchText"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Materials"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "x-swagger-router-controller": "users",
            "post": {
                "operationId": "setProfile",
                "description": "Update user profile",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "login": [
                            "read",
                            "write",
                            "admin",
                            "translator"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/User"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The profile was updated succesfully."
                    },
                    "500": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    }
                }
            },
            "get": {
                "operationId": "getProfile",
                "description": "Obtain user profile",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "login": [
                            "read",
                            "write",
                            "admin",
                            "translator"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All user specific data&#58; username, email... and their lists of favorites pictos and materials.",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorMessage"
                        }
                    }
                }
            }
        },
        "/swagger": {
            "x-swagger-pipe": "swagger_raw"
        }
    },
    "definitions": {
        "Suggestions": {
            "type": "object",
            "properties": {
                "locale": {
                    "type": "string",
                    "enum": [
                        "ar",
                        "bg",
                        "br",
                        "ca",
                        "de",
                        "en",
                        "es",
                        "eu",
                        "fr",
                        "gl",
                        "hr",
                        "it",
                        "iw",
                        "nl",
                        "pl",
                        "pt",
                        "ro",
                        "ru",
                        "val",
                        "zh"
                    ],
                    "description": "Language of the keywords, same as requested locale parameter."
                },
                "words": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Material": {
            "required": [
                "authors",
                "desc",
                "files",
                "title"
            ],
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "activity": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "area": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "desc": {
                    "type": "string"
                },
                "downloads": {
                    "type": "number"
                },
                "file": {
                    "type": "object"
                },
                "files": {
                    "type": "object"
                },
                "idMaterial": {
                    "type": "integer"
                },
                "screenshots": {
                    "type": "object"
                },
                "lang": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "Materials": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Material"
            }
        },
        "GetMaterialResponse": {
            "properties": {
                "material": {
                    "type": "object"
                }
            }
        },
        "Keyword": {
            "properties": {
                "idKeyword": {
                    "type": "integer"
                },
                "keyword": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "idLocution": {
                    "type": "string"
                },
                "meaning": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "lse": {
                    "type": "integer"
                }
            }
        },
        "Pictogram": {
            "properties": {
                "_id": {
                    "type": "integer"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Keyword"
                    }
                },
                "schematic": {
                    "type": "boolean"
                },
                "sex": {
                    "type": "boolean"
                },
                "violence": {
                    "type": "boolean"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastUpdated": {
                    "type": "string",
                    "format": "date-time"
                },
                "downloads": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "synsets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "desc": {
                    "type": "string"
                }
            }
        },
        "Pictograms": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Pictogram"
            }
        },
        "UserProfile": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "lastlogin": {
                    "type": "string"
                },
                "locale": {
                    "type": "string",
                    "description": "Two letters code"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "translator",
                        "user"
                    ]
                },
                "materials": {
                    "type": "object"
                },
                "pictos": {
                    "type": "object"
                },
                "provider": {
                    "type": "object"
                }
            }
        },
        "ErrorMessage": {
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "err": {
                    "type": "string"
                }
            }
        }
    }
}